[{"title":"Hexo | „Åä„Åô„Åô„ÇÅ„Éó„É©„Ç∞„Ç§„É≥","description":"Hexo „ÅÆ„Åä„Åô„Åô„ÇÅ„Éó„É©„Ç∞„Ç§„É≥","date":"2023-03-05T00:00:00.000Z","emoji":"‚õÖ","tags":["hexo"],"published":true,"body":{"raw":" Hexo„ÅÆ„Åä„Åô„Åô„ÇÅ„Éó„É©„Ç∞„Ç§„É≥„Çí„Åæ„Å®„ÇÅ„Å¶„Åä„Åç„Åæ„Åô„ÄÇ  ### „Éï„Ç°„Ç§„É´„ÅÆÂ§âÊõ¥„Çí„Éñ„É©„Ç¶„Ç∂„Å´Âç≥ÊôÇÂèçÊò†  ```shell npm install -g browser-sync  npm install hexo-browsersync --save ```  ### GitHub page „Å´„Éá„Éó„É≠„Ç§  ```shell npm install hexo-deployer-git --save ```  ### „Çµ„Ç§„Éà„Éû„ÉÉ„Éó‰ΩúÊàê  ```shell npm install hexo-generator-seo-friendly-sitemap --save ```  `_config.yml`„Å´ËøΩË®ò    ‚ñºHexo„Éá„Ç£„É¨„ÇØ„Éà„É™   `_config.yml`    ```yml sitemap:   path: sitemap.xml   tag: true   category: true ```  ### robots.txtÁîüÊàê  ```shell pm install hexo-generator-robotstxt --save ```  ‚ñºHexo„Éá„Ç£„É¨„ÇØ„Éà„É™    `_config.yml`    ```yml robotstxt:   useragent: \"*\"   disallow:     - /about/     - /gallery/     - /privacy-policy/     - /archives/     - /css/     - /img/     - /js/   allow:   sitemap: /sitemap.xml ``` "},"_id":"blog/31-recommended-plugins-hexo.mdx","_raw":{"sourceFilePath":"blog/31-recommended-plugins-hexo.mdx","sourceFileName":"31-recommended-plugins-hexo.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/31-recommended-plugins-hexo"},"type":"Post","slug":"/blog/31-recommended-plugins-hexo","slugAsParams":"31-recommended-plugins-hexo"},{"title":"VBS | Delete specified file or folder.","description":"Sample source code of a function to delete files and folders using VBS","date":"2020-02-23T00:00:00.000Z","emoji":"üê∂","tags":["vbs"],"published":true,"body":{"raw":" Here is a sample source code of a function to delete files and folders using VBS.  ## Sample Code  ```vb Option Explicit  DeleteFolder \"C:\\sample\" DeleteFile \"C:\\test\\test.txt\"  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' @brief : Delete the specified file. ' @note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Sub DeleteFile (ByVal strFile)   Dim objFso  Set objFso = CreateObject(\"Scripting.FileSystemObject\")   ' delete file  objFso.DeleteFile strFile,True   Set objFso = Nothing  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' @brief : Delete the specified folder. ' @note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Sub DeleteFolder (ByVal strFolder)   Dim objFso  Set objFso = CreateObject(\"Scripting.FileSystemObject\")   ' delete folder  objFso.DeleteFolder strFolder,True    Set objFso = Nothing  End Sub ```  ## Additional information.  `FileSystemObject.DeleteFolder` Function:    - Parameter 1:    - Folder to be deleted. - Parameter 2:   - True: Delete read-only files as well.   - False (default): Do not delete read-only files."},"_id":"blog/1-delete-file-folder-vbs.mdx","_raw":{"sourceFilePath":"blog/1-delete-file-folder-vbs.mdx","sourceFileName":"1-delete-file-folder-vbs.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/1-delete-file-folder-vbs"},"type":"Post","slug":"/blog/1-delete-file-folder-vbs","slugAsParams":"1-delete-file-folder-vbs"},{"title":"VBS | Getting the current folder.","description":"Sample source code of a function in VBS to retrieve the path of the current folder","date":"2020-02-24T00:00:00.000Z","emoji":"üìÅ","tags":["vbs"],"published":true,"body":{"raw":" Here is a sample source code of a function in VBS to retrieve the path of the current folder.  ## Sample Code  ```vb Option Explicit  Msgbox GetCurrentDirectory()  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' breif : Getting the current folder ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Function GetCurrentDirectory()      Dim objWshShell     ' WshShell object      Set objWshShell = WScript.CreateObject(\"WScript.Shell\")     If Err.Number <> 0 Then         WScript.Echo \"error: \" & Err.Description         wscript.quit(1)     End If     GetCurrentDirectory = objWshShell.CurrentDirectory  End Function ```  ## Explanation  This script retrieves the current folder (also known as the current directory) in which the VBS file (executable file) is located.  *Note: The terms \"current folder\" and \"current directory\" are used interchangeably.*"},"_id":"blog/2-get-current-folder-vbs.mdx","_raw":{"sourceFilePath":"blog/2-get-current-folder-vbs.mdx","sourceFileName":"2-get-current-folder-vbs.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/2-get-current-folder-vbs"},"type":"Post","slug":"/blog/2-get-current-folder-vbs","slugAsParams":"2-get-current-folder-vbs"},{"title":"VBS | Retrieving Data from an ini File","description":"This guide explains how to retrieve data stored in a Config.ini file.","date":"2020-02-25T00:00:00.000Z","emoji":"üîß","tags":["vbs"],"published":true,"body":{"raw":" This guide explains how to retrieve data stored in a Config.ini file.  ## Folder Structure Retrieve data contained within the Config.ini as shown in the structure below:  ``` textfile Any Folder  ‚îú Config.ini  ‚îî GetIniData.vbs ```  ## Sample Source  Config.ini:  ``` ini [test1] data1=00000 data2=11111 [test2] data3=abcde data4=fghij ```  GetIniData.vbs:  ``` vb Option Explicit  Msgbox GetIniData(GetCurrentDirectory() & \"\\Config.ini\", \"test1\", \"data1\")  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief: Get the current directory. ' note:  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Function GetCurrentDirectory()      Dim objWshShell     ' WshShell object      Set objWshShell = WScript.CreateObject(\"WScript.Shell\")     If Err.Number <> 0 Then         WScript.Echo \"Error: \" & Err.Description         wscript.quit(1)     End If     GetCurrentDirectory = objWshShell.CurrentDirectory  End Function  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief: Retrieve data from an INI file using section name and parameter name. ' note : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Function GetIniData(strIniFileName, strSection, strKey)      Dim objFSO, objIniFile, objSectionDic, strReadLine, objKeyDic, arrReadLine     Dim strTempSection, objTempdic      ' File I/O constants     Const conForReading = 1, conForWriting = 2, conForAppending = 8     Set objFSO = CreateObject(\"Scripting.FileSystemObject\")      ' Open the file     Set objIniFile = objFSO.OpenTextFile(strIniFileName, conForReading, False)     If Err.Number <> 0 Then         ' Output an error message         wscript.echo \"INI File Name: \" & strIniFileName         wscript.quit(1)     End If      ' Create a storage Dictionary object     Set objSectionDic = CreateObject(\"Scripting.Dictionary\")      ' Read from the file     strReadLine = objIniFile.ReadLine     Do While objIniFile.AtEndofStream = False         ' Search for the start of a statement         If (strReadLine <> \" \") And (StrComp(\"[]\", (Left(strReadLine, 1) & Right(strReadLine, 1))) = 0) Then             ' Retrieve the section name             strTempSection = Mid(strReadLine, 2, (Len(strReadLine) - 2))             ' Create a Dictionary object for keys             Set objKeyDic = CreateObject(\"Scripting.Dictionary\")             ' Loop until the end of the file             Do While objIniFile.AtEndofStream = False                 strReadLine = objIniFile.ReadLine                 If (strReadLine <> \"\") And (StrComp(\";\", Left(strReadLine, 1)) <> 0) Then                     ' Exit loop when the next statement starts                     If StrComp(\"[]\", (Left(strReadLine, 1) & Right(strReadLine, 1))) = 0 Then                         Exit Do                     End If                     ' Store definitions within a section in the Dictionary object                     arrReadLine = Split(strReadLine, \"=\", 2, vbTextCompare)                     objKeyDic.Add UCase(arrReadLine(0)), arrReadLine(1)                 End If             Loop             ' Store in the object             objSectionDic.Add UCase(strTempSection), objKeyDic         Else             strReadLine = objIniFile.ReadLine         End If     Loop     ' Close the file     objIniFile.Close      ' Retrieve data corresponding to the specified section and parameter from the INI array     strSection = UCase(strSection)  ' Convert to uppercase     strKey = UCase(strKey)          ' Convert to uppercase      If objSectionDic.Exists(strSection) Then         Set objTempdic = objSectionDic.Item(strSection)         If objTempdic.Exists(strKey) Then             GetIniData = objSectionDic(strSection)(strKey)             Exit Function         End If     End If     GetIniData = \"\"  End Function ```  ## Explanation  When extracting data from an INI file, each data from the `Settings.ini` is stored in a dictionary object. Then, you retrieve the data based on the section (e.g., `[test1]`) and parameter name (e.g., `data1`).  In the provided sample, the code is set to read an INI file from the current directory. If you want to reference a different folder, you can modify the code to specify the path of the INI file."},"_id":"blog/3-get-ini-data-vbs.mdx","_raw":{"sourceFilePath":"blog/3-get-ini-data-vbs.mdx","sourceFileName":"3-get-ini-data-vbs.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/3-get-ini-data-vbs"},"type":"Post","slug":"/blog/3-get-ini-data-vbs","slugAsParams":"3-get-ini-data-vbs"},{"title":"Scrolling the code embedded in a post of the WordPress Hestia theme horizontally.","description":"This is an article for those using the WordPress theme \"Hestia. \"When embedding source code on a post page, is there a concern that it might wrap and become hard to read?","date":"2020-02-26T00:00:00.000Z","emoji":"üêµ","tags":["wordpress","css"],"published":true,"body":{"raw":" This is an article for those using the WordPress theme \"Hestia.\"  When embedding source code on a post page, is there a concern that it might wrap and become hard to read?  This time, we will explain a solution using additional CSS.  Added on 3/22/2020: It has been discovered that by \"‚ë† selecting the (source code) block\" and then choosing \"‚ë° change block type to Preformatted, \" you can achieve scrollability. This feature is sufficient.  ![image](/blog/4/seikeizumi.png)  ## Making Source Code Display on the Web More Readable  If you have lengthy code samples displayed horizontally like the one below, they might automatically wrap and become difficult to read.  ```py def __line(self, message):     if len(self.line_notify_token) > 0:         requests.post('https://notify-api.line.me/api/notify', headers={'Authorization': 'Bearer ' + self.line_notify_token}, data={'message': '\\n' + message}) ```  ## Additional CSS Setup  Now, let's set up additional CSS to achieve horizontal scrolling for the source code. First, navigate to the Customizer of WordPress and go to the edit screen for additional CSS.  ![image](/blog/4/main.png)  Next, enter the following code:  ![image](/blog/4/add_css.png)  ```css pre.scrollable-code {     overflow-x: auto;     margin-bottom: 1em;     white-space: pre;     max-width: 770px;     word-wrap: normal; } ```  ## Editing Code in the Post Editor  To apply the additional CSS, edit the code directly in the post editor. On the post editing screen, switch to the \"Code Editor\" view.  ![image](/blog/4/code_editer. PNG)  Since it will display HTML, look for the block where you embedded the source code.   It's the part enclosed in `<pre class=\"wp-block-code\"><code>...</code></pre>`.  ```html <!-- wp:code --> <pre class=\"wp-block-code\"><code>    def __line(self, message):         if len(self.line_notify_token) > 0:             requests.post('https://notify-api.line.me/api/notify', headers={'Authorization': 'Bearer ' + self.line_notify_token}, data={'message': '\\n' + message}) </code></pre> <!-- /wp:code --> ```  For the above code, do the following two things: 1. Change the `pre class` from \"wp-block-code\" to \"scrollable-code\". 2. Remove the ``<wp:code></wp:code>`` tags.  It should look like the code below:  ```html <!-- wp:code --> <pre class=\"scrollable-code\">    def __line(self, message):     if len(self.line_notify_token) > 0:         requests.post('https://notify-api.line.me/api/notify', headers={'Authorization': 'Bearer ' + self.line_notify_token}, data={'message': '\\n' + message}) </pre> <!-- /wp:code --> ```  Here is the completed code sample with horizontal scrolling support:  ![image](/blog/4/sample.png)  That's all. "},"_id":"blog/4-scroll-code-wordpress-hestia.mdx","_raw":{"sourceFilePath":"blog/4-scroll-code-wordpress-hestia.mdx","sourceFileName":"4-scroll-code-wordpress-hestia.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/4-scroll-code-wordpress-hestia"},"type":"Post","slug":"/blog/4-scroll-code-wordpress-hestia","slugAsParams":"4-scroll-code-wordpress-hestia"},{"title":"VBS | Saving the results selected from Oracle DB to a CSV file","description":"This time, we will explain a program that uses VBS to save data extracted from an Oracle DB into a CSV file.","date":"2020-02-27T00:00:00.000Z","emoji":"üíø","tags":["vbs","oracle"],"published":true,"body":{"raw":" Is there a need to work with data stored in a database (DB) using a different application?  In such cases, one approach is to first extract the DB data into a CSV file and then read that CSV file from the other application.  ![image](/blog/5/db_to_csv.png)  This time, we will explain a program that uses VBS to save data extracted from an Oracle DB into a CSV file.  The source code can be downloaded from here: ‚Üì   [template-vbs/ExportCsvOracle/](https://github.com/atman-33/template-vbs/tree/master/ExportCsvOracle/ \"Github\")  ## Program Workflow  Although the program's main purpose is to save data extracted from a DB into a CSV file, the general workflow is as follows:  ```text ‚ë† Load necessary configuration information. „ÄÄ‚Üì ‚ë° Connect to the Oracle DB. „ÄÄ‚Üì ‚ë¢ Execute SQL containing the SELECT statement. „ÄÄ‚Üì ‚ë£ Save the executed SQL result to a CSV file. „ÄÄ‚Üì ‚ë§ Disconnect from the Oracle DB. ```  ## Package Structure  The program's functionality isn't contained within a single source file. It involves a folder and file structure, as shown below:  ```text ExportCsvOracle/ ‚îúcsv/ ‚îúsql/ ‚îúConfig.ini ‚îîExportCsvOracle.vbs ```  |Folder/File|Description| |:--|:--| |ExportCsvOracle.vbs|Execution program.| |Config.ini|Configuration information for DB connections and folder paths.| |sql (Folder)|Contains files storing the SELECT statements.| |csv (Folder)|Stores CSV files extracted from the DB.|  ## Explanation of Source Code  For program execution, configuration information will be loaded from an INI file.  ‚ñº Config.ini ```ini [source_db] provider=OraOLEDB.Oracle data_source=TESTDB user_id=system password=sys [path] sql_folder=sql csv_folder=csv ```  The INI file in this case contains the following information:  - Connection information to the DB (Oracle) - Folder name (path) for storing SQL statements - Folder name (path) for storing generated CSV files  This information from the INI file is read and stored in variables within the VBS script for later use. For more details on this process, you can refer to a separate article: [VBS | Getting Data from an INI File](/blog/3-get-ini-data-vbs)  ## Connecting to the Oracle DB  In this section, we prepare functions necessary for various operations with the Oracle DB.  ```vb ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief: Connect to the DB (Oracle) ' note : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Sub OpenDBOracle(ByRef objAdoCon, provider, dataSource, user, pass)      If DEBUG_MODE = 1 Then         WScript.Echo \"Connecting to the DB.\"     End If      Dim constr      Set objAdoCon = WScript.CreateObject(\"ADODB.Connection\")      constr = \"Provider=\" & provider & \";Data Source=\" & dataSource _                 & \";User ID=\" & user & \";Password=\" & pass      If DEBUG_MODE = 1 Then         WScript.Echo constr     End If      objAdoCon.ConnectionString = constr     objAdoCon.Open      If DEBUG_MODE = 1 Then         WScript.Echo \"Connected to the DB.\"     End If  End Sub  ' ... (Other DB-related functions) ```  In this context, we will only be using the DB connection and disconnection functions.  You can utilize the variables read from the earlier INI file to perform DB operations like this:  ```vb Dim objAdoCon       ' ADO connection  ' 1. Connect to the DB OpenDBOracle objAdoCon, SDB_PROVIDER, SDB_DATA_SOURCE, SDB_USER, SDB_PASS  ... ... ...  ' 4. Disconnect from the DB CloseDB objAdoCon Set objAdoCon = Nothing ```  ## Executing SQL Statements  Now that we have established a connection to the Oracle DB, let's proceed to explain how to execute SQL statements and retrieve record sets. The workflow for this section is as follows:  Retrieve SQL files from the SQL storage folder **‚Äª One SELECT statement per SQL file**   „ÄÄ‚Üì   Extract SQL statements from SQL files   „ÄÄ‚Üì   Execute SQL statements and retrieve record sets    First, we will prepare functions needed for each step:  ```vb ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief: Execute SQL SELECT statement and retrieve record set ' note : Return -> Record Set ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Function ExcuteSQLgetRS(objAdoCon, strSQL)      Dim objAdoRS  ' Record Set      Set objAdoRS = objAdoCon.Execute(strSQL)      Set ExcuteSQLgetRS = objAdoRS   ' Remember to use Set for objects  End Function  ' ... (Other functions) ```  With these functions, you can proceed to execute SQL statements and retrieve record sets. Though I'll skip detailed explanations, the record set will contain information from the extraction result specified in the SQL SELECT statement.  You can call these functions within your main program code:  ```vb Dim objAdoCon       ' ADO connection Dim strSQLFiles     ' SQL file collection to execute Dim strSQLFile      ' SQL file to execute Dim strSQL          ' SQL to execute Dim objAdoRS        ' ADO record set Dim csvText         ' CSV text obtained from SELECT query  ' 1. Connect to the DB OpenDBOracle objAdoCon, SDB_PROVIDER, SDB_DATA_SOURCE, SDB_USER, SDB_PASS  ' 2. Read SQL file collection strSQLFiles = GetFileNames(SQL_FOLDER_PATH)  ' 3. CSV generation For Each strSQLFile In strSQLFiles                      ' Iterate through each SQL file     strSQL = GetFileText(strSQLFile)                    ' Retrieve the SQL statement     Set objAdoRS = ExcuteSQLgetRS(objAdoCon, strSQL)    ' Execute the SQL statement and get the record set     csvText = GetCSVTextFromRS(objAdoRS)                ' Convert the record set to CSV-formatted text      WriteFile CSV_FOLDER_PATH & \"\\\" & GetBaseName(strSQLFile), csvText, \"csv\"   ' Generate CSV file Next ```  This completes the creation of CSV files.  ## Saving Executed SQL Results to CSV Files  Until now, the SQL results have been stored in a record set. However, to save the data in CSV format, you need to convert the record set into a text format compatible with CSV.  The workflow here is as follows  :  ‚ë† Convert the record set to CSV (text)   „ÄÄ‚Üì   ‚ë° Write the converted text to a CSV file    ```vb ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief: Convert record set to CSV ' note : Return -> CSV-formatted text ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Function GetCSVTextFromRS(ByRef objAdoRS)      Dim csvText     Dim i      csvText = \"\"     Do While objAdoRS.EOF <> True          For i = 0 to objAdoRS.fields.count -1             If i <> objAdoRS.fields.count -1 then                 csvText = csvText & objAdoRS(i).value & \", \"             Else                 csvText = csvText & objAdoRS(i).value             End If         Next         csvText = csvText & vbCrLf         objAdoRS.MoveNext     Loop      objAdoRS.Close     Set objAdoRS = Nothing      If DEBUG_MODE = 1 Then         WScript.Echo csvText     End If     GetCSVTextFromRS = csvText  End Function  ' ... (Other functions) ```  You can incorporate these functions into your main program by adding the following code:  ```vb Dim objAdoCon       ' ADO connection Dim strSQLFiles     ' SQL file collection to execute Dim strSQLFile      ' SQL file to execute Dim strSQL          ' SQL to execute Dim objAdoRS        ' ADO record set Dim csvText         ' CSV text obtained from SELECT query  ' 1. Connect to the DB OpenDBOracle objAdoCon, SDB_PROVIDER, SDB_DATA_SOURCE, SDB_USER, SDB_PASS  ' 2. Read SQL file collection strSQLFiles = GetFileNames(SQL_FOLDER_PATH)  ' 3. CSV generation For Each strSQLFile In strSQLFiles                      ' Iterate through each SQL file     strSQL = GetFileText(strSQLFile)                    ' Retrieve the SQL statement     Set objAdoRS = ExcuteSQLgetRS(objAdoCon, strSQL)    ' Execute the SQL statement and get the record set     csvText = GetCSVTextFromRS(objAdoRS)                ' Convert the record set to CSV-formatted text      WriteFile CSV_FOLDER_PATH & \"\\\" & GetBaseName(strSQLFile), csvText, \"csv\"   ' Generate CSV file Next  ' 4. Disconnect from the DB CloseDB objAdoCon Set objAdoCon = Nothing  If DEBUG_MODE = 1 Then     WScript.Echo \"Process completed.\" End If ```  This concludes the explanation. Using this sample as a base, you can easily implement tasks like extracting the latest logs from a table in the database every hour. For automated repetitive execution, consider using the Task Scheduler on Windows. "},"_id":"blog/5-oracle-db-to-csv-vbs.mdx","_raw":{"sourceFilePath":"blog/5-oracle-db-to-csv-vbs.mdx","sourceFileName":"5-oracle-db-to-csv-vbs.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/5-oracle-db-to-csv-vbs"},"type":"Post","slug":"/blog/5-oracle-db-to-csv-vbs","slugAsParams":"5-oracle-db-to-csv-vbs"},{"title":"Power Query | Creating a Calendar for a Specified Period Using Parameter Configuration (Power BI)","description":"When using Power BI, there are instances where you might want to create a calendar based on dates. In this scenario, I'll explain how to automatically generate a calendar for a specified period, which can be quite useful.","date":"2020-03-01T00:00:00.000Z","emoji":"üìä","tags":["powerbi"],"published":true,"body":{"raw":" When using Power BI, there are instances where you might want to create a calendar based on dates. In this scenario, I'll explain how to automatically generate a calendar for a specified period, which can be quite useful.  *Additional Note:* I found that creating the calendar using DAX allows for more flexibility in adding columns. This article serves as a reference for the procedure of utilizing parameters in queries.  ## Calendar Generation Workflow  The steps involve the following workflow:  ‚ë† Parameter Configuration (Considering Multiple Modes)   „ÄÄ‚Üì   ‚ë° Fetching Dates Based on Different Modes   „ÄÄ‚Üì   ‚ë¢ Creating the Calendar    ## Parameter Configuration  For this case, the parameters to be configured are as follows:  ![image](/blog/6/create_calendar.png)  Although it's just specifying a date range, I've added a mode selection feature to accommodate multiple patterns for user convenience.  ### ‚ë† Date Specification Mode  This mode creates a calendar for the specified start and end dates.  ‚ñº Parameter Configuration (Prerequisite)   A_DATE_MODE = 0    ‚ñº Parameter Configuration (Items Requiring Configuration)   B_START_DATE = Any YYYYMMDD [e.g., 20200101]   C_END_DATE = Any YYYYMMDD [e.g., 20200131]    ### ‚ë° Days Ago Mode  This mode creates a calendar starting from today's date and going back a specified number of days.  ‚ñº Parameter Configuration (Prerequisite)   A_DATE_MODE = 1    ‚ñº Parameter Configuration (Items Requiring Configuration)   D_DAYS_AGO = Number of days to go back from today [e.g., -5 (5 days ago)]   E_DAYS_LATER = Number of days to move forward from today [e.g., 2 (2 days later)]    ## Fetching Dates Based on Modes  To calculate dates corresponding to the aforementioned modes, the following approach is taken. The START_DATE and END_DATE are prepared for the later Calendar query.  ![image](/blog/6/template_query.png)  ‚ñº Query: START_DATE  ```text let     // For A_date_mode = 0 (Date Specified)     start_date_0 = Date.FromText(Text.Start(B_START_DATE,4) & \",\" & Text.Middle(B_START_DATE,4,2) & \",\" & Text.End(B_START_DATE,2)),      // For A_date_mode = 1 (Days Ago)     now_1 = DateTime.LocalNow() ,     start_date_1 = DateTime.Date(Date.AddDays(now_1,D_DAYS_AGO)),      // For A_date_mode = 2 (Months Ago)     now_2 = DateTime.LocalNow() ,     start_month_2 = DateTime.Date(Date.AddMonths(now_2,F_MONTHS_AGO)),     start_date_2 = DateTime.Date(Date.AddDays(start_month_2,-Date.Day(start_month_2)+1)),      // Fetching date based on mode     start_date_ori = if A_DATE_MODE = 0 then start_date_0 else (if A_DATE_MODE = 1 then start_date_1 else start_date_2)  in     start_date_ori ```  ‚ñº Query: END_DATE  ```text let     // For A_date_mode = 0 (Date Specified)     end_date_0 = Date.FromText(Text.Start(C_END_DATE,4) & \",\" & Text.Middle(C_END_DATE,4,2) & \",\" & Text.End(C_END_DATE,2)),      // For A_date_mode = 1 (Days Ago)     now_1 = DateTime.LocalNow() ,     end_date_1 = DateTime.Date(Date.AddDays(now_1,E_DAYS_LATER)),      // For A_date_mode = 2 (Months Ago)     now_2 = DateTime.LocalNow() ,     end_date_2 = DateTime.Date(Date.AddDays(now_2,E_DAYS_LATER)),      // Fetching date based on mode     end_date_ori = if A_DATE_MODE = 0 then end_date_0 else (if A_DATE_MODE = 1 then end_date_1 else end_date_2)  in     end_date_ori ```  Create an empty query and use the Advanced Editor to copy and paste the above code to make it usable.  ## Creating the Calendar  The calendar is created for the specified period based on the mode configured in the parameters.  ‚ñº Query: Calendar  ```text let     Source = List.Generate(                     ()=>[Date=START_DATE, DayOfWeek=Date.DayOfWeekName(Date)],                     each [Date]<=END_DATE,                     each [Date=Date.AddDays([Date],1),DayOfWeek=Date.DayOfWeekName(Date)]              ),     Custom = Table.FromRecords(Source),     AddedCustom = Table.AddColumn(Custom, \"YearMonth\", each Number.ToText(Date.Year([Date])) & Text.PadStart(Number.ToText(Date.Month([Date])),2,\"0\")),     InsertedMonthWeek = Table.AddColumn(AddedCustom, \"MonthWeek\", each Date.WeekOfMonth([Date]), Int64.Type) in     InsertedMonthWeek ```  The result of this query will look something like this:  ![image](/blog/6/calendar_sample.png)  This concludes the process of generating a calendar for a specific period.  That's it! "},"_id":"blog/6-custom-calendar-power-query.mdx","_raw":{"sourceFilePath":"blog/6-custom-calendar-power-query.mdx","sourceFileName":"6-custom-calendar-power-query.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/6-custom-calendar-power-query"},"type":"Post","slug":"/blog/6-custom-calendar-power-query","slugAsParams":"6-custom-calendar-power-query"},{"title":"Power Query | How to Load Dynamic SQL Results (Power BI)","description":"I'll explain how to dynamically execute SQL by linking SQL query conditions (e.g., within the WHERE clause) with Power Query parameters.","date":"2020-03-02T00:00:00.000Z","emoji":"üìä","tags":["powerbi"],"published":true,"body":{"raw":" In Power Query, it's common to connect to a database and import SQL results into tables. But what if you want to easily change the SQL query's filtering conditions?  This time, I'll explain how to dynamically execute SQL by linking SQL query conditions (e.g., within the WHERE clause) with Power Query parameters.  ## Query for Executing Dynamic SQL  Here's an example query for executing dynamic SQL:  ```text let // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- // SQL starts here sql1 = \" SELECT   * FROM   test_table WHERE   start_date >= '__start_date__' AND start_date <= '__end_date__' \", // SQL ends here // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----      // Replace SQL variables (e.g., __start_date__ and __end_date__)     sql2 = Text.Replace(sql1, \"__start_date__\", START_DATE),     sql3 = Text.Replace(sql2, \"__end_date__\", END_DATE),      sql = sql3, // Reassign it as 'sql' to prevent errors      Source = Oracle.Database(DB_NAME, [HierarchicalNavigation=true, Query=sql]) in     Source ```  In this example, the flow of operations is as follows:  ### ‚ë† sql1  ```txst // SQL starts here sql1 = \" SELECT   * FROM   test_table WHERE   start_date &gt;= '__start_date__' AND start_date &lt;= '__end_date__' \", // SQL ends here ```  This section contains the base SQL (enclosed within // ---). The parts you want to change dynamically are marked as variables (e.g., `__start_date__` and `__end_date__`).  ### ‚ë° sql2  ```text sql2 = Text.Replace(sql1, \"__start_date__\", START_DATE) ```  `sql2` replaces `__start_date__` in `sql1` with `START_DATE` (a parameter). In this example, `START_DATE` holds a string in the format YYYYMMDD.  ### ‚ë¢ sql3  ```text sql3 = Text.Replace(sql2, \"__end_date__\", END_DATE) ```  `sql3` replaces `__end_date__` in `sql2` with `END_DATE` (a parameter). In this example, `END_DATE` holds a string in the format YYYYMMDD.  ### ‚ë£ sql and Source  ```text     sql = sql3, // Reassign it as 'sql' to prevent errors      Source = Oracle.Database(DB_NAME, [HierarchicalNavigation=true, Query=sql]) ```  `sql3` is stored in `sql`, and then it's applied as an argument to the `Oracle.Database` function. In this example, `DB_NAME` holds the database name (schema).  ___  When you try this, make sure to prepare the necessary parameters and paste the code from an empty query into the Advanced Editor.  By changing parameter settings, you can dynamically modify the SQL extraction results. That's it!"},"_id":"blog/7-dynamic-sql-power-query.mdx","_raw":{"sourceFilePath":"blog/7-dynamic-sql-power-query.mdx","sourceFileName":"7-dynamic-sql-power-query.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/7-dynamic-sql-power-query"},"type":"Post","slug":"/blog/7-dynamic-sql-power-query","slugAsParams":"7-dynamic-sql-power-query"},{"title":"WSF | Executing Processing by Combining and Loading Multiple VBS Scripts (Batch, WSF, VBS Integration)","description":"I will explain how to use it as a package to call multiple VBS files together using WSF.","date":"2020-03-03T00:00:00.000Z","emoji":"üñ•Ô∏è","tags":["wsf","vbs"],"published":true,"body":{"raw":" WSF is an XML file that allows you to consolidate multiple scripts. This enables the reusability of VBS scripts created for various functions, making it extremely convenient. (Additionally, it allows coexistence of JScript and VBS.)  This time, I will explain how to use it as a package to call multiple VBS files together.  [**Source Code is here**](https://github.com/atman-33/template-vbs/tree/master/ExportCsvOracleWsf)  ## Package Structure  Similar to the functionality previously covered in the article [**„ÄêVBS„ÄëSaving SELECT Results from Oracle DB to CSV**](/blog/5-oracle-db-to-csv-vbs) but using a combination of batch, WSF, and VBS, we will achieve the same functionality.  First, let's look at the package structure.  ![image](/blog/8/package.png)  ‚ñº `wsf_oracledb_to_csv` Folder  ```text Main.bat               Main execution file OraclToCsv.wsf         File for loading various VBS Config.ini             File containing various configuration information sql                    SQL statements to extract data from the DB csv                    Folder to store CSV files extracted from the DB vbs                    Folder to store VBS classes and modules ‚îî common               Folder for common classes and modules    ‚îú DatabaseOracle.vbs Oracle DB operation-related class    ‚îú fso.vbs            Functions to manipulate files and folders    ‚îî ini.vbs            Functions to manipulate ini files ```  The WSF file is where VBS scripts are loaded together, allowing you to work with individual functions and classes.  ## Source Code Explanation  Now, let's explain the code for the WSF and BAT files (we'll skip the VBS files as they have already been explained in a separate article).  ### WSF File  WSF files are written in XML format.  In this example, we've referenced classes and functions from various VBS files required for DB connection and CSV output.  ‚ñº `oracledb_to_csv.wsf`  ```wsf <job> <script language=\"vbscript\" src=\".\\vbs\\common\\ini.vbs\"/> <script language=\"vbscript\" src=\".\\vbs\\common\\fso.vbs\"/> <script language=\"vbscript\" src=\".\\vbs\\common\\DatabaseOracle.vbs\"/> <script language=\"vbscript\">      ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     ' brief: Save the results extracted from Oracle DB using a SELECT statement to a CSV     ' note:     ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----      ' Const INI_FILE = \"Config.ini\"     ' Ini file name (can be specified in the BAT file)      Dim SQL_FOLDER_PATH, CSV_FOLDER_PATH     Dim SDB_PROVIDER, SDB_DATA_SOURCE, SDB_USER, SDB_PASS      Dim ini     ' ini = GetCurrentDirectory() & \"\\\" & INI_FILE     ini = GetCurrentDirectory() & \"\\\" & Wscript.Arguments(0)      ' #### #### #### #### #### #### #### #### #### #### #### #### #### #### ####     ' 0. Read the INI file ‚Äª Save it in the same folder as the executing VBS file     SDB_PROVIDER = GetIniData(ini, \"source_db\", \"provider\")     SDB_DATA_SOURCE = GetIniData(ini, \"source_db\", \"data_source\")     SDB_USER = GetIniData(ini, \"source_db\", \"user_id\")     SDB_PASS = GetIniData(ini, \"source_db\", \"password\")      SQL_FOLDER_PATH = GetCurrentDirectory() & \"\\\" & GetIniData(ini, \"path\", \"sql_folder\")     CSV_FOLDER_PATH = GetCurrentDirectory() & \"\\\" & GetIniData(ini, \"path\", \"csv_folder\")     ' #### #### #### #### #### #### #### #### #### #### #### #### #### #### ####      Dim objDBOracle     ' Oracle connection class     Dim strSQLFiles     ' Group of SQL files to execute     Dim strSQLFile      ' SQL file to execute     Dim strSQL          ' SQL to execute     Dim objAdoRS        ' ADO Recordset     Dim csvText         ' CSV text content obtained from SELECT using SQL      WScript.Echo \"Processing started.\"      ' 1. DB connection     Set objDBOracle = New DatabaseOracle     objDBOracle.OpenDBOracle SDB_PROVIDER, SDB_DATA_SOURCE, SDB_USER, SDB_PASS      ' 2. Read SQL files     strSQLFiles = GetFileNames(SQL_FOLDER_PATH)      ' 3. Generate CSV     For Each strSQLFile In strSQLFiles         WScript.Echo strSQLFile         strSQL = GetFileText(strSQLFile)         objDBOracle.excuteSQLgetRS strSQL         csvText = objDBOracle.getCSVTextFromRS()          writeFile CSV_FOLDER_PATH & \"\\\" & GetBaseName(strSQLFile), csvText, \"csv\"     Next      ' 4. Disconnect from DB     objDBOracle.closeDB     Set objDBOracle = Nothing      WScript.Echo \"Processing completed.\"  </script> </job> ```  As shown above, you can load multiple VBS files within a WSF file, and you can also directly include VBS scripts in the WSF file itself.  ### BAT File  ‚ñº `main.bat`  ```batch @echo off  rem To use variables within if and for loops, you can use ! instead of % @setlocal enabledelayedexpansion  rem ---- Configuration ---- set script=OracleToCsv.wsf set ini=Config.ini  cd %~dp0 Cscript %script% %ini%  pause ```  With this setup, the message boxes won't appear when launching the WSF file, and the processing will proceed as intended.\" "},"_id":"blog/8-call-vbs-wsf.mdx","_raw":{"sourceFilePath":"blog/8-call-vbs-wsf.mdx","sourceFileName":"8-call-vbs-wsf.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/8-call-vbs-wsf"},"type":"Post","slug":"/blog/8-call-vbs-wsf","slugAsParams":"8-call-vbs-wsf"},{"title":"JavaScript | Sample of a Shooting Game Using CreateJS and Classes","description":"I tried creating a 'shooting game' using CreateJS and classes (object-oriented).","date":"2020-03-06T00:00:00.000Z","emoji":"üõ∏","tags":["javascript"],"published":true,"body":{"raw":" I tried creating a 'shooting game' using CreateJS and classes (object-oriented).  2020/03/06 Update: I found an issue where declaring fields outside the JavaScript constructor doesn't work on mobile browsers, so I made corrections.  ## Overview This game allows you to move your character using the mouse or touch screen and shoot bullets to defeat enemy aircraft.  [Play the sample game](https://atman-33.github.io/shooting-game-js/)  [Here is the source code](https://github.com/atman-33/shooting-game-js)  ![image](/blog/9/thumbnail.png)  ## Package Structure The structure is as follows:  This time, I prepared three classes, Player (your character), Enemy (opponents), and Bullet (projectiles), inside the 'js/class' folder.  ```text js-shooting-game ‚îú index.html ‚îú css ‚îÇ  ‚îîbase.css ‚îî js    ‚îîclass „ÄÄ    ‚îúPlayer.js „ÄÄ    ‚îúEnemy.js „ÄÄ    ‚îîBullet.js ```  ## Source Code Explanation Each JavaScript class is contained in a separate file, following the Java style. You can include these class files in your main program HTML file (in this case, index.html) to use them.  ### ‚ë† Beginning of the Main Program index.html serves as the page where the shooting game runs. Here, various CSS and JavaScript files are loaded to make the program work.  ```html <html> <head>     <meta charset=\"utf-8\" />     <link rel=\"stylesheet\" href=\"css/base.css\" />      <script src=\"//code.createjs.com/1.0.0/createjs.min.js\"></script>     <script src=\"js/class/Player.js\"></script>     <script src=\"js/class/Bullet.js\"></script>     <script src=\"js/class/Enemy.js\"></script>      <script type=\"text/javascript\">      // The main program continues below     // ...     // ...     // ...  ```  The CreateJS library is loaded initially, allowing you to use CreateJS objects, including the classes you've created.  **Note:** The \"//code.createjs.com/1.0.0/createjs.min.js\" URL format supports both \"http://\" and \"https://\" protocols.  ### ‚ë° Player Class The Player class has the following functionalities:  - Movement to the mouse position - Experience points gained when defeating enemies  **Note:** While one of the expected functionalities for the player is shooting bullets, you've kept that functionality in the main program (index.html) for the sake of simplicity.  Here's the Player.js code:  ```js // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- // Brief: Player Class // Note: ... // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- class Player extends createjs.Shape {     // getters     getX() { return this.x; }   // Return X position.     getY() { return this.y; }   // Return Y position.     getLevel() { return this.level }     getExp() { return this.exp }      // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     // Brief: Constructor     // Note: ...     // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     constructor() {         super();    // Call the parent class constructor          this.x = 0;         this.y = 0;         this.exp = 0;         this.level = 1;          // Define the shape of the player         this.graphics.beginFill(\"white\").moveTo(0, -10).lineTo(-5, 0).lineTo(5, 0).closePath();     }      // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     // Brief: Move the player.     // Note: ...     // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     move(stage) {         // Move the player to the mouse coordinates (with deceleration)         this.x += (stage.mouseX - this.x) * 0.1;         this.y += (stage.mouseY - this.y) * 0.1;     }      // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     // Brief: Gain experience points.     // Note: ...     // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     addExp(exp) {         this.exp = this.exp + exp;         this.level = Math.ceil(this.exp / 500)     } } ```  The Player class extends createjs.Shape, making createjs.Shape the superclass in this context. This approach allows you to reuse the fields and methods of createjs.Shape.  ### ‚ë¢ Enemy Class The Enemy class is almost identical to the Player class, with one key difference. It includes functionality for collision detection with bullets. This functionality is used in the main program to implement the destruction of enemies when hit by player bullets.  Here's the Enemy.js code:  ```js // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- // Brief: Enemy Class // Note: ... // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- class Enemy extends createjs.Shape {     // getters     getX() { return this.x; }   // Return X position.     getY() { return this.y; }   // Return Y position.      // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     // Brief: Constructor     // Note: ...     // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     constructor(stageW, stageH) {         super();    // Call the parent class constructor          this.x = 0;         this.y = 0;          // Define the shape of the enemy         this.graphics.beginFill(\"red\").moveTo(10, -5).lineTo(10, 5).lineTo(5, 5).lineTo(5, 10)             .lineTo(-5, 10).lineTo(-5, 5).lineTo(-10, 5).lineTo(-10, -5).closePath();          // Generate the enemy randomly from the top of the screen         this.x = stageW * Math.random();         this.y = stageH;     }      // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     // Brief: Move the enemy.     // Note: ...     // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     move() {         // Move the enemy         this.y += 1;     }      // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     // Brief: Collision detection with player bullets.     // Note: ...     // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     collideWith(bullet) {         // Get the local coordinates of the bullet relative to the enemy         var pt = bullet.localToLocal(0, 0, this);          // Perform collision detection         return this.hitTest(pt.x, pt.y);     } } ```  In this code, the localToLocal and hitTest   methods are used for collision detection. These details are simplified for explanation, but essentially, it recalculates the position of bullets relative to the enemy and checks whether their shapes overlap.  ### ‚ë£ Bullet Class The Bullet class is also similar to the Player and Enemy classes.  Here's the Bullet.js code:  ```js // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- // Brief: Bullet Class // Note: ... // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- class Bullet extends createjs.Shape {     // getters     getX() { return this.x; }   // Return X position.     getY() { return this.y; }   // Return Y position.      // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     // Brief: Constructor     // Note: ...     // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     constructor(x, y, level) {         super();    // Call the parent class constructor          this.x = x;         this.y = y;         this.level = level;          // Define the shape of the bullet         this.graphics.beginFill(\"white\").drawCircle(0, 0, 3);     }      // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     // Brief: Move the bullet.     // Note: ...     // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     move() {         // Move the bullet         this.y -= 10 + this.level;     } } ```  ### ‚ë§ Main Program Finally, you have the main program that instantiates and utilizes instances of the Player, Enemy, and Bullet classes.  Here's the continuation of your index.html code:  ```html     // The main program continues here     // ...     // ...     // ...      // Game Over     function showGameOver() {         alert(\"Game Over! Your score was \" + scoreNum + \".\");          // Remove all event listeners         createjs.Ticker.removeAllEventListeners();         stage.removeAllEventListeners();     }      // Game Clear     function showGameClear() {         alert(\"Achievement: \" + scoreNum + \" points! Game Clear!\");          // Remove all event listeners         createjs.Ticker.removeAllEventListeners();         stage.removeAllEventListeners();     } }      </script>  </head> <body>     <canvas id=\"myCanvas\" width=\"540\" height=\"960\"></canvas> </body> </html> ```  In this main program, the initialization and game loop are handled.  - Initialization: The `init` function is executed when the page loads. - Game Loop: The `handleTick` function is called continuously to update the game state, including player movement, enemy generation, bullet movement, collision detection, and updating scores and levels.  This structure and approach are fundamental for developing games and various applications. It's especially useful when creating larger-scale games or applications, as it allows you to organize your code efficiently.  If you have any specific questions or need further clarification on any part of the code, feel free to ask!"},"_id":"blog/9-shooting-game-js.mdx","_raw":{"sourceFilePath":"blog/9-shooting-game-js.mdx","sourceFileName":"9-shooting-game-js.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/9-shooting-game-js"},"type":"Post","slug":"/blog/9-shooting-game-js","slugAsParams":"9-shooting-game-js"},{"title":"How to Apply Updated JavaScript Files in WordPress","description":"When updating JavaScript files within WordPress (a web server), I encountered a situation where the changes were not reflected properly, leading to frustration. To prevent falling into the same situation, I'd like to share the solution I found.","date":"2020-03-07T00:00:00.000Z","emoji":"ü¶í","tags":["wordpress"],"published":true,"body":{"raw":" When updating JavaScript files within WordPress (a web server), I encountered a situation where the changes were not reflected properly, leading to frustration. To prevent falling into the same situation, I'd like to share the solution I found.  ## Problem Encountered In cases like the following source code, where a separate file 'Player.js' is being loaded:  ```html <html> <head>     <meta charset=\"utf-8\" />     <script src=\"js/class/Player.js\"></script>     „Éª     „Éª     „Éª </head> ```  If an issue is found in 'Player.js' and you make changes to it, simply re-uploading the JavaScript file won't reflect the changes on the web browser.  ## Solution To cut to the chase, you need to modify your code as follows:  ```html <html> <head>     <meta charset=\"utf-8\" />     <script src=\"js/class/Player.js?20200306\"></script>     „Éª     „Éª     „Éª </head> ```  Here, I've added '?20200306' after 'Player.js'. You can use any number or identifier after the '?'‚Äîit doesn't matter. It could be the updated date or anything else.  By doing this, the web browser recognizes it as a new JavaScript file, and the changes will be reflected.  ## Cause The data for CSS and JS files is stored in the web browser's cache. Therefore, changes made to files within WordPress might not be reflected. However, as shown in the solution in step 2, adding '?+number' makes the browser treat it as a new file, prompting it to load fresh data.  That's it!\""},"_id":"blog/10-update-javascript-wordpress.mdx","_raw":{"sourceFilePath":"blog/10-update-javascript-wordpress.mdx","sourceFileName":"10-update-javascript-wordpress.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/10-update-javascript-wordpress"},"type":"Post","slug":"/blog/10-update-javascript-wordpress","slugAsParams":"10-update-javascript-wordpress"},{"title":"MQL | Sending JSON Data with the WebRequest Function","description":"This is an article about MQL, a language used for FX trading in MetaTrader 4 (MT4).In this article, we will introduce how to send JSON data using the WebRequest function to make requests to a web server.","date":"2020-03-08T00:00:00.000Z","emoji":"üíπ","tags":["ea","mql"],"published":true,"body":{"raw":" This is an article about MQL, a language used for FX trading in MetaTrader 4 (MT4).  In this article, we will introduce how to send JSON data using the WebRequest function to make requests to a web server.  ## WebRequest Function The WebRequest function is used to send HTTP requests to a specified web server. There are two variations of the WebRequest function with different sets of parameters. In this method, we will use the following type:  ```cpp int  WebRequest(    const string      method,           // HTTP method    const string      url,              // URL    const string      headers,          // Headers    int               timeout,          // Timeout    const char        &data[],          // Array containing the HTTP message body    char              &result[],        // Array containing the server's response data    string            &result_headers   // Server response headers    ); ```  If you want to understand it better, you can also refer to the following website:  [Reference Site](https://yukifx.web.fc2.com/sub/reference/05_common_func/cone/commonfunc_webrequest.html)  ## Sending JSON Data via POST Let's explain the steps to send JSON data via POST using the WebRequest function.  ### ‚ë† Configure WebRequest-Allow URL In MT4, you need to specify the URLs that are allowed for sending web requests.  First, launch MT4 and go to the menu bar, then select \"Tools\" -> \"Options\" -> \"Expert Advisors.\"  In this window, you will find \"Allow WebRequest URLs.\" Check the box and add the URL to which you want to send requests.  ![image](/blog/11/add_url.png)  ___ ### ‚ë° POST JSON Data to the Web Server We will illustrate sending text to a posting-enabled web server.  Suppose you have the following text:  Hello. Goodbye.  To store this text in an MQL String variable, it will look like this:  ```cpp // Text prepared in MQL string text; text = \"Hello.\" + \"\\n\" + \"Goodbye.\" ```  To send this text in JSON format, you need to convert it as follows:  ```json {\"content\":\"Hello.\\nGoodbye.\"} ```  Please note that the \"content\" part is just an example. It can vary depending on the target web server.  You need to convert the text into JSON format like the example above and then load it into the WebRequest function to send the request.  Here's an example in MQL:  ```cpp // Text prepared in MQL string text; text = \"Hello.\" + \"\\n\" + \"Goodbye.\" string headers;  // Convert text to JSON format and send the web request string data; char post[], result[];  // Create the header part headers = \"Content-Type: application/json\\r\\n\";  // Create the body part StringReplace(text, \"\\n\", \"\\\\n\"); data = \"{\\\"content\\\":\\\"\" + text + \"\\\"}\"; ArrayResize(post, StringToCharArray(data, post, 0, WHOLE_ARRAY, CP_UTF8) - 1);  // Send the request int rest = WebRequest(\"POST\", *Web server URL*, headers, 5000, post, result, headers); ```  In the example above, special characters such as line breaks need to be converted into strings that can be recognized by JSON, so be cautious.  That's it!"},"_id":"blog/11-web-request-json-mql.mdx","_raw":{"sourceFilePath":"blog/11-web-request-json-mql.mdx","sourceFileName":"11-web-request-json-mql.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/11-web-request-json-mql"},"type":"Post","slug":"/blog/11-web-request-json-mql","slugAsParams":"11-web-request-json-mql"},{"title":"Javascript | Sample Typing Game","description":"I created a \"Typing Game\" using JavaScript.","date":"2020-03-09T00:00:00.000Z","emoji":"‚å®","tags":["javascript"],"published":true,"body":{"raw":" I created a \"Typing Game\" using JavaScript.  ## Overview This game requires players to type in displayed English words from the keyboard within a time limit.  [**Play Sample Game**](https://atman-33.github.io/typing-game-js/)  [**Source Code Here**](https://github.com/atman-33/typing-game-js)  ![image](/blog/12/typing.png)  ## Project Structure The project structure is as follows:  ```text js_typing_game ‚îú index.html ‚îú css ‚îÇ  ‚îî base.css ‚îî js    ‚îú Common.js    ‚îî class „ÄÄ    ‚îú FlashingText.js „ÄÄ    ‚îî Typing.js ```  ## Source Code Explanation The main file responsible for running the game is `index.html`.  Here is an overview of the functionality of each file, so you can get a grasp of the major components:  ```text index.html       - Main game logic base.css         - Styling for the game screen and keyboard Common.js        - Text loading for questions FlashingText.js  - Text blinking effect Typing.js        - Typing character validation and keyboard lighting ```  I will primarily explain the key code segments.  ___ ### ‚ë†index.html In this case, I defined the game state (`gameState`) to transition from \"Preparing\" to \"Typing Game\" to \"Game Over\" based on player actions.  ```html <!DOCTYPE html> <html>     <head>         <meta http-equiv=\"content-type\" charset=\"utf-8\">         <link rel=\"stylesheet\" href=\"css/base.css\" />         <script src=\"//code.createjs.com/1.0.0/createjs.min.js\"></script>         <script src=\"js/Common.js\"></script>         <script src=\"js/class/Typing.js\"></script>         <script src=\"js/class/FlashingText.js\"></script>         <script> // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- // JavaScript start  // Typing game state codes const READY = 0;    // Preparing const PLAYING = 1;  // Typing Game const END = 2;      // Game Over  var score = 0;      // Score var timer = 30;     // Timer (seconds)  var countdown = 3;              // Countdown before starting var wordsFile = \"words.txt\";    // Text file containing questions  var gameState = READY;      // Typing game state var typing = new Typing();  // Typing class  var flashingText = new FlashingText(\"input\", \"Press Spacebar!!\", 1000, 500, 0);  var scoreText; var timerText;  var subject;        // Upper text display space: Title var input;          // Lower text display space: Input display content  var statementList;  // List of questions var statement;      // Question text var numOfStatement; // Number indicating which character of the question text  window.addEventListener(\"keydown\", handleKeydown); window.addEventListener(\"keyup\", handleKeyup);  // Execute when the page loads window.onload = function(){      statementList = readTextFileToArray(wordsFile);     typing.insertKeyboard(\"board\");      // 0: Preparing     if(gameState == READY) {          flashingText.flash();   // Display blinking text before starting     } }  // ---- ---- ---- ---- ---- // Key Processing start  // Keydown Processing function handleKeydown(event) {      // Process input characters     var chara = typing.checkWord(event);      // 0: Preparing     if(gameState == READY) {         if(event.keyCode == 32){    // Press spacebar to start             startReady();           // Proceed to preparation before starting         }     }      // 1: Typing Game     if(gameState == PLAYING) {         judgeTyping(chara);         // Check correctness of typed character     } }  // Keyup Processing function handleKeyup(event) {      // Check Caps Lock     var capslock;      if(typing.checkCapsLock(event) == 1) {         capslock = document.getElementById('capslock');         capslock.innerHTML = \"CapsLock ON\";     } else {         capslock = document.getElementById('capslock');         capslock.innerHTML = \"CapsLock OFF\";     } }  // Key Processing end // ---- ---- ---- ---- ----  // Preparation before starting the game function startReady() {      flashingText.setMsg(\"Starting soon...\");     flashingText.setIsFlashing(0);  // Stop blinking      // Display countdown on the subject ID tag     subject = document.getElementById('subject');     subject.innerHTML = countdown;      // Countdown every 1 second     var id = setInterval(function(){         countdown--;         console.log(countdown);          subject.innerHTML = countdown;          if(countdown <= 0){             clearInterval(id);             console.log(\"Finish!\");             gameState = PLAYING;              startTimer();   // Start countdown for remaining time             loadSubject();  // Load the question text         }     }, 1000); }  // Load question text function loadSubject() {      // statementList = [\"Test\", \"Apple\", \"Banana\"];      // Randomly select a question from the list of questions     statement = statementList[Math.floor(Math.random() * statementList.length)];      // Display the question text     subject = document.getElementById('subject');     subject.innerHTML = statement;      // Display the input content     subject = document.getElementById('input');     subject.innerHTML = \"\";      numOfStatement = 0;      // Keyboard highlights correct characters     typing.active(statement, numOfStatement); }  // Start countdown for remaining time function startTimer() {      // Display countdown on the timer ID tag     timerText = document.getElementById('timer');     timerText.innerHTML = \"Remaining Time: \" + timer;       // Countdown every 1 second     var id = setInterval(function(){         timer--;         console.log(timer);          timerText.innerHTML = \"Remaining Time: \" + timer;          if(timer <= 0){             if(gameState == PLAYING) {                 // Game Over processing                 subject = document.getElementById('subject');                 subject.innerHTML = \"---- Game Over ----\";                 gameState = END;                 clearInterval(id);             }         }     }, 1000); }  // Check correctness of typed character function judgeTyping(chara) {     var seikai = statement.substr(numOfStatement, 1);      if(chara == seikai) {         // Correct         score = score + 10;          // Add correct character to input (input ID tag)         var input = document.getElementById('input');         input.innerHTML = input.innerHTML + chara;          // Move to the next character         numOfStatement = numOfStatement + 1;          if(statement.length != numOfStatement) {             // If the question text continues             typing.active(statement, numOfStatement);          } else {             score = score + 50;             // Move to the next question             loadSubject();         }      } else {         // Incorrect, do nothing     }      // Update the score     scoreText = document.getElementById('score');     scoreText.innerHTML = \"Score: \" +   score; }  // JavaScript end // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----         </script>     </head>     <body>         <!-- Panel Display -->         <div id=\"panel\">             <div id=\"score\">Score: 0</div>             <div id=\"timer\">Remaining Time: --</div>             <div id=\"capslock\">CapsLock --</div>             <div id=\"subject\">Typing Game</div>             <div id=\"input\">Input</div>         </div>         <!-- Keyboard Display -->         <div id=\"board\">         </div>     </body>     <foot>      </foot> </html> ```  You might notice that there are relatively few HTML elements in the actual display part of the HTML file. This is because the content for the keyboard display (HTML) is called from `Typing.js`. This decision was made to control keyboard color changes from `Typing.js` for better management.  ___ ### ‚ë°Common.js This file contains a function that reads a specified text file and returns an array. The delimiter used for splitting is the newline character.  ```js // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- // brief: Read a specified file and return an array. // note: Split using newline character. // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- function readTextFileToArray(file) {      var array;      var rawFile = new XMLHttpRequest();     rawFile.open(\"GET\", file, false);     rawFile.onreadystatechange = function ()     {         if(rawFile.readyState === 4)         {             if(rawFile.status === 200 || rawFile.status == 0)             {                 var allText = rawFile.responseText;                 array = allText.split(/[\\r\\n]+/);             }         }     }     rawFile.send(null);      return array; } ```  ___ ### ‚ë¢FlashingText.js This is a class for making text blink in an HTML page.  ```js // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- // brief: Blinking Text Class // note: // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- class FlashingText {      // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     // brief: Constructor     // note: Arguments id -> ID tag in HTML     //                  msg -> Message to be displayed in the ID tag     //                  onTime -> Lighting time [ms]     //                  offTime -> Extinction time [ms]     //                  flag -> 0: Display, 1: Hide     // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     constructor(id, msg, onTime, offTime, flag) {          this.id = id;         this.msg = msg;         this.onTime = onTime;         this.offTime = offTime;         this.flag = flag;          this.isFlashing = 1;    // 1: Blink, 0: Do not blink     }      // setter     setMsg(msg) { this.msg = msg; }     setIsFlashing(isFlashing) {         this.isFlashing = isFlashing;     }      // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     // brief: Make text blink     // note:     // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     flash() {          // Get the text with the specified ID         var element = document.getElementById(this.id);         var interval;      \tif(this.flag == 0){      \t\t// Display the text     \t\telement.innerHTML = this.msg;     \t\tthis.flag = 1;     \t\tinterval = this.onTime;     \t}     \telse{      \t\t// Hide the text     \t\telement.innerHTML = \"\";     \t\tthis.flag = 0;     \t\tinterval = this.offTime;     \t}          if(this.isFlashing == 1 || (this.isFlashing == 0 && this.flag == 0)) {             var self = this;         \tsetTimeout(function() {self.flash();}, interval);         }     } } ```      ___ ### ‚ë£ Typing.js  The key points in this script are that it defines strings for keyboard keys in a dictionary-like format. Furthermore, it handles the lowercase/uppercase states separately for CapsLock since CapsLock can change the case of characters.   Additionally, this class contains a function for highlighting the corresponding keyboard keys (setactive method).  By passing a string as an argument, this class determines the corresponding keyboard keys based on the class attribute in the HTML tags. Therefore, this class needs to be integrated with the HTML (the part that displays the keyboard), but managing it in a separate file would not be ideal for maintenance, so it was designed to display the keyboard keys from within this class.  ```js // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- // brief: Typing Class // note: // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----  var codelist = {8:[\"BackSpase\",\"BackSpace\"], 9:[\"Tab\",\"Tab\"], 13:[\"Enter\",\"Enter\"], 16:[\"Shift\",\"\"], 17:[\"Ctrl\",\"\"]                 , 20:[\"\",\"caps\"], 32:[\" \",\" \"], 45:[\"-\",\"=\"], 48:[\"0\",\"\"], 49:[\"1\",\"!\"], 50:[\"2\",'\"'], 51:[\"3\",\"#\"]                 , 52:[\"4\",\"$\"], 53:[\"5\",\"%\"], 54:[\"6\",\"&\"], 55:[\"7\",\"'\"], 56:[\"8\",\"(\"], 57:[\"9\",\")\"], 58:[\":\",\"*\"]                 , 59:[\";\",\"+\"], 61:[\";\",\"+\"], 64:[\"@\",\"`\"], 65:[\"a\",\"A\"], 66:[\"b\",\"B\"], 67:[\"c\",\"C\"], 68:[\"d\",\"D\"]                 , 69:[\"e\",\"E\"], 70:[\"f\",\"F\"], 71:[\"g\",\"G\"], 72:[\"h\",\"H\"], 73:[\"i\",\"I\"], 74:[\"j\",\"J\"], 75:[\"k\",\"K\"]                 , 76:[\"l\",\"L\"], 77:[\"m\",\"M\"], 78:[\"n\",\"N\"], 79:[\"o\",\"O\"], 80:[\"p\",\"P\"], 81:[\"q\",\"Q\"], 82:[\"r\",\"R\"]                 , 83:[\"s\",\"S\"], 84:[\"t\",\"T\"], 85:[\"u\",\"U\"], 86:[\"v\",\"V\"], 87:[\"w\",\"W\"], 88:[\"x\",\"X\"], 89:[\"y\",\"Y\"]                 , 90:[\"z\",\"Z\"], 92:[\"\\\\\",\"_\"], 96:[\"0\",\"\"], 97:[\"1\",\"\"], 98:[\"2\",\"\"], 99:[\"3\",\"\"], 100:[\"4\",\"\"], 101:[\"5\",\"\"]                 , 102:[\"6\",\"\"], 103:[\"7\",\"\"], 104:[\"8\",\"\"], 105:[\"9\",\"\"], 107:[\";\",\"+\"], 109:[\"-\",\"=\"], 160:[\"^\",\"~\"]                 , 173:[\"-\",\"=\"], 186:[\":\",\"*\"], 187:[\";\",\"+\"], 188:[\",\",\"Ôºú\"], 189:[\"-\",\"=\"], 190:[\".\",\"Ôºû\"], 191:[\"/\",\"?\"]                 , 192:[\"@\",\"`\"], 219:[\"[\",\"{\"], 220:[\"\\\\\",\"_\"], 221:[\"]\",\"}\"], 222:[\"^\",\"~\"], 226:[\"\\\\\",\"_\"], 222:[\"^\",\"~\"]                 , 240:[\"Ëã±Êï∞\",\"\"], 244:[\"Âçä/ÂÖ®\",\"\"]};  var capslist = {8:[\"BackSpase\",\"BackSpace\"], 9:[\"Tab\",\"Tab\"], 13:[\"Enter\",\"Enter\"], 16:[\"Shift\",\"\"], 17:[\"Ctrl\",\"\"]                 , 20:[\"\",\"caps\"], 32:[\" \",\" \"], 45:[\"-\",\"=\"], 48:[\"0\",\"\"], 49:[\"1\",\"!\"], 50:[\"2\",'\"'], 51:[\"3\",\"#\"]                 , 52:[\"4\",\"$\"], 53:[\"5\",\"%\"], 54:[\"6\",\"&\"], 55:[\"7\",\"'\"], 56:[\"8\",\"(\"], 57:[\"9\",\")\"], 58:[\":\",\"*\"]                 , 59:[\";\",\"+\"], 61:[\";\",\"+\"], 64:[\"@\",\"`\"], 65:[\"A\",\"a\"], 66:[\"B\",\"b\"], 67:[\"C\",\"c\"], 68:[\"D\",\"d\"]                 , 69:[\"E\",\"e\"], 70:[\"F\",\"f\"], 71:[\"G\",\"g\"], 72:[\"H\",\"h\"], 73:[\"I\",\"i\"], 74:[\"J\",\"j\"], 75:[\"K\",\"k\"]                 , 76:[\"L\",\"l\"], 77:[\"M\",\"m\"], 78:[\"N\",\"n\"], 79:[\"O\",\"o\"], 80:[\"P\",\"p\"], 81:[\"Q\",\"q\"], 82:[\"R\",\"r\"]                 , 83:[\"S\",\"s\"], 84:[\"T\",\"t\"], 85:[\"U\",\"u\"], 86:[\"V\",\"v\"], 87:[\"W\",\"w\"], 88:[\"X\",\"x\"], 89:[\"Y\",\"y\"]                 , 90:[\"Z\",\"z\"], 92:[\"\\\\\",\"_\"], 96:[\"0\",\"\"], 97:[\"1\",\"\"], 98:[\"2\",\"\"], 99:[\"3\",\"\"], 100:[\"4\",\"\"], 101:[\"5\",\"\"]                 , 102:[\"6\",\"\"], 103:[\"7\",\"\"], 104:[\"8\",\"\"], 105:[\"9\",\"\"], 107:[\";\",\"+\"], 109:[\"-\",\"=\"], 160:[\"^\",\"~\"]                 , 173:[\"-\",\"=\"], 186:[\":\",\"*\"], 187:[\";\",\"+\"], 188:[\",\",\"Ôºú\"], 189:[\"-\",\"=\"], 190:[\".\",\"Ôºû\"], 191:[\"/\",\"?\"]                 , 192:[\"@\",\"`\"], 219:[\"[\",\"{\"], 220:[\"\\\\\",\"_\"], 221:[\"]\",\"}\"], 222:[\"^\",\"~\"], 226:[\"\\\\\",\"_\"], 222:[\"^\",\"~\"]                 , 240:[\"Ëã±Êï∞\",\"\"], 244:[\"Âçä/ÂÖ®\",\"\"]};  var leftcode = {\"!\":\"\", '\"':\"\", \"#\":\"\", \"$\":\"\", \"%\":\"\", \"&\":\"\", \"Q\":\"\", \"W\":\"\", \"E\":\"\", \"R\":\"\", \"T\":\"\", \"A\":\"\", \"S\":\"\"                 , \"D\":\"\", \"F\":\"\", \"G\":\"\", \"Z\":\"\", \"X\":\"\", \"C\":\"\", \"V\":\"\", \"B\":\"\"};  var leftcaps = {\"!\":\"\", '\"':\"\", \"#\":\"\", \"$\":\"\", \"%\":\"\", \"&\":\"\", \"q\":\"\", \"w\":\"\", \"e\":\"\", \"r\":\"\", \"t\":\"\", \"a\":\"\", \"s\":\"\"                 , \"d\":\"\", \"f\":\"\", \"g\":\"\", \"z\":\"\", \"x\":\"\", \"c\":\"\", \"v\":\"\", \"b\":\"\"};  var eachactive = {\"\\\\\":\"220\", \"|\":\"220\", \"_\":\"226\", \";\":\"187\", \"+\":\"187\", \":\":\"186\", \"*\":\"186\"};  var keyboardHTML = ''             + '<table id=\"keyboard\">'             + '<tr class=\"tr  _k\">'             + '  <td class=\"key top1\" id=\"left_20\"><span id=\"caps_20\" class=\"off\">caps</span></td>'             + '  <td class=\"key top1\" id=\"key_49\">1</td>'             + '  <td class=\"key top1\" id=\"key_50\">2</td>'             + '  <td class=\"key top1\" id=\"key_51\">3</td>'             + '  <td class=\"key top1\" id=\"key_52\">4</td>'             + '  <td class=\"key top1\" id=\"key_53\">5</td>'             + '  <td class=\"key top1\" id=\"key_54\">6</td>'             + '  <td class=\"key top1\" id=\"key_55\">7</td>'             + '  <td class=\"key top1\" id=\"key_56\">8</td>'             + '  <td class=\"key top1\" id=\"key_57\">9</td>'             + '  <td class=\"key top1\" id=\"key_48\">0</td>'             + '  <td class=\"key top1\" id=\"key_189\">-</td>'             + '  <td class=\"key top1\" id=\"key_187\">=</td>'             + '  <td class=\"key top1\" id=\"right_8\"><span id=\"backspase_8\">BackSpase</span></td>'             + '</tr>'             + '<tr class=\"tr_k\">'             + '  <td class=\"key top2\" id=\"tab_9\"><span id=\"tab_9\" class=\"off\">Tab</span></td>'             + '  <td class=\"key top2\" id=\"key_81\">Q</td>'             + '  <td class=\"key top2\" id=\"key_87\">W</td>'             + '  <td class=\"key top2\" id=\"key_69\">E</td>'             + '  <td class=\"key top2\" id=\"key_82\">R</td>'             + '  <td class=\"key top2\" id=\"key_84\">T</td>'             + '  <td class=\"key top2\" id=\"key_89\">Y</td>'             + '  <td class=\"key top2\" id=\"key_85\">U</td>'             + '  <td class=\"key top2\" id=\"key_73\">I</td>'             + '  <td class=\"key top2\" id=\"key_79\">O</td>'             + '  <td class=\"key top2\" id=\"key_80\">P</td>'             + '  <td class=\"key top2\" id=\"key_219\">[</td>'             + '  <td class=\"key top2\" id=\"key_221\">]</td>'             + '  <td class=\"key top2\" id=\"key_220\"><span id=\"yen_220\">\\\\</span></td>'             + '</tr>'             + '<tr class=\"tr_k\">'             + '  <td class=\"key top3\" id=\"left_16\"><span id=\"shift_16\" class=\"off\">Shift</span></td>'             + '  <td class=\"key top3\" id=\"key_65\">A</td>'             + '  <td class=\"key top3\" id=\"key_83\">S</td>'             + '  <td class=\"key top3\" id=\"key_68\">D</td>'             + '  <td class=\"key top3\" id=\"key_70\">F</td>'             + '  <td class=\"key top3\" id=\"key_71\">G</td>'             + '  <td class=\"key top3\" id=\"key_72\">H</td>'             + '  <td class=\"key top3\" id=\"key_74\">J</td>'             + '  <td class=\"key top3\" id=\"key_75\">K</td>'             + '  <td class=\"key top3\" id=\"key_76\">L</td>'             + '  <td class=\"key top3\" id=\"key_186\">;</td>'             + '  <td class=\"key top3\" id=\"key_222\">\\'</td>'             + '  <td class=\"key top3\" id=\"key_13\"><span id=\"enter_13\" class=\"off\">Enter</span></td>'             + '</tr>'             + '<tr class=\"tr_k\">'             + '  <td class=\"key top4\" id=\"left_240\"><span id=\"moji_240\" class=\"off\">Ëã±Êï∞</span></td>'             + '  <td class=\"key top4\" id=\"left_17\"><span id=\"ctrl_17\" class=\"off\">Ctrl</span></td>'             + '  <td class=\"key top4\" id=\"left_91\"><span id=\"win_91\" class=\"off\">Win</span></td>'             + '  <td class=\"key top4\" id=\"left_244\"><span id=\"kana_244\" class=\"off\">Âçä/ÂÖ®</span></td>'             + '  <td class=\"key top4\" id=\"key_32\"><span id=\"space_32\" class=\"off\">Space</span></td>'             + '  <td class=\"key top4\" id=\"right_91\"><span id=\"menu_91\" class=\"off\">Menu</span></td>'             + '  <td class=\"key top4\" id=\"right_240\"><span id=\"moji_240\" class=\"off\">Ëã±Êï∞</span></td>'             + '  <td class=\"key top4\" id=\"right_18\"><span id=\"alt_18\" class=\"off\">Alt</span></td>'             + '  <td class=\"key top4\" id=\"left_32\"><span id=\"space_32\" class=\"off\">Space</span></td>'             + '  <td class=\"key top4\" id=\"right_18\"><span id=\"alt_18\" class=\"off\">Alt</span></td>'             + '</tr>'             + '</table>';  class Typing {      // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     // Brief: Constructor     // Note:     // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     constructor() {          this.capslock = \"\"     }      // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     // Brief: Insert the HTML of the keyboard     // Note:     // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     insertKeyboard(id) {         document.getElementById(id).innerHTML = keyboardHTML;     }      // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     // Brief: Get the inputted character     // Note:     // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     checkWord(event) {          var keycode, shiftcode, chara  \t\tkeycode = event.keyCode;         shiftcode = event.shiftKey;          if(this.capslock==1){             chara = this.getCapsChar(keycode, shiftcode);           }else{             chara = this.getChar(keycode, shiftcode);         }          return chara;     }      // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     // Brief: Check CapsLock and retrieve its state     // Note:     // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     checkCapsLock(onKeyUpEvent) {          if(onKeyUpEvent.getModifierState(\"CapsLock\") == false) {             console.log(\"CapsLock OFF\");             this.capslock = 0;         }         else {             console.log(\"CapsLock ON\");             this.capslock = 1;         }          return this.capslock;     }      // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     // Brief: Retrieve a character from the key code and shift state     // Note: CapsLock OFF     // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     getChar(keycode, shiftcode){         var chara;          if(keycode in codeList){             if(shiftcode){                    chara = codeList[keycode][1];             }else{                    chara = codeList[keycode][0];             }         }else{             chara = \"\";         }         return chara;     }      // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     // Brief: Retrieve a character from the key code and shift state     // Note: CapsLock ON     // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     getCapsChar(keycode, shiftcode){         var chara;          if(keycode in capsList){             if(shiftcode){                    chara = capsList[keycode][1];             }else{                    chara = capsList[keycode][0];             }         }else{             chara = \"\";         }         return chara;     }      // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     // Brief: Update the color state of the keyboard     // Note:     // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     active(statement, numOfStatement){          var ichi = numOfStatement;          // Position of the statement (which one)         var mondai = statement;             // The statement         var mondaiLen = statement.length;   // Length of the statement          var left, list;          this.resetActive();         if(this.capslock==1){             // CapsLock: ON             left=leftCaps;             list=capsList;         }else{             // CapsLock: OFF             left=leftCode;             list=codeList;         }         if(ichi!=mondaiLen){             for(var i in list){                 if(list[i][0]==mondai.charAt(ichi)){                     if(mondai.charAt(ichi) in eachActive){                             this.setActive(\"code\"+('00'+eachActive[mondai.charAt(ichi)]).slice(-3),0);                     }else{                             this.setActive(\"code\"+('00'+i).slice(-3),0);                     }                 }else if(list[i][1]==mondai.charAt(ichi)){                     if(mondai.charAt(ichi) == \"_\"){                             this.setActive(\"code226\",0);                     }else if(mondai.charAt(ichi) == \"|\"){                             this.setActive(\"code220\",0);                     }else{                             this.setActive(\"code\"+('00'+i).slice(-3),0);                     }                     if(list[i][1] in left){                             this.setActive(\"code016\",1);                     }else{                             this.setActive(\"code016\",0);                     }                 }             }         }     }      // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     // Brief: Apply color to the target key.     // Note: targetClass -> The class to which color will be applied     //       targetNo    -> If there are multiple targets to be colored, which one to color     // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     setActive(targetClass,targetNo){         var allElements;         var elementName;          var foundElements = new Array();         if (document.all){             allElements = document.all;         }else {             allElements = document.getElementsByTagName(\"*\");         }         var elementsLen;         var j=0;         for(var i=0,elementsLen=allElements.length;i<elementsLen;i++){             elementName = allElements[i].className;             if(elementName.indexOf(targetClass,0) > -1) {                 foundElements[j] = allElements[i];                 j++;             }         }         foundElements[targetNo].style.background=\"#00ffff\";     }      // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     // Brief: Remove the color from the key.     // Note:     // ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----     resetActive(){         var allElements;         var elementName;          if (document.all){             allElements = document.all;         }else {             allElements = document.getElementsByTagName(\"*\");         }         var elementsLen;         for(var i=0,elementsLen=allElements.length;i<elementsLen;i++){             elementName = allElements[i].className;             if(elementName.indexOf(\"table\",0) > -1) {                 allElements[i].style.background=\"#ffffff\";             }         }     } } ```  The script appears to define a JavaScript class called `Typing` that handles keyboard input. It defines dictionaries for keyboard key codes and their corresponding characters in both lowercase and uppercase states. It also defines some other properties and methods related to handling keyboard input.  The script also seems to define HTML markup for a virtual keyboard, including various keys and their IDs.  The `Cursor` class seems to handle the cursor animation and positioning. It sets the cursor's style, position, and visibility. It provides methods for starting and stopping cursor movement and handling text input.  Finally, the script adds a button to the document that toggles the virtual keyboard's visibility when clicked.  To use this script, you would need to integrate it into an HTML document and ensure that the necessary HTML elements and styles are present for the virtual keyboard to work correctly. Additionally, event listeners and handlers may need to be set up to capture keyboard input and update the virtual keyboard accordingly. "},"_id":"blog/12-typing-game-js.mdx","_raw":{"sourceFilePath":"blog/12-typing-game-js.mdx","sourceFileName":"12-typing-game-js.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/12-typing-game-js"},"type":"Post","slug":"/blog/12-typing-game-js","slugAsParams":"12-typing-game-js"},{"title":"Python | Line, Discord,Slack„Å∏„ÅÆÈÄöÁü•„ÇØ„É©„Çπ","description":"Python „ÅßLine„ÄÅDiscord„ÄÅSlack„Å∏„Äé„ÉÜ„Ç≠„Çπ„Éà„É°„ÉÉ„Çª„Éº„Ç∏„Äè„ÇíÈÄÅ„Å£„Å¶ÈÄöÁü•„Åô„Çã„ÇØ„É©„Çπ„ÅÆ„Çµ„É≥„Éó„É´","date":"2020-03-10T00:00:00.000Z","emoji":"üì®","tags":["python"],"published":true,"body":{"raw":" Python „ÅßLine„ÄÅDiscord„ÄÅSlack„Å∏„Äé„ÉÜ„Ç≠„Çπ„Éà„É°„ÉÉ„Çª„Éº„Ç∏„Äè„ÇíÈÄÅ„Å£„Å¶ÈÄöÁü•„Åô„Çã„ÇØ„É©„Çπ„ÇíÁ¥π‰ªã„Åó„Åæ„Åô„ÄÇ  [„Äê„ÇΩ„Éº„Çπ„Ç≥„Éº„Éâ„ÅØ„Åì„Å°„Çâ„Äë](https://github.com/atman-33/notification-python)  ## Ê¶ÇË¶Å API „ÅÆ„Éà„Éº„ÇØ„É≥„ÇÑ Webhook URL „Çí„Çª„ÉÉ„Éà„Åó„ÄÅ„ÉÜ„Ç≠„Çπ„Éà„ÇíË™≠„ÅøËæº„Åæ„Åõ„Çã„Åì„Å®„ÅßÈÄöÁü•„ÇíÈÄÅ„ÇãÊ©üËÉΩ„ÇíÂÇô„Åà„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ## „Éë„ÉÉ„Ç±„Éº„Ç∏ÊßãÊàê „Éë„ÉÉ„Ç±„Éº„Ç∏„Å®„ÅÑ„ÅÜ„Åª„Å©„Åß„ÇÇ„Å™„ÅÑ„Åß„Åô„Åå„ÄÅÈÄöÁü•„ÇØ„É©„ÇπÔºànotification.pyÔºâ„Å®„É°„Ç§„É≥Âá¶ÁêÜÔºàdebug.pyÔºâ„ÇíÊ∫ñÂÇô„Åó„Åæ„Åó„Åü„ÄÇ  ```text py_notification |-notification.py |-debug.py ```  ## „ÇΩ„Éº„Çπ„Ç≥„Éº„ÉâËß£Ë™¨ „É°„Ç§„É≥Âá¶ÁêÜÔºàdebug.pyÔºâ „Åß ÈÄöÁü•„ÇØ„É©„ÇπÔºànotification.pyÔºâ „ÇíÂëº„Å≥Âá∫„Åó„Å¶ÈÄöÁü•„ÇíÂÆüË°å„Åï„Åõ„Åæ„Åô„ÄÇ  ___ ### ‚ë†notification.py  ```py import requests import json  class Notification():     \"\"\"     @brief : ÈÄöÁü•„ÇØ„É©„Çπ     @note  :     \"\"\"     line_notify_token = ''     discord_webhook_url = ''     discord_username = ''     slack_webhook_url = ''     slack_username = ''      def __init__(self):         print(\"Notification „ÇØ„É©„Çπ„Çí„Ç§„É≥„Çπ„Çø„É≥„ÇπÂåñ\")      # ----- LINE, DISCORD, SLACK „Å´„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈÄÅ„Çã„Åü„ÇÅ„ÅÆÂàùÊúüË®≠ÂÆö Èñ¢ÈÄ£----     def set_line(self, token):         self.line_notify_token = token      def set_discord(self, url, username):         self.discord_webhook_url = url         self.discord_username = username      def set_slack(self, url, username):         self.slack_webhook_url = url         self.slack_username = username              # ----- NotifyÔºà„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈÄÅ„ÇãÔºâ Èñ¢ÈÄ£-----     def send_message(self, text) :         try:             self.__line(text)         except:             pass         try:             self.__discord(text)         except:             pass         try:             self.__slack(text)         except:             pass      def __line(self, message):         if len(self.line_notify_token) > 0:             requests.post('https://notify-api.line.me/api/notify', headers={'Authorization': 'Bearer ' + self.line_notify_token}, data={'message': '\\n' + message})             print(message + \" by Line\")      def __discord(self, message):         if len(self.discord_webhook_url) > 0:             requests.post(self.discord_webhook_url, data={'username': self.discord_username, 'content': message})             print(message + \" by Discord\")      def __slack(self, message):         if len(self.slack_webhook_url) > 0:             requests.post(self.slack_webhook_url, data=json.dumps({'username': self.slack_username, 'text':message}))             print(message + \" by Slack\") ```  ___ ### ‚ë°debug.py ```py import sys  # Ëá™‰Ωú„ÇØ„É©„Çπ„ÇíËøΩÂä†„Åô„Çã„Åü„ÇÅ„Å´ÂèÇÁÖßÂÖà„ÇíËøΩÂä† sys.path.append(\"..\") # print(sys.path)  # „ÇØ„É©„ÇπË™≠„ÅøËæº„ÅøÔºöfrom <„Éï„Ç°„Ç§„É´Âêç> import <„ÇØ„É©„ÇπÂêç> from notification import Notification  notify = Notification() line_token          = \"LINE „ÅÆ „Éà„Éº„ÇØ„É≥ „Çí„Åì„Åì„Å´ÂÖ•Âäõ\" discord_webhook_url = \"Discord „ÅÆ Webhook URL „Çí„Åì„Åì„Å´ÂÖ•Âäõ\" slack_webhook_url   = \"Slack „ÅÆ Webhook URL „Çí„Åì„Åì„Å´ÂÖ•Âäõ\"  notify.set_line(line_token) notify.set_discord(discord_webhook_url, \"bot\") notify.set_slack(slack_webhook_url, \"bot\")  notify.send_message(\"test message\") ```  Ë©∞„Åæ„Çä„ÇÑ„Åô„ÅÑ„ÅÆ„Åå„ÄÅËá™‰Ωú„ÇØ„É©„Çπ„ÇíÂëº„Å≥Âá∫„ÅôÁÇπ„Åã„Å®ÊÄù„ÅÑ„Åæ„Åô„ÄÇ ‰ªäÂõû„ÄÅ‰∏ãË®ò„ÅÆ„Çà„ÅÜ„Å´„Åó„Å¶„ÅÑ„Åæ„Åô„Åå„ÄÅ   `from notification import Notification`   `from <„Éï„Ç°„Ç§„É´Âêç> import <„ÇØ„É©„ÇπÂêç>`„ÄÄ„Å®„ÅÑ„ÅÜ„Çà„ÅÜ„Å´ÂØæÂøú„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ    „Åæ„Åü„ÄÅËá™‰Ωú„ÇØ„É©„Çπ„ÇíËøΩÂä†„Åô„ÇãÈöõ„ÅØÂèÇÁÖßÂÖà„Çí syspath.append „ÅßËøΩÂä†„Åô„Çã„Åì„Å®„ÇíÂøò„Çå„Å™„ÅÑ„Çà„ÅÜ„Å´„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ  ‰ª•‰∏ä„Åß„Åô„ÄÇ  ‰ΩôË´á„Åß„Åô„Åå„ÄÅ„ÇÑ„ÅØ„ÇäPython„ÅØÊõ∏„Åç„ÇÑ„Åô„Åè„ÄÅ„Ç≥„Éº„Éâ„Åå„Åç„Çå„ÅÑ„Å†„Å®Êîπ„ÇÅ„Å¶ÊÑü„Åò„Åæ„Åó„Åü„ÄÇ "},"_id":"blog/13-notify-line-discord-slack-python.mdx","_raw":{"sourceFilePath":"blog/13-notify-line-discord-slack-python.mdx","sourceFileName":"13-notify-line-discord-slack-python.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/13-notify-line-discord-slack-python"},"type":"Post","slug":"/blog/13-notify-line-discord-slack-python","slugAsParams":"13-notify-line-discord-slack-python"},{"title":"Python | ÂëΩÂêçË¶èÂâá„Åæ„Å®„ÇÅ","description":"Python„ÅÆÂëΩÂêçË¶èÂâáÔºà‰æãÔºâ","date":"2020-03-11T00:00:00.000Z","emoji":"üçç","tags":["python"],"published":true,"body":{"raw":" Python„ÅÆÂëΩÂêçË¶èÂâá„Å´„Å§„ÅÑ„Å¶Ëá™ÂàÜ„Å™„Çä„ÅÆËÄÉ„Åà„ÇíÊï¥ÁêÜ„Åó„Åæ„Åó„Åü„ÄÇ  ## ÂëΩÂêçË¶èÂâá |ÂØæË±°|„É´„Éº„É´|‰æã| |:--|:--|:--| „Éë„ÉÉ„Ç±„Éº„Ç∏|ÂÖ®Â∞èÊñáÂ≠ó „Å™„Çã„Åπ„ÅèÁü≠„Åè„Ç¢„É≥„ÉÄ„Éº„Çπ„Ç≥„Ç¢ÈùûÊé®Â•®|tqdm, requests ‚Ä¶ „Éï„Ç°„Ç§„É´|ÂÖ®Â∞èÊñáÂ≠ó|notification „É¢„Ç∏„É•„Éº„É´|ÂÖ®Â∞èÊñáÂ≠ó „Å™„Çã„Åπ„ÅèÁü≠„Åè„Ç¢„É≥„ÉÄ„Éº„Çπ„Ç≥„Ç¢ÂèØ|sys, os,‚Ä¶ „ÇØ„É©„Çπ|ÊúÄÂàùÂ§ßÊñáÂ≠ó + Â§ßÊñáÂ≠óÂå∫Âàá„Çä|MyFavoriteClass ‰æãÂ§ñ|ÊúÄÂàùÂ§ßÊñáÂ≠ó + Â§ßÊñáÂ≠óÂå∫Âàá„Çä|MyFuckingError ÂûãÂ§âÊï∞|ÊúÄÂàùÂ§ßÊñáÂ≠ó + Â§ßÊñáÂ≠óÂå∫Âàá„Çä|MyFavoriteType „É°„ÇΩ„ÉÉ„ÉâÔºàpublicÔºâ|ÂÖ®Â∞èÊñáÂ≠ó + „Ç¢„É≥„ÉÄ„Éº„Çπ„Ç≥„Ç¢Âå∫Âàá„Çä|my_favorite_method „É°„ÇΩ„ÉÉ„ÉâÔºàprivateÔºâ|„Ç¢„É≥„ÉÄ„Éº„Çπ„Ç≥„Ç¢√ó2 + ÂÖ®Â∞èÊñáÂ≠ó + „Ç¢„É≥„ÉÄ„Éº„Çπ„Ç≥„Ç¢Âå∫Âàá„Çä|__my_favorite_method Èñ¢Êï∞|ÂÖ®Â∞èÊñáÂ≠ó + „Ç¢„É≥„ÉÄ„Éº„Çπ„Ç≥„Ç¢Âå∫Âàá„Çä|my_favorite_funcion Â§âÊï∞|ÂÖ®Â∞èÊñáÂ≠ó + „Ç¢„É≥„ÉÄ„Éº„Çπ„Ç≥„Ç¢Âå∫Âàá„Çä|my_favorite_instance ÂÆöÊï∞|ÂÖ®Â§ßÊñáÂ≠ó + „Ç¢„É≥„ÉÄ„Éº„Çπ„Ç≥„Ç¢Âå∫Âàá„Çä|MY_FAVORITE_CONST  ## ÂèÇËÄÉË®ò‰∫ã [PythonÂëΩÂêçË¶èÂâá‰∏ÄË¶ß](https://qiita.com/naomi7325/items/4eb1d2a40277361e898b)  [„ÄåPythonicËâ≤„ÄÖ„Äç Python„ÅÆ„Ç¢„É≥„ÉÄ„Éº„Çπ„Ç≥„Ç¢( _ )„Çí‰Ωø„ÅÑ„Åì„Å™„Åù„ÅÜÔºÅ](https://medium.com/lsc-psd/pythonic%E8%89%B2%E3%80%85-python%E3%81%AE%E3%82%A2%E3%83%B3%E3%83%80%E3%83%BC%E3%82%B9%E3%82%B3%E3%82%A2-%E3%82%92%E4%BD%BF%E3%81%84%E3%81%93%E3%81%AA%E3%81%9D%E3%81%86-3c132842eeef ) "},"_id":"blog/14-naming-rule-python.mdx","_raw":{"sourceFilePath":"blog/14-naming-rule-python.mdx","sourceFileName":"14-naming-rule-python.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/14-naming-rule-python"},"type":"Post","slug":"/blog/14-naming-rule-python","slugAsParams":"14-naming-rule-python"},{"title":"VBA | Excel„Åã„ÇâSQL Plus„ÇíÂÆüË°å„Åó„Å¶„Çª„ÉÉ„Ç∑„Éß„É≥ÂàáÊñ≠","description":"Oracle „ÅÆ„Çª„ÉÉ„Ç∑„Éß„É≥„ÇíÂº∑Âà∂Ëß£Èô§„Åô„ÇãÊñπÊ≥ï","date":"2020-03-12T00:00:00.000Z","emoji":"‚úÑ","tags":["vba"],"published":true,"body":{"raw":"‚úÑ Oracle„Éá„Éº„Çø„Éô„Éº„Çπ„Çí‰Ωø„Å£„Åü„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Åß„ÅØ„ÄÅË™∞„Åã„Åå„Ç¢„Éó„É™„ÇíÊìç‰Ωú„Åó„Åü„Åæ„Åæ„Å®„Å™„Çä„ÄÅ „Éá„Éº„Çø„Éô„Éº„Çπ„Åå„É≠„ÉÉ„ÇØ„Åï„Çå„ÅüÁä∂ÊÖã„Å´„Å™„Çã„Åì„Å®„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ  ‰ªäÂõû„ÄÅ„Åù„ÅÆ„É≠„ÉÉ„ÇØÁä∂ÊÖã„ÇíËß£Èô§„Åô„Çã„Åü„ÇÅ„ÄÅ Excel„Åã„ÇâSQL Plus „ÇíÂÆüË°å„Åó„Å¶„Çª„ÉÉ„Ç∑„Éß„É≥„ÇíÂº∑Âà∂ÂàáÊñ≠Ôºà„É≠„ÉÉ„ÇØËß£Èô§Ôºâ„Åô„ÇãÊñπÊ≥ï„ÇíË™¨Êòé„Åó„Åæ„Åô„ÄÇ  [„Çµ„É≥„Éó„É´„ÅÆExcel„Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ](https://github.com/atman-33/template-excel-vba/tree/main/SQLPlus%E5%AE%9F%E8%A1%8C_Oracle%E3%82%BB%E3%83%83%E3%82%B7%E3%83%A7%E3%83%B3%E5%88%87%E6%96%AD)  ## Ê¶ÇË¶Å „Åæ„Åö„ÄÅOracle„Åå„É≠„ÉÉ„ÇØÁä∂ÊÖã„Å´„Å™„Å£„Å¶„ÅÑ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åø„Åæ„Åô„ÄÇ  ‰∏ãË®ò„ÅÆSQL„Çí„ÄÅSQL Developer „ÇÑSQL Plusu „Åã„ÇâÂÆüË°å„Åô„Çã„Åì„Å®„Åß„ÄÅ   „É≠„ÉÉ„ÇØÁä∂ÊÖã„ÇíÂºï„ÅçËµ∑„Åì„Åó„Å¶„ÅÑ„Çã„ÅÆ„Åå **„Å©„Åì„Åã„ÇâÔºà„Å©„ÅÆPC„Åã„ÇâÔºâ„ÅÆÊé•Á∂ö„Å™„ÅÆ„Åã** Á¢∫Ë™ç„Åß„Åç„Åæ„Åô„ÄÇ  ```sql select    s.sid, s.serial#, s.username, s.osuser, s.machine, s.terminal, s.program, o.object_name  from    v$session s, v$locked_object l, dba_objects o  where    s.sid = l.session_id and l.object_id = o.object_id ```  „É≠„ÉÉ„ÇØÁä∂ÊÖã„ÅÆÂ†¥Âêà„ÅØ‰∏ãË®ò„ÅÆ„Çà„ÅÜ„Å´„É¨„Ç≥„Éº„Éâ„ÅåÊäΩÂá∫„Åï„Çå„Åæ„Åô„ÄÇ  ![image](/blog/15/oracle-lock.png)  „É≠„ÉÉ„ÇØÁä∂ÊÖã„ÇíËß£Èô§„Åô„Çã„Å´„ÅØ„ÄÅÊäΩÂá∫„Åó„Åü„É¨„Ç≥„Éº„Éâ„ÅÆ‰∏≠„Å´„ÅÇ„ÇãSID„Å®SERIAL#„ÅåÂøÖË¶Å„Å®„Å™„Çä„Åæ„Åô„ÄÇ Ôºà‰∏ä„ÅÆ‰æã„Åß„ÅØ„ÄÅ SID=277, SERIAL#=18621Ôºâ  ## „Éë„ÉÉ„Ç±„Éº„Ç∏ÊßãÊàê Excel„Éû„ÇØ„É≠ÂÜÖ„ÅÆÊßãÊàê„ÅØ‰∏ãË®ò„Å®„Å™„Çä„Åæ„Åô„ÄÇ  ```text Ê®ôÊ∫ñ„É¢„Ç∏„É•„Éº„É´ |- Main |- ModuleSqlPlus ```  main „Åã„Çâ modSqlPlus „ÅÆÈñ¢Êï∞„ÇíÂëº„Å≥Âá∫„Åô„Ç∑„É≥„Éó„É´„Å™ÊßãÈÄ†„Åß„Åô„ÄÇ  ## „ÇΩ„Éº„Çπ„Ç≥„Éº„ÉâËß£Ë™¨ Excel„ÅÆVBA„ÄÅ„ÅÑ„Çè„ÇÜ„Çã„Éû„ÇØ„É≠Âá¶ÁêÜ„ÅÆ„ÇΩ„Éº„Çπ„Ç≥„Éº„Éâ„Å®„Å™„Çä„Åæ„Åô„ÄÇ  ___ ### ‚ë†ModuleSqlPlus SQL Plus „Åã„ÇâSQL„ÇíÂÆüË°å„Åô„Çã„Åü„ÇÅ„Å´ÂøÖË¶Å„Å™Èñ¢Êï∞„ÇíÊ†ºÁ¥ç„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ```vb Option Explicit  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : SQLÊñá„Åã„ÇâSQLPlus„ÇíÂÆüË°å ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub Sqlplus(user As String, password As String, serviceName As String, sql As String)      Dim sqlFile As String      ' ÂÆüË°å„Åô„ÇãSQL„Éï„Ç°„Ç§„É´     sqlFile = \"temp.sql\"      ' SQL„Éï„Ç°„Ç§„É´„Çí‰ΩúÊàê     CreateSqlFile sqlFile, sql     Debug.Print \"„ÄêÂÆüË°å„Åô„ÇãSQLÊñá„Äë\"     Debug.Print \"---- ---- ----\"     Debug.Print sql     Debug.Print \"---- ---- ----\"      ' SQLPLUS„Åã„ÇâSQL„Éï„Ç°„Ç§„É´„ÇíÂÆüË°å     SqlplusFromFile user, password, serviceName, sqlFile      ' SQL„Éï„Ç°„Ç§„É´„ÇíÂâäÈô§     KillSqlFile sqlFile  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : SQL„Éï„Ç°„Ç§„É´„Åã„ÇâSQLPlus„ÇíÂÆüË°å ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub SqlplusFromFile(user As String, password As String, serviceName As String, sqlFile As String)      Dim cmd As String     '„Ç∑„Çß„É´„Ç≥„Éû„É≥„Éâ     Dim objWSH As Object  'WSH      cmd = \"sqlplus \" & user & \"/\" & password & \"@\" & serviceName & \" as sysdba \" & \"@\" & ActiveWorkbook.Path & \"\\\" & sqlFile     Debug.Print \"ORACLE; sqlplus„ÇíÂÆüË°å\"     Debug.Print cmd      'ÈùûÂêåÊúü„ÅßÂÆüË°å„Åï„Çå„Çã     'Call Shell(cmd, vbHide)  On Error GoTo Exception     'ÂêåÊúü„ÅßÂÆüË°å„Åô„Çã     Set objWSH = CreateObject(\"WScript.Shell\")     objWSH.Run cmd, 1, True      GoTo Finally  Exception:      Call MsgBox(Err.Description, vbOKOnly, \"Áï∞Â∏∏ÁµÇ‰∫Ü\")     GoTo Finally  Finally:      Set objWSH = Nothing              ' „Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„ÇíËß£Êîæ  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : „Çª„ÉÉ„Ç∑„Éß„É≥„ÇíÂàá„ÇãSQL„Ç≥„Éû„É≥„Éâ„ÇíÂÆüÊñΩ ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub KillSession(user As String, password As String, serviceName As String, sid As String, serial As String)      Dim sql As String      ' ÂÆüË°å„Åô„ÇãSQL     sql = \"alter system kill session '\" & sid & \",\" & serial & \"';\" & vbCrLf & \"exit;\"      Sqlplus user, password, serviceName, sql  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : SQL„Éï„Ç°„Ç§„É´„Çí‰ΩúÊàê ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub CreateSqlFile(fileName As String, sql As String)     Dim strFilePath As String     strFilePath = ActiveWorkbook.Path & \"\\\" & fileName '„Éï„Ç°„Ç§„É´„Éë„Çπ      Debug.Print \"„Éï„Ç°„Ç§„É´‰ΩúÊàêÔºö\" & strFilePath     Open strFilePath For Output As #1     Print #1, sql     Close #1  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : SQL„Éï„Ç°„Ç§„É´„ÇíÂâäÈô§ ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub KillSqlFile(fileName As String)     Dim strFilePath As String     strFilePath = ActiveWorkbook.Path & \"\\\" & fileName '„Éï„Ç°„Ç§„É´„Éë„Çπ      Debug.Print \"„Éï„Ç°„Ç§„É´ÂâäÈô§ÈñãÂßãÔºö\" & strFilePath     Kill strFilePath  End Sub ```  SQL Plus Windows Shell„ÄÅ„Å§„Åæ„Çä„Ç≥„Éû„É≥„Éâ„Éó„É≠„É≥„Éó„Éà„Åã„ÇâÂÆüË°å„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ  „Åù„ÅÆ„Åü„ÇÅ„ÄÅ‰∏ÄÂ∫¶SQLÊñá„ÅåÊ†ºÁ¥ç„Åï„Çå„Åü„Éï„Ç°„Ç§„É´„Çí‰ΩúÊàê„Åó„ÄÅ„Åù„ÅÆ„Éï„Ç°„Ç§„É´„ÇíSQL Plus „ÅßÂÆüË°å„Åô„Çã„Çà„ÅÜ„Å´„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ___ ### ‚ë°Main OracleÊé•Á∂ö„Åó„Å¶„ÅÑ„ÇãÔºà„É≠„ÉÉ„ÇØ„Åó„Å¶„ÅÑ„ÇãÔºâ„Çª„ÉÉ„Ç∑„Éß„É≥„ÇíÂàáÊñ≠„Åó„Åæ„Åô„ÄÇ  ```vb Option Explicit  ' „É°„Ç§„É≥Âá¶ÁêÜ Public Sub Main()      Dim user As String     Dim password As String     Dim serviceName As String     Dim sid As String     Dim serial As String      user = \"sys\"     password = \"1234\"     serviceName = \"TESTDB\"      sid = \"277\"     serial = \"16127\"      ' OracleÊé•Á∂ö„Çª„ÉÉ„Ç∑„Éß„É≥„ÇíÂàáÊñ≠     KillSession user, password, serviceName, sid, serial      Debug.Print \"Âá¶ÁêÜÁµÇ‰∫Ü\"  End Sub ```  ‰∏äË®ò„ÅÆ‰æã„Åß„ÅØ„ÄÅmodSqlPlus„É¢„Ç∏„É•„Éº„É´„ÅÆkillSession „ÇíÂëº„Å≥Âá∫„Åó„Å¶„ÄÅ„Åù„ÅÆÂºïÊï∞„Å´ÂøÖË¶Å„Å™SID„Å®SERIAL#„ÇíÊ∏°„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ‰ª•‰∏ä„Åß„Åô„ÄÇ "},"_id":"blog/15-kill-oracle-session-excel-vba.mdx","_raw":{"sourceFilePath":"blog/15-kill-oracle-session-excel-vba.mdx","sourceFileName":"15-kill-oracle-session-excel-vba.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/15-kill-oracle-session-excel-vba"},"type":"Post","slug":"/blog/15-kill-oracle-session-excel-vba","slugAsParams":"15-kill-oracle-session-excel-vba"},{"title":"WordPress | Google AdSense„ÅÆads.txtË®≠ÁΩÆÊñπÊ≥ï","description":"WordPress „Å´„Åä„Åë„Çã ads.txt „ÅÆË®≠ÁΩÆÊñπÊ≥ï","date":"2020-03-14T00:00:00.000Z","emoji":"üõú","tags":["wordpress","googleAdsense"],"published":true,"body":{"raw":" Google AdSense „Çí‰Ωø„Å£„Å¶„ÅÑ„Çã„Å®„ÄÅËá™ÂàÜ„ÅÆ„É≠„Ç∞„Ç§„É≥„Éö„Éº„Ç∏„Å´‰∏ãË®ò„ÅÆ„Çà„ÅÜ„Å™„Ç¢„É©„Éº„Éà„ÅåË°®Á§∫„Åï„Çå„Çã„Åì„Å®„Åå„ÅÇ„Çä„Åæ„Åô  ![image](/blog/16/google-adsense-alert.png)  Google „ÅÆ„Éò„É´„Éó„Å´„Çà„Çã„Å®„ÄÅads.txt„ÅØÂ∫ÉÂëäÊû†„ÅåÂÅΩÁâ©„Åß„Å™„ÅÑ„Å®Âà§Âà•„Åß„Åç„Çã„Çà„ÅÜ„Å´„Å™„Çã„Å®Ë®òËºâ„Åï„Çå„Å¶„Åä„ÇäÊé®Â•®„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ  >ads.txt „ÅØ„ÄÅ‰ΩøÁî®„Åô„Çã„Åì„Å®„ÇíÂº∑„Åè„Åä„Åô„Åô„ÇÅ„Åó„Åæ„Åô„ÄÇads.txt „Çí‰ΩøÁî®„Åô„Çå„Å∞„ÄÅË≥ºÂÖ•ËÄÖ„ÅåÂÅΩ„ÅÆÂ∫ÉÂëäÊû†„ÇíÂà§Âà•„Åß„Åç„Çã„Åü„ÇÅ„ÄÅ„Çµ„Ç§„ÉàÈÅãÂñ∂ËÄÖÊßò„Å®„Åó„Å¶„ÇÇÂÅΩ„ÅÆÂ∫ÉÂëäÊû†„Å´ÂèéÁõä„ÅåÊµÅ„Çå„Çã„ÅÆ„ÇíÈòªÊ≠¢„Åó„ÄÅ„Åù„ÅÆÂàÜÂèéÁõä„ÇíÂ¢ó„ÇÑ„Åô„Åì„Å®„Åå„Åß„Åç„Çã„Å®„ÅÑ„ÅÜ„É°„É™„ÉÉ„Éà„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ > > https://support.google.com/adsense/answer/7532444?hl=ja  „Åù„ÅÆ„Åü„ÇÅ„Å´„ÅØ„ÄÅGoogle AdSense „ÅßÂÖ•Êâã„Åó„Åü ads.txt „ÇíWeb„Çµ„Éº„Éê„Éº„ÅÆ„É´„Éº„Éà„Éá„Ç£„É¨„ÇØ„Éà„É™„Å´‰øùÂ≠ò„Åó„Å™„Åè„Å¶„ÅØ„Å™„Çä„Åæ„Åõ„Çì„ÄÇ   AWS„Å´„Çà„ÇäWordPress„ÇíÊßãÁØâ„Åó„ÅüÈöõ„ÄÅads.txt„ÅÆË®≠ÁΩÆÂ†¥ÊâÄ„Å´Â∞ë„Åó„Éè„Éû„Çä„Åæ„Åó„Åü„ÅÆ„ÅßË®ò‰∫ã„Å´ÊÆã„Åó„Å¶„Åä„Åç„Åæ„Åô„ÄÇ   ## ÊâãÈ†Ü  ___ ### ‚ë†„Éï„Ç°„Ç§„É´„Çí„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åß„Åç„ÇãWordPress„Éó„É©„Ç∞„Ç§„É≥„Çí„Ç§„É≥„Çπ„Éà„Éº„É´ „Åæ„Åö„É´„Éº„Éà„Éá„Ç£„É¨„ÇØ„Éà„É™„Åå„Å©„Åì„Å™„ÅÆ„ÅãÔºü„Å®„ÅÑ„ÅÜ„Åì„Å®„Å™„ÅÆ„Åß„Åô„Åå„ÄÅÁµêË´ñ„Åã„Çâ„ÅÑ„ÅÜ„Å®Web„Çµ„Ç§„Éà„ÅÆTop„Éö„Éº„Ç∏„ÅåÊ†ºÁ¥ç„Åï„Çå„Å¶„ÅÑ„Çã„Éï„Ç©„É´„ÉÄ„Åß„Åô„ÄÇ  WordPress„Å´„Éï„Ç°„Ç§„É´„ÇíËøΩÂä†„Åô„ÇãÊñπÊ≥ï„ÅØ„ÅÑ„Åè„Å§„Åã„ÅÇ„Çã„ÅÆ„Åß„Åô„Åå„ÄÅ„Åì„Åì„Åß„ÅØ **Advanced File Manager** „Å®„ÅÑ„ÅÜ‰æøÂà©„Å™„Éó„É©„Ç∞„Ç§„É≥„ÇíÂà©Áî®„Åô„Çã„Åì„Å®„Å®„Åó„Åæ„Åô„ÄÇ  ‰∏ãË®ò„ÅÆ„Çà„ÅÜ„Å´„ÄÅ„Éó„É©„Ç∞„Ç§„É≥ËøΩÂä†„Åß Advanced Fie Manager „ÇíÊ§úÁ¥¢„Åó„Å¶„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åô„ÄÇ  ![image](/blog/16/advanced-file-manager.png)  ___ ### ‚ë°„É´„Éº„Éà„Éá„Ç£„É¨„ÇØ„Éà„É™„Å´ads.txt„Çí‰øùÂ≠ò „Éó„É©„Ç∞„Ç§„É≥„ÇíËøΩÂä†„Åó„Å¶ÊúâÂäπÂåñ„Åô„Çã„Å®„ÄÅWordPress„ÅÆ„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Å´„ÄéFile Manager„Äè„ÅåËøΩÂä†„Åï„Çå„Åæ„Åô„ÄÇ  „Åù„ÅÆ File Manager „Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„Å¶ **Â∑¶„Çø„Éñ„ÅÆ„Äéhtml„Äè„Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„Å¶Ë°®Á§∫„Åï„Çå„Å¶„ÅÑ„ÇãÈÉ®ÂàÜ„Åå„É´„Éº„Éà„Éá„Ç£„É¨„ÇØ„Éà„É™** „Åß„Åô„ÄÇ  Âæå„ÅØ ads.txt „Çí„É´„Éº„Éà„Éá„Ç£„É¨„ÇØ„Éà„É™„Å´‰øùÂ≠ò„Åô„Çå„Å∞ÂÆå‰∫Ü„Åß„Åô„ÄÇ  ![image](/blog/16/wordpress-file-manager.png)  „É´„Éº„Éà„Éá„Ç£„É¨„ÇØ„Éà„É™„ÅØ Top Page „ÄÅ„Å§„Åæ„Çä WordPress „Åß„ÅÑ„Åà„Å∞„ÄÅindex.php „Åå‰øùÂ≠ò„Åï„Çå„Å¶„ÅÑ„Çã„Éï„Ç©„É´„ÉÄ„Å®„Å™„Çä„Åæ„Åô„ÄÇ  ÂèÇËÄÉ„Å´„Å™„Çå„Å∞Âπ∏„ÅÑ„Åß„Åô„ÄÇ  ‰ª•‰∏ä„Åß„Åô„ÄÇ "},"_id":"blog/16-set-google-adsense-file-wordpress.mdx","_raw":{"sourceFilePath":"blog/16-set-google-adsense-file-wordpress.mdx","sourceFileName":"16-set-google-adsense-file-wordpress.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/16-set-google-adsense-file-wordpress"},"type":"Post","slug":"/blog/16-set-google-adsense-file-wordpress","slugAsParams":"16-set-google-adsense-file-wordpress"},{"title":"VBA | Excel„ÅÆÂêÑ„Ç∑„Éº„Éà„Çí„Éï„Ç°„Ç§„É´„Å´Âàá„ÇäÂá∫„Åó„Å¶ÂàÜÂâ≤‰øùÂ≠ò","description":"Excel VBA „Åß ÂêÑ„Ç∑„Éº„Éà„ÇíÂà•„Éï„Ç°„Ç§„É´„Å´Âá∫Âäõ„Åô„ÇãÊñπÊ≥ï","date":"2020-03-15T00:00:00.000Z","emoji":"üêÜ","tags":["vba"],"published":true,"body":{"raw":" Excel„Åß„Éû„Éã„É•„Ç¢„É´„Å™„Å©‰ΩúÊàê„Åó„Å¶„ÅÑ„Çã„Å®„ÄÅ„Ç∑„Éº„ÉàÊï∞„ÅåÂ§ö„Åè„Å™„Çä„Åô„Åé„Å¶„Éï„Ç°„Ç§„É´Ëá™‰Ωì„ÅåÈáç„Åè„Å™„Å£„Åü„Çä„ÄÅExcel„ÅÆÂãï‰Ωú„ÅåÈáç„Åè„Å™„Å£„Åü„Çä„Åô„Çã„Åì„Å®„ÅØ„Å™„ÅÑ„Åß„Åó„Çá„ÅÜ„ÅãÔºü  „Åù„ÅÆ„Çà„ÅÜ„Å™Â†¥Âêà„Å´‰Ωø„Åà„Åù„ÅÜ„Å™„ÄÅExcel„ÅÆÂêÑ„Ç∑„Éº„Éà„Çí„Éï„Ç°„Ç§„É´„Å´Âàá„ÇäÂá∫„Åó„Å¶ÂàÜÂâ≤‰øùÂ≠ò„Åô„Çã„Éû„ÇØ„É≠„Çí‰ΩúÊàê„Åó„Åæ„Åó„Åü„ÅÆ„ÅßË™¨Êòé„Åó„Åæ„Åô„ÄÇ  [„Çµ„É≥„Éó„É´„ÅÆExcel„Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ](https://github.com/atman-33/template-excel-vba/tree/main/Excel%E3%82%B7%E3%83%BC%E3%83%88%E3%82%92%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AB%E5%88%87%E3%82%8A%E5%87%BA%E3%81%97%E5%87%BA%E5%8A%9B)   ## Ê¶ÇË¶Å ‰ªäÂõû„ÅÆ„Éû„ÇØ„É≠Ê©üËÉΩ„ÅØ„ÄÅ‰ª•‰∏ã„ÅÆÈÄö„Çä„Åß„Åô„ÄÇ  - „Éû„ÇØ„É≠„ÇíÂÆüË°åÔºà„Éú„Çø„É≥Êäº‰∏ãÔºâ - ÂêÑ„Ç∑„Éº„Éà„Çí„Éï„Ç°„Ç§„É´„Å´ÂàÜÂâ≤„Åó„Åü„ÅÑExcel„Éï„Ç°„Ç§„É´„ÇíÈÅ∏Êäû - ÈÅ∏Êäû„Éï„Ç°„Ç§„É´„ÅÆÂêÑ„Ç∑„Éº„Éà„ÇíExcel„Éï„Ç°„Ç§„É´„Å®„Åó„Å¶Âàá„ÇäÂá∫„Åó‰øùÂ≠ò ÔºàÈÅ∏Êäû„Åó„Åü„Éï„Ç°„Ç§„É´„Å®Âêå„Éï„Ç©„É´„ÉÄÂÜÖÔºâ - „Éû„ÇØ„É≠ÂÆüË°åExcel„Éï„Ç°„Ç§„É´„Å´„ÄéÂàá„ÇäÂá∫„Åó„Åü„Éï„Ç°„Ç§„É´„ÅÆ„É™„É≥„ÇØÂÖà‰∏ÄË¶ß„Äè„ÇíÁîüÊàê  ## „Éë„ÉÉ„Ç±„Éº„Ç∏ÊßãÊàê Excel„Éû„ÇØ„É≠ÂÜÖ„ÅÆÊßãÊàê„ÅØ‰∏ãË®ò„Å®„Å™„Çä„Åæ„Åô „ÄÇ  ```text Excel„ÅÆÂêÑ„Ç∑„Éº„Éà„Çí„Éï„Ç°„Ç§„É´„Å´Âàá„ÇäÂá∫„Åó.xlsm | Ê®ôÊ∫ñ„É¢„Ç∏„É•„Éº„É´ |-Main |-ModuleHelper |-ModuleSheetToFile ```  ## „ÇΩ„Éº„Çπ„Ç≥„Éº„ÉâËß£Ë™¨ Excel„ÅÆVBA„ÄÅ„ÅÑ„Çè„ÇÜ„Çã„Éû„ÇØ„É≠Âá¶ÁêÜ„ÅÆ„ÇΩ„Éº„Çπ„Ç≥„Éº„Éâ„Å®„Å™„Çä„Åæ„Åô„ÄÇ  ### ‚ë†Main ```vb Option Explicit  ' „É°„Ç§„É≥Âá¶ÁêÜ Public Sub Main()      ' ÊèèÁîªÂá¶ÁêÜ„ÄÅËá™ÂãïÊõ¥Êñ∞„Å™„Å©„ÇíÂÅúÊ≠¢     Focus True      ' Excel„Ç∑„Éº„Éà„Çí„Éï„Ç°„Ç§„É´„Å´‰øùÂ≠ò„Åô„ÇãÂá¶ÁêÜ     GetOpenFileSheetstSave      ' ÊèèÁîªÂá¶ÁêÜ„ÄÅËá™ÂãïÊõ¥Êñ∞„Å™„Å©„ÇíÂÜçÈñã     Focus False  End Sub ``` „É°„Ç§„É≥„ÅÆ GetOpenFileSheetsSave Èñ¢Êï∞„ÇíÂÆüË°å„Åô„ÇãÈñì„Å´ Focus Èñ¢Êï∞„ÇíÊ∫ñÂÇô„Åó„Åæ„Åó„Åü„ÄÇ   „Åì„ÅÆ Focus Èñ¢Êï∞„ÅßExcel„ÅÆÊèèÁîªÂá¶ÁêÜ„ÄÅËá™ÂãïÊõ¥Êñ∞„Å™„Å©„ÇíÂÅúÊ≠¢„Åó„Å¶„Åä„Åè„Åì„Å®„Åß„Éû„ÇØ„É≠ÂÆüË°åÊôÇÈñì„ÇíÁü≠Á∏Æ„Åï„Åõ„Åæ„Åô„ÄÇ  ___ ### ‚ë†ModuleHelper  ‰ªäÂõû‰ΩøÁî®„Åô„ÇãÈñ¢Êï∞„Åß„Åô„ÄÇ  ```vb Option Explicit  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : ÁîªÈù¢ÊèèÁîª„Å™„Å©„ÇíÂÅúÊ≠¢„Åó„Å¶ÂÆüË°å„ÇíÊó©„Åè„Åô„Çã„ÄÇ ' note  : Focus = True  -> ÊèèÁîªÂÅúÊ≠¢„ÄÅ„Ç§„Éô„É≥„ÉàÊäëÂà∂„ÄÅÊâãÂãïË®àÁÆó '         Focus = False -> ÊèèÁîªÂÜçÈñã„ÄÅ„Ç§„Éô„É≥„ÉàÁõ£Ë¶ñÂÜçÈñã„ÄÅËá™ÂãïË®àÁÆó ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub Focus(ByVal Flag As Boolean)     With Application         .EnableEvents = Not Flag         .ScreenUpdating = Not Flag         .Calculation = IIf(Flag, xlCalculationManual, xlCalculationAutomatic)     End With End Sub ```  ___ ### ‚ë°ModuleSheetToFile „Éù„Ç§„É≥„Éà„ÇÑË£úË∂≥„ÅØ„Ç≥„Éº„ÉâÂÜÖ„ÅÆ„Ç≥„É°„É≥„Éà„Å´Ë®òËºâ„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ```vb Option Explicit  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : ÈÅ∏Êäû„Åó„ÅüExcel„Éï„Ç°„Ç§„É´„ÅÆÂêÑ„Ç∑„Éº„Éà„Çí„Éï„Ç°„Ç§„É´„Å´Âàá„ÇäÂá∫„Åó ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub GetOpenFileSheetstSave()      Dim openFilePath As String     Dim saveFolderPath As String      openFilePath = Application.GetOpenFilename(FileFilter:=\"Excel„Éï„Ç°„Ç§„É´,*.xlsx\")      If openFilePath <> \"False\" Then          ' „Éï„Ç°„Ç§„É´„ÅåÈÅ∏Êäû„Åï„Çå„ÅüÂ†¥Âêà         saveFolderPath = GetFileFolderPath(openFilePath)         SheetsSave openFilePath, saveFolderPath          MsgBox \"Âá¶ÁêÜ„ÇíÂÆå‰∫Ü„Åó„Åæ„Åó„Åü\"     Else         MsgBox \"„Ç≠„É£„É≥„Çª„É´„Åï„Çå„Åæ„Åó„Åü\"     End If  End Sub   ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : ÂêÑ„Ç∑„Éº„Éà„Çí„Éï„Ç°„Ç§„É´„Å´Âàá„ÇäÂá∫„Åó ' note  : ÂºïÊï∞„ÅÆ excelPath, saveFolder „ÅØ„Éï„É´„Éë„Çπ ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub SheetsSave(excelPath As String, saveFolderPath As String)      Dim wb As Workbook     Dim sheet As Object      Dim linkListSheetRow As Long     Dim linkListSheetName As String      linkListSheetRow = 1     linkListSheetName = \"__LinkList__\"      ' „Éï„Ç°„Ç§„É´Âàá„ÇäÂá∫„ÅóÂÖà„É™„É≥„ÇØ‰∏ÄË¶ß„ÅÆ„Ç∑„Éº„Éà„Çí‰ΩúÊàê     CreateSheet linkListSheetName      ' „Éñ„ÉÉ„ÇØ„ÇíÈñã„Åè     Set wb = Workbooks.Open(excelPath)      For Each sheet In wb.Worksheets          ' ‰∫ãÂâç„Å´ÂêåÂêç„ÅÆ„Éï„Ç°„Ç§„É´„ÇíÂâäÈô§         KillFile saveFolderPath & \"\\\" & sheet.name & \".xlsx\"          sheet.Copy         ActiveWorkbook.SaveAs saveFolderPath & \"\\\" & sheet.name         ActiveWorkbook.Close          ' „Éï„Ç°„Ç§„É´Âàá„ÇäÂá∫„ÅóÂÖà„É™„É≥„ÇØ‰∏ÄË¶ß„Å∏ËøΩÂä†         ThisWorkbook.Worksheets(linkListSheetName).Cells(linkListSheetRow, 1).Value = sheet.name         ThisWorkbook.Worksheets(linkListSheetName).Cells(linkListSheetRow, 2).Value = saveFolderPath & \"\\\" & sheet.name & \".xlsx\"          ' „Éè„Ç§„Éë„Éº„É™„É≥„ÇØËøΩÂä†ÔºàÂØæË±°„ÅÆ„Ç∑„Éº„Éà„ÇíActive„Å´„Åô„ÇãÂøÖË¶Å„ÅÇ„ÇäÔºâ         ThisWorkbook.Worksheets(linkListSheetName).Activate         ActiveSheet.Hyperlinks.Add Anchor:=Cells(linkListSheetRow, 2), Address:=Cells(linkListSheetRow, 2).Value          linkListSheetRow = linkListSheetRow + 1      Next sheet      ' „Éñ„ÉÉ„ÇØ„ÇíÈñâ„Åò„Çã     Application.DisplayAlerts = False   'Á¢∫Ë™ç„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÂá∫„Åï„Å™„ÅÑ     wb.Close savechanges:=False         '‰øùÂ≠ò„Åõ„Åö„Å´Èñâ„Åò„Çã     Application.DisplayAlerts = True    'Á¢∫Ë™ç„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÂá∫„Åô  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : „Ç∑„Éº„Éà„ÇíËøΩÂä†‰ΩúÊàê ' note  : ‰ΩúÊàê„Åô„Çã„Ç∑„Éº„Éà„ÅØÊúÄÂæåÂ∞æ„Å´ËøΩÂä† ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Private Sub CreateSheet(sheetName As String)      If SheetExists(sheetName) = False Then          ThisWorkbook.Worksheets.Add after:=ThisWorkbook.Worksheets(ThisWorkbook.Worksheets.Count)         ActiveSheet.name = sheetName      End If  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : ÊåáÂÆö„Åó„Åü„Éï„Ç°„Ç§„É´„ÅÆ„Éï„Ç©„É´„ÉÄ„Éë„Çπ„ÇíÂèñÂæó ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Private Function GetFileFolderPath(filePath As String) As String      Dim pathName As String     Dim fileName As String      fileName = Dir(filePath)     pathName = Replace(filePath, fileName, \"\")     pathName = CutRight(pathName, 1)     Debug.Print pathName & vbCrLf & fileName      GetFileFolderPath = pathName  End Function  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : ÊñáÂ≠óÂàó„ÅÆÂè≥ÂÅ¥„Åã„ÇâÊåáÂÆöÊñáÂ≠óÊï∞ÂâäÈô§ ' note  : ÂºïÊï∞ÔºëÔºöÂØæË±°„ÅÆÊñáÂ≠óÂàó„ÄÅÂºïÊï∞ÔºíÔºöÂâäÈô§ÊñáÂ≠óÊï∞„ÄÅÊàª„ÇäÂÄ§ÔºöÂâäÈô§Âæå„ÅÆÊñáÂ≠óÂàó ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Private Function CutRight(s, i As Long) As String     Dim iLen    As Long     ' ÊñáÂ≠óÂàóÈï∑      ' ÊñáÂ≠óÂàó„Åß„ÅØ„Å™„ÅÑÂ†¥Âêà     If VarType(s) <> vbString Then         Exit Function     End If      iLen = Len(s)      ' ÊñáÂ≠óÂàóÈï∑„Çà„ÇäÊåáÂÆöÊñáÂ≠óÊï∞„ÅåÂ§ß„Åç„ÅÑÂ†¥Âêà     If iLen < i Then         Exit Function     End If      ' ÊåáÂÆöÊñáÂ≠óÊï∞„ÇíÂâäÈô§„Åó„Å¶Ëøî„Åô     CutRight = Left(s, iLen - i) End Function  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : ÂØæË±°„ÅÆ„Ç∑„Éº„Éà„ÅåÂ≠òÂú®„Åô„Çã„ÅãÂà§ÂÆö ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Private Function SheetExists(sheetName As String) As Boolean      Dim wb As Workbook     Dim ws As Worksheet      Set wb = ThisWorkbook      On Error Resume Next     Set ws = wb.Worksheets(sheetName)     On Error GoTo 0      SheetExists = Not ws Is Nothing  End Function  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : „Éï„Ç°„Ç§„É´„ÇíÂâäÈô§ ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Private Sub KillFile(filePath As String)     Dim strFilePath As String     strFilePath = filePath '„Éï„Ç°„Ç§„É´„Éë„Çπ      If Dir(strFilePath) <> \"\" Then         ' „Éï„Ç°„Ç§„É´„ÅåÂ≠òÂú®„Åô„Çã         Debug.Print \"„Éï„Ç°„Ç§„É´ÂâäÈô§ÈñãÂßãÔºö\" & strFilePath         Kill strFilePath     Else         ' „Éï„Ç°„Ç§„É´„ÅåÂ≠òÂú®„Åó„Å™„ÅÑ         Debug.Print \"„Éï„Ç°„Ç§„É´„ÅØÂ≠òÂú®„Åó„Åæ„Åõ„ÇìÔºö\" & strFilePath     End If  End Sub ```  Excel„ÅÆÂêÑ„Ç∑„Éº„Éà„ÇíÂà•„Éï„Ç°„Ç§„É´„Å´Âàá„ÇäÂá∫„Åó„Å¶‰øùÂ≠ò„Åô„Çã„Å®„ÅÑ„ÅÜ„Ç∑„É≥„Éó„É´„Å™Ê©üËÉΩ„Åß„Åô„Åå„ÄÅÊ≥®ÊÑè„Åô„Åπ„ÅçÁÇπ„ÇÇ„ÅÑ„Åè„Å§„Åã„ÅÇ„Å£„ÅüËâØ„ÅÑ„Çµ„É≥„Éó„É´„Åß„Åó„Åü„ÄÇ  ‰ªäÂõû„ÅÆÈñ¢Êï∞„ÅØÊ±éÁî®ÁöÑ„Å´„ÇÇ‰Ωø„Åà„Çã„Åü„ÇÅ„ÄÅÈñ¢Êï∞„ÅÆ„Ç¢„ÇØ„Çª„Çπ‰øÆÈ£æÂ≠ê„Çí private „Åã„Çâ public „Å´Â§âÊõ¥„Åó„Å¶Ê¥ªÁî®„Åó„Å¶„ÇÇ„Çâ„Å£„Å¶„ÇÇ„Çà„ÅÑ„Åã„Å®ÊÄù„ÅÑ„Åæ„Åô„ÄÇ  ‰ª•‰∏ä„Åß„Åô„ÄÇ "},"_id":"blog/17-excel-sheet-to-file-excel-vba.mdx","_raw":{"sourceFilePath":"blog/17-excel-sheet-to-file-excel-vba.mdx","sourceFileName":"17-excel-sheet-to-file-excel-vba.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/17-excel-sheet-to-file-excel-vba"},"type":"Post","slug":"/blog/17-excel-sheet-to-file-excel-vba","slugAsParams":"17-excel-sheet-to-file-excel-vba"},{"title":"AWS | MySQL Workbench „Åã„Çâ AWS DB„Å´SSHÊé•Á∂ö","description":"AWS„ÇØ„É©„Ç¶„Éâ„Çµ„Éº„Éì„Çπ„Å´ÂØæ„Åó„Å¶„ÄÅSSHÊé•Á∂ö„ÇíÂà©Áî®„Åó„Å¶„É≠„Éº„Ç´„É´PC„Åã„ÇâË∏è„ÅøÂè∞„Çµ„Éº„Éê„ÉºÁµåÁî±„ÅßDB„Çµ„Éº„Éê„Éº„Å´Êé•Á∂ö„Åó„ÄÅMySQL Workbench „ÇíÁî®„ÅÑ„Å¶DB„ÇíÊìç‰Ωú„Åô„ÇãÊñπÊ≥ï","date":"2020-04-01T00:00:00.000Z","emoji":"üï∑","tags":["aws"],"published":true,"body":{"raw":" AWS„Å™„Å©„ÇØ„É©„Ç¶„Éâ„Å´DB„ÇíÊßãÁØâ„Åó„Å¶„ÅÑ„ÇãÂ†¥Âêà„ÄÅDBÈñãÁô∫„Çí„É≠„Éº„Ç´„É´PC„Åã„ÇâË°å„ÅÜ„Åü„ÇÅ„Å´MySQL Workbench„ÅßÊé•Á∂ö„Åï„Åõ„Åü„ÅÑÂ†¥Âêà„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ  ‰ªäÂõû„ÄÅSSHÊé•Á∂ö„ÇíÂà©Áî®„Åó„Å¶„É≠„Éº„Ç´„É´PC„Åã„ÇâË∏è„ÅøÂè∞„Çµ„Éº„Éê„ÉºÁµåÁî±„ÅßDB„Çµ„Éº„Éê„Éº„Å´Êé•Á∂ö„Åó„ÄÅMySQL Workbench „ÇíÁî®„ÅÑ„Å¶DB„ÇíÊìç‰ΩúÂèØËÉΩ„Å´„Åó„Åæ„Åô„ÄÇ  ## „Ç∑„Çπ„ÉÜ„É†ÊßãÊàê ‰∏ãË®ò„ÅÆ„Çà„ÅÜ„Å™„ÄÅË∏è„ÅøÂè∞„Çµ„Éº„Éê„Éº„Åß„ÅÇ„ÇãWeb„Çµ„Éº„Éê„Éº„ÇíÁµåÁî±„Åó„Å¶DB„Å´Êé•Á∂ö„Åô„Çã„Ç∑„Çπ„ÉÜ„É†ÊßãÊàê„Å®„Åó„Åæ„Åô„ÄÇ  ![image](/blog/18/aws_system.png)  „Åì„ÅÆÊßãÊàê„Å´ÂØæ„Åó„Å¶„ÄÅ„É≠„Éº„Ç´„É´PC„Åã„Çâ„ÄéDB„Çµ„Éº„Éê„Éº„ÅÆMySQL„Äè„Å∏MySQL Workbench„ÇíÁî®„ÅÑ„Å¶Êé•Á∂ö„Åó„Åæ„Åô„ÄÇ  ## ÊâãÈ†Ü „É≠„Éº„Ç´„É´PC„Åã„ÇâË∏è„ÅøÂè∞„Çµ„Éº„Éê„Éº„ÇíÁµåÁî±„Åó„Å¶DB„Å´Êé•Á∂ö„Åô„Çã„Å´„ÅØ„ÄÅ**„Çø„Éº„Éü„Éä„É´Ôºà„Ç≥„Éû„É≥„Éâ„Éó„É≠„É≥„Éó„ÉàÔºâ„Åã„ÇâSSH„ÅßÁ©¥Ôºà„Éù„Éº„Éà„Éï„Ç©„ÉØ„Éº„ÉâÔºâ„ÇíÊßãÁØâ** „Åó„ÄÅ„Åù„ÅÆÂæå„Å´MySQL Workbench„Åã„ÇâÊé•Á∂ö„Åó„Åæ„Åô„ÄÇ  ___ ### (1).ssh„Éï„Ç©„É´„ÉÄ„Å´‚ë†ÁßòÂØÜÈçµ„Å®‚ë°config„Éï„Ç°„Ç§„É´„Çí‰øùÂ≠ò „Éù„Éº„Éà„Éï„Ç©„ÉØ„Éº„Éâ„Å´„Çà„ÇäDB„Çµ„Éº„Éê„Éº„Å∏Êé•Á∂ö„Åô„Çã„Åü„ÇÅ‰ª•‰∏ã„ÅÆÊâãÈ†Ü„ÇíÂÆüÊñΩ„Åó„Åæ„Åô„ÄÇ  #### .ssh„Éï„Ç©„É´„ÉÄ„ÅÆ‰∏≠Ë∫´ ![image](/blog/18/ssh_folder.png)  config„Éï„Ç°„Ç§„É´„ÅØtxt„Éï„Ç°„Ç§„É´„Çí‰ΩúÊàê„Åó„Å¶„ÄÅÊã°ÂºµÂ≠ê„ÇíÂâäÈô§„Åô„Çå„Å∞Ê∫ñÂÇô„Åß„Åç„Åæ„Åô„ÄÇ  ___ ### (2)config„Éï„Ç°„Ç§„É´„ÅÆ‰∏≠Ë∫´„ÇíË®òËºâ config„Éï„Ç°„Ç§„É´„Å´‰∏ãË®ò„ÇíË®òËºâ„Åó„Åæ„Åô„ÄÇ  ```text Host host_wp   hostname AA.AAA.AA.AAA   port 22   user ec2-user   IdentityFile ~/.ssh/ÔºàAWSÁßòÂØÜÈçµ„ÅÆÂêçÂâçÔºâ.pem  Host host_wp_db   hostname bb.bbb.bb.bbb   port 22   user ec2-user   IdentityFile ~/.ssh/ÔºàAWSÁßòÂØÜÈçµ„ÅÆÂêçÂâçÔºâ.pem   ProxyCommand C:\\Windows\\System32\\OpenSSH\\ssh.exe -l %r -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null host_wp  -W %h:%p   GatewayPorts   yes   LocalForward   9999   localhost:3306 ```  Web„Çµ„Éº„Éê„Éº„Å∏„ÅÆÊé•Á∂ö„ÄÄ‚Üí„ÄÄhost_wp   DB„Çµ„Éº„Éê„Éº„Å∏„ÅÆÊé•Á∂ö„ÄÄ‚Üí„ÄÄhost_wp_db„ÄÄ„ÅåÂØæÂøú„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ     DB„Çµ„Éº„Éê„Éº„Å∏„ÅÆÊé•Á∂ö„ÅØ„ÄÅProxyCommand „Åß host_wp Êé•Á∂ö„ÇíÁµåÁî±„Åô„Çã„Çà„ÅÜ„Å´ÊåáÂÆö„Åó„Å¶„Åä„Çä„Åæ„Åô„ÄÇ  ‰ªäÂõû„ÅÆ‰æã„Åß„ÅØ„ÄÅDB„Çµ„Éº„Éê„Éº„Å∏„ÅÆÊé•Á∂öÔºàhost_wp_dbÔºâ„Å´„ÄÅ„É≠„Éº„Ç´„É´PC„ÅÆ„Éù„Éº„Éà„Äé9999„Äè„ÇíÂà©Áî®„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ   „Éù„Éº„Éà9999„ÅØ‰ªªÊÑè„ÅÆÁï™Âè∑„ÅßÊßã„ÅÑ„Åæ„Åõ„Çì„Åå„ÄÅÂà•„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Åß‰ΩøÁî®„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑ„Åì„Å®„ÅåÊù°‰ª∂„Å®„Å™„Çä„Åæ„Åô„ÄÇ    **„ÄêÁ¢∫Ë™çÊñπÊ≥ï„Äë** „Ç≥„Éû„É≥„Éâ„Éó„É≠„É≥„Éó„Éà„Åß‰ΩøÁî®„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑ„Éù„Éº„ÉàÁï™Âè∑„ÇíÁ¢∫Ë™ç    `netstat -nao|find \"9999\"`  ‰∏äË®ò„ÅÆÂÆüË°åÂæå„ÄÅ‰Ωï„ÇÇ„Ç≥„É°„É≥„Éà„ÅåËøî„Å£„Å¶„Åì„Å™„Åë„Çå„Å∞Âà©Áî®„Åó„Å¶„ÅÑ„Å™„ÅÑ„ÄÇ    ___ ### (3)„Ç≥„Éû„É≥„Éâ„Éó„É≠„É≥„Éó„Éà„Åã„ÇâSSHÊé•Á∂ö „Ç≥„Éû„É≥„Éâ„Éó„É≠„É≥„Éó„Éà„ÅßDB„Çµ„Éº„Éê„Éº„Å´Êé•Á∂ö  `ssh host_wp_db`  „Åì„Çå„Åß„ÄÅ„É≠„Éº„Ç´„É´PC„Åã„ÇâWeb„Çµ„Éº„Éê„ÉºÔºàË∏è„ÅøÂè∞ÁµåÁî±Ôºâ„ÅßÊé•Á∂ö„Åß„Åç„Åæ„Åô„ÄÇ  „Ç≥„Éû„É≥„Éâ„Éó„É≠„É≥„Éó„Éà„ÇíÈñâ„Åò„Å¶„Åó„Åæ„ÅÜ„Å®SSHÊé•Á∂ö„ÅåÂàá„Çå„Å¶„Åó„Åæ„ÅÜ„ÅÆ„Åß„ÄÅ   **„Ç≥„Éû„É≥„Éâ„Éó„É≠„É≥„Éó„Éà„ÇíÁ´ã„Å°‰∏ä„Åí„Åü„Åæ„Åæ** „Å´„Åó„Å¶„Åä„ÅÑ„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ    ___ ### (4)MySQL Workbench „Å´„Çà„ÇãDBÊé•Á∂ö MySQL Workbench „ÅÆ Manage Server Connection „Åß‰∏ãË®ò„ÅÆË®≠ÂÆö„ÇíËøΩÂä†„Åó„Åæ„Åô„ÄÇ    #### AWS MySQL DB„Å∏„ÅÆÊé•Á∂öË®≠ÂÆö   ![image](/blog/18/mysql_workbench_connect.png)  „Åì„Çå„ÅßAWS„ÅÆMySQL DB„Å∏Êé•Á∂öÂèØËÉΩ„Å®„Å™„Çä„Åæ„Åô„ÄÇ  ‰ª•‰∏ä„Åß„Åô„ÄÇ "},"_id":"blog/18-ssh-connect-aws-db.mdx","_raw":{"sourceFilePath":"blog/18-ssh-connect-aws-db.mdx","sourceFileName":"18-ssh-connect-aws-db.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/18-ssh-connect-aws-db"},"type":"Post","slug":"/blog/18-ssh-connect-aws-db","slugAsParams":"18-ssh-connect-aws-db"},{"title":"Git | „ÇΩ„Éº„Çπ„Ç≥„Éº„Éâ„ÇíGit„Å∏push„Åô„ÇãÊñπÊ≥ï","description":"„ÇΩ„Éº„Çπ„Ç≥„Éº„Éâ„ÇíGit„Å∏push„Åô„ÇãÊâãÈ†Ü","date":"2020-04-02T00:00:00.000Z","emoji":"‚òÑ","tags":["git"],"published":true,"body":{"raw":" „ÇΩ„Éº„Çπ„Ç≥„Éº„Éâ„ÇíGit„Å∏push„Åô„ÇãÊâãÈ†Ü„ÇíÊÆã„Åó„Å¶„Åä„Åç„Åæ„Åô„ÄÇ  ___ #### ‚ë†„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆ„Éï„Ç©„É´„ÉÄ„Å∏ÁßªÂãïÔºàfolder_path„ÅØÊõ∏„ÅçÊèõ„Åà„Å¶„Åè„Å†„Åï„ÅÑÔºâ  ```bash cd folder_path ``` ___ #### ‚ë°„É≠„Éº„Ç´„É´„É™„Éù„Ç∏„Éà„É™‰ΩúÊàê„ÄÄ‚òÖÂàùÂõû„ÅÆ„Åø„ÅßOK  ```bash git init ``` ___ #### ‚ë¢„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Éï„Ç©„É´„ÉÄ„ÅÆÂÖ®„Éï„Ç°„Ç§„É´„Çí„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„Å´‰øùÂ≠ò  ```bash git add -A ```  add „Åó„ÅüÂÜÖÂÆπ„ÅÆÁ¢∫Ë™ç  ```bash git status ``` ___ #### ‚ë£add „Åó„Åü„Éï„Ç°„Ç§„É´„Çí„Ç≥„Éü„ÉÉ„Éà  ```bash git commit -m \"first commit\" ```  ___ #### ‚ë§„É™„É¢„Éº„Éà„É™„Éù„Ç∏„Éà„É™Âêç origin „Å´ÁôªÈå≤„ÄÄ‚òÖÂàùÂõû„ÅÆ„Åø„ÅßOK  github „Åß„É™„Éù„Ç∏„Éà„É™„Çí‰ΩúÊàêÔºàË™¨Êòé„ÅØÁúÅÁï•Ôºâ  ```bash git remote add origin https://github.com/ÂØæË±°„É™„Éù„Ç∏„Éà„É™„ÅÆURL ```     ÁôªÈå≤„Åó„Åü„É™„É¢„Éº„Éà„É™„Éù„Ç∏„Éà„É™„ÅÆÊÉÖÂ†±Á¢∫Ë™ç  ```bash git remote git remote -v ``` ___ #### ‚ë•Github „Å´„Éó„ÉÉ„Ç∑„É•Ôºàorigin„É™„É¢„Éº„Éà„É™„Éù„Ç∏„Éà„É™ ‚Üê master„Éñ„É©„É≥„ÉÅÔºâ  ```bash git push origin master ```  ‚Äªmaster„Éñ„É©„É≥„ÉÅ„Å´push„Åô„Çã‰æã„Åß„Åô„ÄÇ  ‰ª•‰∏ä„Åß„Åô„ÄÇ "},"_id":"blog/19-git-push-sample.mdx","_raw":{"sourceFilePath":"blog/19-git-push-sample.mdx","sourceFileName":"19-git-push-sample.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/19-git-push-sample"},"type":"Post","slug":"/blog/19-git-push-sample","slugAsParams":"19-git-push-sample"},{"title":"C# | PC„Ç´„É°„É©„Åã„ÇâÊò†ÂÉè„ÇíÂèñÂæó„Åô„Çã„Ç¢„Éó„É™","description":"C#, OpenCV „ÇíÂà©Áî®„Åó„ÅüPC„Ç´„É°„É©„ÅÆÊò†ÂÉè„ÇíÂä†Â∑•„Åó„Å¶Ë°®Á§∫„Åï„Åõ„Çã„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥","date":"2020-04-03T00:00:00.000Z","emoji":"üì∑","tags":["csharp"],"published":true,"body":{"raw":" PC„Å´Êê≠Ëºâ„Åï„Çå„Å¶„ÅÑ„Çã„Ç´„É°„É©„ÅÆÊò†ÂÉè„ÇíÂèñÂæó„Åó„Å¶„ÄÅËß£ÊûêÁ≠â„ÇíË°å„ÅÑ„Åü„ÅÑ„Å®ÊÄù„Å£„Åü„Åì„Å®„ÅØ„Å™„ÅÑ„Åß„Åó„Çá„ÅÜ„ÅãÔºü  ‰ªäÂõû„ÄÅPC„Ç´„É°„É©„ÅÆÊò†ÂÉè„ÇíÂä†Â∑•„Åó„Å¶Ë°®Á§∫„Åï„Åõ„Çã„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Çí‰ΩúÊàê„Åó„Åæ„Åó„Åü„ÅÆ„ÅßÁ¥π‰ªã„Åó„Åæ„Åô„ÄÇ  [„Äê„ÇΩ„Éº„Çπ„Ç≥„Éº„Éâ„ÅØ„Åì„Å°„Çâ„Äë](https://github.com/atman-33/pc-camera-app-cs)  **2020/4/14ËøΩË®ò**   „ÇΩ„Éº„Çπ„Ç≥„Éº„Éâ„Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åó„Å¶„ÄÅVisual Studio „Åã„Çâ„ÇΩ„É™„É•„Éº„Ç∑„Éß„É≥„Éï„Ç°„Ç§„É´„ÇíÈñã„Åè„Å®ÂèÇÁÖßÈÉ®ÂàÜ„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åô„ÇãÂ†¥Âêà„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇNuget„Éë„ÉÉ„Ç±„Éº„Ç∏„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Å¶‰∏ã„Åï„ÅÑ„ÄÇ  ___ ## Ê¶ÇË¶Å PC„Å´ÂÜÖËîµ„Åï„Çå„Å¶„ÅÑ„Çã„Ç´„É°„É©„Å®ÁîªÂÉèÂá¶ÁêÜ„É¢„Éº„Éâ„ÇíÈÅ∏Êäû„Åô„Çã„Åì„Å®„Åß„ÄÅÂØæÂøú„Åó„ÅüÊò†ÂÉè„Çí„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Å´Ë°®Á§∫„Åó„Åæ„Åô„ÄÇ  „ÄêÁîªÂÉèÂá¶ÁêÜ„É¢„Éº„Éâ„Äë - „Å™„Åó - „Ç∞„É¨„Éº„ÄÄÔºö„ÄÄÊò†ÂÉè„Åå„Ç∞„É¨„Éº„Å´„Å™„Çä„Åæ„Åô„ÄÇ - È°îË™çË≠ò„ÄÄÔºö„ÄÄÈ°î„ÇíË™çË≠ò„Åó„ÅüÈÉ®ÂàÜ„Å´Ëµ§„ÅÆÁü©ÂΩ¢„ÇíË°®Á§∫„Åó„Åæ„Åô„ÄÇ  ![image](/blog/20/app_sample.png)  ___ ## „Éë„ÉÉ„Ç±„Éº„Ç∏ÊßãÊàê ‰ªäÂõû„ÅÆ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅØVisual Studio„Åß‰ΩúÊàê„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Éï„Ç©„É´„ÉÄÂÜÖ„Å´„ÅØÂ§ö„Åè„ÅÆ„Éï„Ç°„Ç§„É´„ÅåÂê´„Åæ„Çå„Å¶„Åä„Çä„Åæ„Åô„ÅÆ„Åß„ÄÅ‰∏ª„Å™„Éï„Ç°„Ç§„É´„ÅÆ„ÅøË™¨Êòé„Åó„Åæ„Åô„ÄÇ  „Åì„Å°„Çâ„ÅØ„ÄÅ‰∏ä„Åß„ÉÄ„Ç¶„É≥„É≠„Éº„ÉâÂèØËÉΩ„Å™„ÇΩ„Éº„Çπ„Ç≥„Éº„Éâ„Å®ÂØæÂøú„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ```text PcCameraApp |-MainForm.cs |-OpenCVSharpBitmap.cs |-haarcascade_frontalface_default.xml ```  |„Éï„Ç°„Ç§„É´Âêç|Ê©üËÉΩ| |:--|:--| MainForm.cs|„Ç¢„Éó„É™„ÅÆÊìç‰Ωú„Å´ÂØæ„Åô„ÇãÂêÑÁ®ÆÂá¶ÁêÜ OpenCVSharpBitmap.cs|Êò†ÂÉè„ÇíÂä†Â∑•„Åó„Å¶Bitmap„ÅßËøî„Åô„ÇØ„É©„Çπ haarcascade_frontalface_default.xml|È°î„ÇíÊ§úÂá∫„Åô„Çã„Ç´„Çπ„Ç±„Éº„Éâ„Éï„Ç°„Ç§„É´  ___ ## Ë£Ω‰ΩúÊâãÈ†Ü Visual Studio „ÇíÁî®„ÅÑ„Åü„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆË£Ω‰ΩúÊâãÈ†Ü„Å´„Å§„ÅÑ„Å¶Ë™¨Êòé„Åó„Å¶„ÅÑ„Åç„Åæ„Åô„ÄÇ  ___ ### ‚ë†„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆ‰ΩúÊàê „Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆ‰ΩúÊàê„Å´Èñ¢„Åó„Å¶„ÄÅË©≥Á¥∞„ÅÆË™¨Êòé„ÅØÁúÅÁï•„Åï„Åõ„Å¶È†Ç„Åç„Åæ„Åô„ÄÇ  ‰∏ãË®ò„É™„É≥„ÇØ„ÇíÂèÇËÄÉ„Å´„Åó„Å¶„Éó„É≠„Ç∏„Çß„ÇØ„Éà‰ΩúÊàê„Åæ„ÅßÈÄ≤„ÇÅ„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ  [Visual Studio „Åß„ÅÆÊñ∞„Åó„ÅÑ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆ‰ΩúÊàê](https://docs.microsoft.com/ja-jp/visualstudio/ide/create-new-project?view=vs-2019)  ___ ### ‚ë°OpenCVSharp„Ç§„É≥„Çπ„Éà„Éº„É´ ÁîªÂÉèÂá¶ÁêÜ„ÅÆÊ©üËÉΩ„ÇíÊâ±„Åà„Çã„Çà„ÅÜ„Å´ OpenCVSharp „Çí‰ΩøÁî®„Åß„Åç„Çã„Çà„ÅÜ„Å´„Åó„Åæ„Åô„ÄÇ  „Äå„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Äç‚Üí„ÄåNuGet „Éë„ÉÉ„Ç±„Éº„Ç∏„ÅÆÁÆ°ÁêÜ„Äç„ÇíÈñã„Åç„Åæ„Åô„ÄÇ  ![image](/blog/20/visual_studio_1.png)  ÂèÇÁÖß„Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„ÄÅ„Äåopencv„Äç„ÇíÂÖ•Âäõ„Åó„Åæ„Åô„ÄÇ  Ë°®Á§∫„Åï„Çå„Åü‰∏ÄË¶ß„Åã„Çâ„ÄÅ„ÄåOpenCvSharp3-AnyCPU„Äç„ÇíÈÅ∏Êäû„Åó„Å¶„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åô„ÄÇ  ![image](/blog/20/11.png)  ___ ### ‚ë¢AForge.NET„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ  PC‰ªòÈöè„ÅÆ„Ç´„É°„É©„ÇíÂà©Áî®„Åô„ÇãÈöõ„Å´„ÅØ„ÄÅAForge.NET„Å®„ÅÑ„ÅÜÂ§ñÈÉ®„É©„Ç§„Éñ„É©„É™„Åß‰∏ÄÈÄö„Çä„ÅÆÂá¶ÁêÜ„Åå„Åæ„Åã„Å™„Åà„Åæ„Åô„ÄÇ  „Åì„Åì„Åß„ÄÅ„Ç´„É°„É©„ÅÆÊò†ÂÉèÂèñÂæóÁî®„É©„Ç§„Éñ„É©„É™„ÇíÊ∫ñÂÇô„Åó„Åæ„Åô„ÄÇ  [AFroge.net„ÅÆÈÖçÂ∏É„Çµ„Ç§„Éà](http://www.aforgenet.com/framework/downloads.html)  „ÄåDownload Libraries Only „Äç„ÇíÈÅ∏Êäû„Åó„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„ÇíË°å„ÅÑ„Åæ„Åô„ÄÇ  ![image](/blog/20/aforge_net.png)  ___ ### ‚ë£AForge.NET „É¢„Ç∏„É•„Éº„É´ÂèÇÁÖßË®≠ÂÆö „ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åó„Åü„Éï„Ç©„É´„ÉÄÔºàAForge.NET Framework-2.2.5-(libs only).zipÔºâ„ÅÆ‰∏≠„Å´„ÄåRelese„Äç„Å®„ÅÑ„ÅÜ„Éï„Ç©„É´„ÉÄ„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ  „Åì„ÅÆ„ÄåRelese„Äç„Éï„Ç©„É´„ÉÄ„Åã„Çâ„ÄÅ‰ªäÂõûÂøÖË¶Å„Å™‰∏ãË®ò„ÅÆÔºíÁÇπ„ÅÆ„Éï„Ç°„Ç§„É´„ÇíVisual Studio„ÅÆÂèÇÁÖßË®≠ÂÆö„Å´ËøΩÂä†„Åó„Åæ„Åô„ÄÇ  - AForge.Video.dll - AForge.Video.DirecrtShow.dll  ![image](/blog/20/visual_studio_1.png) ![image](/blog/20/visual_studio_2.png)  ___ ### ‚ë§„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆ„Éá„Ç∂„Ç§„É≥Ë£Ω‰Ωú ‰ªäÂõû„ÅÆ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅØ„Ç∑„É≥„Éó„É´„Åß„Åô„ÄÇ  „Éï„Ç©„Éº„É†„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆ„Éá„Ç∂„Ç§„É≥ÂÅ¥„Åß„ÄÅ„ÉÑ„Éº„É´„Éú„ÉÉ„ÇØ„Çπ„Çà„Çä„ÄÅÂøÖË¶Å„Å™Êï∞„ÅÆComboBox„ÄÅButton„ÄÅLabel„ÄÅPictureBox„ÄÅTimer„ÇíÈÖçÁΩÆ„Åó„Åæ„Åô„ÄÇ  „Åì„Åì„Åß„ÄÅPictureBox „ÅØ„Ç´„É°„É©Êò†ÂÉè„ÇíÊò†„ÅôÈÉ®ÂàÜ„Åß„Åô„Åå„ÄÅÊò†ÂÉè„ÅåÂ§ß„Åç„ÅÑÂ†¥Âêà„ÅØ„ÄÅÊ∫ñÂÇô„Åó„Åü PictureBox ÂÜÖ„Å´Êò†ÂÉè„ÅåÂèé„Åæ„Çä„Åæ„Åõ„Çì„ÄÇ   „Åù„ÅÆ„Åü„ÇÅ„ÄÅPictureBox „ÅÆ SizeMode „Çí StreachImage „Å´Â§âÊõ¥„Åó„Å¶„Åä„Åç„Åæ„Åó„Çá„ÅÜ„ÄÇ  ![image](/blog/20/visual_studio_3.png)  ___ ### ‚ë•„ÇΩ„Éº„Çπ„Ç≥„Éº„Éâ„ÅÆÂüã„ÇÅËæº„Åø „Åì„Åì„Åã„Çâ„ÅØ„ÇΩ„Éº„Çπ„Ç≥„Éº„Éâ„Å´„Å§„ÅÑ„Å¶„Åß„Åô„ÄÇ„Åæ„Åö„ÅØ„ÄÅ„Éï„Ç©„Éº„É†„ÅÆ„Ç≥„Éº„ÉâÂÅ¥„Åß„Åô„ÄÇ  ‚ñº MainForm.cs  ```cs using System; using System.Collections.Generic; using System.ComponentModel; using System.Data; using System.Diagnostics; using System.Drawing; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows.Forms;  using AForge.Video;             // AForge.NET„É©„Ç§„Éñ„É©„É™„Åã„ÇâË™≠Ëæº using AForge.Video.DirectShow;  // AForge.NET„É©„Ç§„Éñ„É©„É™„Åã„ÇâË™≠Ëæº  using Original;  namespace PcCameraApp {     public partial class MainForm : Form     {         // „Éï„Ç£„Éº„É´„Éâ         readonly string[] IMAGE_MODE = { \"„Å™„Åó\", \"„Ç∞„É¨„Éº\", \"È°îË™çË≠ò\" };  // ÁîªÂÉèÂá¶ÁêÜ„É¢„Éº„Éâ         private string mode;                                            // ÁèæÂú®„ÅÆÁîªÂÉèÂá¶ÁêÜ„É¢„Éº„Éâ          public bool DeviceExist = false;                // „Éá„Éê„Ç§„ÇπÊúâÁÑ°         public FilterInfoCollection videoDevices;       // „Ç´„É°„É©„Éá„Éê„Ç§„Çπ„ÅÆ‰∏ÄË¶ß         public VideoCaptureDevice videoSource = null;   // „Ç´„É°„É©„Éá„Éê„Ç§„Çπ„Åã„ÇâÂèñÂæó„Åó„ÅüÊò†ÂÉè          public MainForm()         {             InitializeComponent();         }          // Load„Ç§„Éô„É≥„ÉàÔºàForm„ÅÆÁ´ã„Å°‰∏ä„ÅíÊôÇ„Å´ÂÆüË°åÔºâ         private void Form1_Load(object sender, EventArgs e)         {             Debug.WriteLine(\"Form„ÅÆ„É≠„Éº„ÉâÈñãÂßã\");             this.getCameraInfo();         }          // „Ç´„É°„É©ÊÉÖÂ†±„ÅÆÂèñÂæó         public void getCameraInfo()         {             try             {                 // Á´ØÊú´„ÅßË™çË≠ò„Åó„Å¶„ÅÑ„Çã„Ç´„É°„É©„Éá„Éê„Ç§„Çπ„ÅÆ‰∏ÄË¶ß„ÇíÂèñÂæó                 videoDevices = new FilterInfoCollection(FilterCategory.VideoInputDevice);                 comboBoxCameraType.Items.Clear();                  if (videoDevices.Count == 0)                     throw new ApplicationException();                  foreach (FilterInfo device in videoDevices)                 {                     // „Ç´„É°„É©„Éá„Éê„Ç§„Çπ„ÅÆ‰∏ÄË¶ß„Çí„Ç≥„É≥„Éú„Éú„ÉÉ„ÇØ„Çπ„Å´ËøΩÂä†                     comboBoxCameraType.Items.Add(device.Name);                     comboBoxCameraType.SelectedIndex = 0;                     DeviceExist = true;                 }             }             catch (ApplicationException)             {                 DeviceExist = false;                 comboBoxCameraType.Items.Add(\"Device„ÅåÂ≠òÂú®„Åó„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ\");             }              comboBoxMode.Items.Clear();              // ÁîªÂÉèÂá¶ÁêÜ„É¢„Éº„Éâ„ÅÆËøΩÂä†             foreach (string mode in IMAGE_MODE)             {                 comboBoxMode.Items.Add(mode);             }         }          // ÈñãÂßãorÂÅúÊ≠¢„Éú„Çø„É≥         private void button1_Click(object sender, EventArgs e)         {             Debug.WriteLine(\"„Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØ\");             mode = comboBoxMode.Text;              if (buttonStartStop.Text == \"ÈñãÂßã\")             {                  if (DeviceExist)                 {                     videoSource = new VideoCaptureDevice(videoDevices[comboBoxCameraType.SelectedIndex].MonikerString);                     videoSource.NewFrame += new NewFrameEventHandler(videoRendering);                     this.CloseVideoSource();                      videoSource.Start();                      buttonStartStop.Text = \"ÂÅúÊ≠¢\";                     timer1.Enabled = true;                      Debug.WriteLine(\"ÁîªÂÉèÂá¶ÁêÜ„É¢„Éº„ÉâÔºö\" + mode);                 }                 else                 {                     labelFps.Text = \"„Éá„Éê„Ç§„Çπ„ÅåÂ≠òÂú®„Åó„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ\";                 }             }             else             {                 if (videoSource.IsRunning)                 {                     timer1.Enabled = false;                     this.CloseVideoSource();                     labelFps.Text = \"ÂÅúÊ≠¢‰∏≠\";                     buttonStartStop.Text = \"ÈñãÂßã\";                  }             }         }         // ÊèèÁîªÂá¶ÁêÜ         private void videoRendering(object sender, NewFrameEventArgs eventArgs)         {             Bitmap img = (Bitmap)eventArgs.Frame.Clone();              Debug.WriteLine(DateTime.Now + \":\" + \"ÊèèÁîªÊõ¥Êñ∞\");             // Debug.WriteLine(mode);              try             {                 switch (mode)                 {                     case \"„Å™„Åó\":                         pictureBoxCamera.Image = img;                         break;                      case \"„Ç∞„É¨„Éº\":                         using (OpenCVSharpBitmap bitmap = new OpenCVSharpBitmap(img))                         {                             pictureBoxCamera.Image = bitmap.toGray();                         }                         break;                      case \"È°îË™çË≠ò\":                         using (OpenCVSharpBitmap bitmap = new OpenCVSharpBitmap(img))                         {                             string strCurDir = System.Environment.CurrentDirectory;                             Debug.WriteLine(strCurDir);                             // pictureBoxCamera.Image = bitmap.addFaceRect(@\"C:\\Users\\gpbjk\\source\\repos\\Original\\cs\\opencv\\haarcascade_frontalface_default.xml\");                             pictureBoxCamera.Image = bitmap.addFaceRect(strCurDir + @\"\\haarcascade_frontalface_default.xml\");                         }                         break;                      default:                         pictureBoxCamera.Image = img;                         break;                 }             }             catch             {                 pictureBoxCamera.Image = img;             }         }         // ÂÅúÊ≠¢„ÅÆÂàùÊúüÂåñ         private void CloseVideoSource()         {             if (!(videoSource == null))                 if (videoSource.IsRunning)                 {                     videoSource.SignalToStop();                     videoSource = null;                 }         }         // „Éï„É¨„Éº„É†„É¨„Éº„Éà„ÅÆÂèñÂæó         private void timer1_Tick(object sender, EventArgs e)         {             labelFps.Text = videoSource.FramesReceived.ToString() + \"FPS\";         }         // „ÇΩ„Éï„ÉàÁµÇ‰∫ÜÊôÇ„ÅÆ„ÇØ„É≠„Éº„Ç∫Âá¶ÁêÜ         private void MainForm_FormClosing(object sender, FormClosingEventArgs e)         {             if (videoSource != null)             {                 // Form „ÇíÈñâ„Åò„ÇãÈöõ„ÅØÊò†ÂÉè„Éá„Éº„ÇøÂèñÂæó„Çí„ÇØ„É≠„Éº„Ç∫                 if (videoSource.IsRunning)                 {                     this.CloseVideoSource();                 }             }         }     } } ```  ÊèèÁîªÂá¶ÁêÜÈÉ®ÂàÜ„Åß„ÄÅ„ÇØ„É©„Çπ„ÄåOpenCVSharpBitmap „Äç„Çí‰Ωø„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇ  „Åì„ÅÆ„ÇØ„É©„Çπ„Åß„ÄÅÊò†ÂÉè„ÇíÂä†Â∑•„Åó„Å¶Bitmap„ÅÆ„Éá„Éº„Çø„ÇíËøî„ÅôÂá¶ÁêÜ„ÇíË°å„ÅÑ„Åæ„Åô„ÄÇ  ‚ñºOpenCVSharpBitmap .cs  ```cs using OpenCvSharp; using OpenCvSharp.Extensions; using System; using System.Drawing;  ///  /// „Ç™„É™„Ç∏„Éä„É´„ÇØ„É©„Çπ ///  namespace Original {     public class OpenCVSharpBitmap : IDisposable     {         private Mat mat;          ///          /// „Ç≥„É≥„Çπ„Éà„É©„ÇØ„Çø         ///          ///         public OpenCVSharpBitmap(Bitmap img)         {             this.mat = BitmapConverter.ToMat(img);         }          public void Dispose()         {             ((IDisposable)mat).Dispose();         }          ///          /// „Ç∞„É¨„Éº„Å´Â§âÊèõ„Åó„ÅüBitmap„ÇíÂèñÂæó         ///          ///         public Bitmap toGray()         {             Mat matGray = mat.CvtColor(ColorConversionCodes.BGR2GRAY);             return BitmapConverter.ToBitmap(matGray);         }          ///          /// È°î„ÇíË™çË≠ò„Åó„Å¶Ëµ§Êû†„ÇíËøΩÂä†„Åó„ÅüBitmap„ÇíÂèñÂæó         ///          ///         ///         public Bitmap addFaceRect(string @cascadePath)         {             // ÂàÜÈ°ûÊ©ü„ÅÆÁî®ÊÑè             using (CascadeClassifier cascade = new CascadeClassifier(@cascadePath))             {                 foreach (Rect rectFace in cascade.DetectMultiScale(mat))                 {                     // Ë¶ã„Å§„Åã„Å£„ÅüÂ†¥ÊâÄ„Å´Ëµ§Êû†„ÇíË°®Á§∫                     Rect rect = new Rect(rectFace.X, rectFace.Y, rectFace.Width, rectFace.Height);                     mat.Rectangle(rect, new OpenCvSharp.Scalar(0,0,255), 3, LineTypes.Link8);                 }             }              return BitmapConverter.ToBitmap(mat);         }     } } ``` ___ ### ‚ë¶È°îË™çË≠ò„ÅÆÊñπÊ≥ï È°îË™çË≠ò„Åó„ÅüÁü©ÂΩ¢„ÇíÊò†ÂÉè„Å´Âä†„Åà„ÇãÂá¶ÁêÜ„ÅØ„ÄÅË£úË∂≥„ÅßË™¨Êòé„Åó„Å¶„Åä„Åç„Åæ„Åô„ÄÇ  „Åæ„Åö„ÄÅ‰ªäÂõû„ÅÆÈ°îË™çË≠ò„Åß„ÅØ **„Äå„Ç´„Çπ„Ç±„Éº„ÉâÂàÜÈ°û„Äç** „Å®Âëº„Å∞„Çå„ÇãÊñπÊ≥ï„ÇíÁî®„ÅÑ„Å¶„ÅÑ„Åæ„Åô„ÄÇ   ‰∫à„ÇÅ„ÄÅÁâπÂÆö„ÅÆ„É¢„Éé„ÇíÂå∫Âà•„Åô„ÇãË®≠ÂÆöÂÄ§„ÅåÂê´„Åæ„Çå„ÇãXML„Éï„Ç°„Ç§„É´Ôºà„Ç´„Çπ„Ç±„Éº„Éâ„Éï„Ç°„Ç§„É´Ôºâ„Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åó„Å¶„Åä„Åç„ÄÅ„Åù„ÅÆ„Éï„Ç°„Ç§„É´„Çí OpenCvSharp „ÅÆÈñ¢Êï∞„Åã„ÇâË™≠„ÅøËæº„Åø„Åæ„Åô„ÄÇ  È°îË™çË≠ò„Å´ÂøÖË¶Å„Å™XML„Éï„Ç°„Ç§„É´„Äåhaarcascade_frontalface_default.xml„Äç„ÅØ„ÄÅ‰∏ãË®ò„ÅÆgithub„Åã„Çâ„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åß„Åç„Åæ„Åô„ÄÇ   [xml„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ](https://github.com/opencv/opencv/blob/master/data/haarcascades/haarcascade_frontalface_default.xml)  ‰ªäÂõû„ÅÆ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Åß„ÅØ„ÄÅ„Ç´„Çπ„Ç±„Éº„Éâ„Éï„Ç°„Ç§„É´„ÇíÂêå„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆÂÆüË°å„Éï„Ç©„É´„ÉÄ„Å´‰øùÂ≠ò„Åó„Å¶Êâ±„ÅÜ„Çà„ÅÜ„Å´„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  MainForm.cs ```cs pictureBoxCamera.Image = bitmap.addFaceRect(strCurDir + @\"\\haarcascade_frontalface_default.xml\"); ```  OpenCVSharpBitmap.cs ```cs using (CascadeClassifier cascade = new CascadeClassifier(@cascadePath)) ```  „Åì„ÅÆ„Çà„ÅÜ„Å´„ÄÅ„Ç´„Çπ„Ç±„Éº„Éâ„Éï„Ç°„Ç§„É´„ÅØÂÆüË°å„Éï„Ç°„Ç§„É´„Å®Âêå„Åò„Éï„Ç©„É´„ÉÄ„ÅÆ„Éï„Ç°„Ç§„É´„ÇíÂèÇÁÖß„Åó„Åæ„Åô„ÅÆ„Åß„ÄÅ„Éì„É´„Éâ„Åô„ÇãÈöõ„Å´„ÅØ„Ç´„Çπ„Ç±„Éº„Éâ„Éï„Ç°„Ç§„É´„Çí‰∏ÄÁ∑í„Å´Âá∫Âäõ„Åï„Åõ„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ  ![image](/blog/20/visual_studio_4.png)  „Åì„Çå„ÅßË™¨Êòé„ÅØÁµÇ‰∫Ü„Åß„Åô„ÄÇ  ‰ªäÂõû„ÅØ„ÅÇ„Åè„Åæ„Åß„Ç∑„É≥„Éó„É´„Å™„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Åß„Åô„ÄÇ  ÁîªÂÉèÂá¶ÁêÜ„ÅÆÂÆüË£ÖÊñπÊ≥ï„Å™„Å©„ÅØÊµÅÁî®„Åß„Åç„Åæ„Åô„ÅÆ„Åß„ÄÅËá™ÂàÜÂ•Ω„Åø„ÅÆ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÇíÈñãÁô∫„Åó„Å¶„ÅÑ„ÅèÂèÇËÄÉ„Å´„Å™„Çå„Å∞Âπ∏„ÅÑ„Åß„Åô„ÄÇ  ‰ª•‰∏ä„Åß„Åô„ÄÇ "},"_id":"blog/20-pc-camera-app-cs.mdx","_raw":{"sourceFilePath":"blog/20-pc-camera-app-cs.mdx","sourceFileName":"20-pc-camera-app-cs.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/20-pc-camera-app-cs"},"type":"Post","slug":"/blog/20-pc-camera-app-cs","slugAsParams":"20-pc-camera-app-cs"},{"title":"VBA | DBÊìç‰Ωú ‚Äì Á¨¨1ÂõûÔºöConfig„Ç∑„Éº„Éà„ÅÆË®≠ÂÆöÂÄ§„ÇíVBA‰∏ä„ÅßÂèñ„ÇäÊâ±„ÅÜ","description":"Excel„Éû„ÇØ„É≠ Á¨¨1ÂõûÔºö[Config„Ç∑„Éº„Éà„ÅÆË®≠ÂÆöÂÄ§„ÇíVBA‰∏ä„ÅßÂèñ„ÇäÊâ±„ÅÜ]","date":"2020-04-14T00:00:00.000Z","emoji":"‚õè","tags":["vba"],"published":true,"body":{"raw":" DBÊìç‰Ωú„ÇíË°å„ÅÜExcel„Éû„ÇØ„É≠„Çí‰ΩúÊàê„Åó„Åæ„Åó„Åü„ÄÇ  ‰ªäÂõû„ÅÆ„Éû„ÇØ„É≠„ÅØË®òËºâ„Åô„ÇãÂÜÖÂÆπ„ÅåÂ§ö„ÅÑ„Åü„ÇÅ„ÄÅË®à4Âõû„Å´ÂàÜ„Åë„Å¶Ë™¨Êòé„Åó„Åæ„Åô„ÄÇ  Á¨¨1ÂõûÔºö[Config„Ç∑„Éº„Éà„ÅÆË®≠ÂÆöÂÄ§„ÇíVBA‰∏ä„ÅßÂèñ„ÇäÊâ±„ÅÜ](/blog/21-excel1-config-sheet-excel-vba/)   Á¨¨2ÂõûÔºö[SELECTÊñá„Å´„Çà„ÇäÂèñÂæó„Åó„Åü„Éá„Éº„Çø„ÇíExcel„Å´Ê†ºÁ¥ç](/blog/22-excel2-sql-select-excel-vba/)   Á¨¨3ÂõûÔºö[Excel „Åã„Çâ INSERT, UPDATE, DELETE „ÇíÂÆüË°å](/blog/23-excel3-sql-insert-update-delete-excel-vba/)   Á¨¨4ÂõûÔºö[Excel „Åã„Çâ MERGE „ÇíÂÆüË°å](/blog/24-excel4-sql-merge-excel-vba/)      [„ÄêExcel„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„ÅØ„Åì„Å°„Çâ„Äë](https://github.com/atman-33/template-excel-vba/tree/main/Template_OracleDB%E6%93%8D%E4%BD%9C)  ‚Äª2021/2/5Êîπ‰øÆÁâà   „ÄÄ„ÉªODBCÊé•Á∂ö„Åã„ÇâOraOLEDB.OracleÊé•Á∂ö„Å´Â§âÊõ¥   „ÄÄ„ÉªINSER,UPDATE,MERGEÊñá„ÅÆÁîüÊàêÊñπÊ≥ï„Çí‰øÆÊ≠£    ___ ## Ê¶ÇË¶Å Á¨¨1ÂõûÁõÆ„ÅØ„ÄÅDBÊìç‰Ωú„Åß‰ΩøÁî®„Åô„ÇãÂêÑË®≠ÂÆöÂÄ§„ÇíVBAÔºà„Éû„ÇØ„É≠ÈñãÁô∫Ôºâ„ÅßÊâ±„ÅÜÊñπÊ≥ï„Å´„Å§„ÅÑ„Å¶Ë™¨Êòé„Åó„Åæ„Åô„ÄÇ  ![image](/blog/21/01.png)  OracleÊé•Á∂ö„Å´ÂøÖË¶Å„Å™„Äå„Çµ„Éº„Éì„ÇπÂêç„Äç„Éª„Äå„É¶„Éº„Ç∂„ÉºÂêç„Äç„Éª„Äå„Éë„Çπ„ÉØ„Éº„Éâ„Äç„ÅÆÔºì„Å§„ÇíConfig„Ç∑„Éº„Éà„ÅßË®≠ÂÆö„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ‰ªäÂõûË™¨Êòé„Åô„Çã Configurator „ÇØ„É©„Çπ„Çí‰Ωø„Åà„Å∞„ÄÅË®≠ÂÆöÂÄ§ÊÉÖÂ†±„ÇíÁ∞°Âçò„Å´ËøΩÂä†„Åß„Åç„Åæ„Åô„ÄÇ   Ôºà„ÅÑ„Çè„ÇÜ„Çã ini „Éï„Ç°„Ç§„É´„ÇíExcel„Å´Âèñ„ÇäËæº„Çì„Å†„Ç§„É°„Éº„Ç∏Ôºâ  ___ ### „Éë„ÉÉ„Ç±„Éº„Ç∏ÊßãÊàê Excel„Éû„ÇØ„É≠ÂÜÖ„ÅÆÊßãÊàê„ÅØ‰∏ãË®ò„Å®„Å™„Çä„Åæ„Åô „ÄÇ Ôºà‰ΩøÁî®„Åô„Çã„É¢„Ç∏„É•„Éº„É´„ÅÆ„Åø‰∏ãË®ò„Å´Ë®òËºâÔºâ  ```text Template_ver1.x.x.xlsm ‚îúÊ®ôÊ∫ñ„É¢„Ç∏„É•„Éº„É´ |   ‚îúmodCmnGlbConst | | „ÇØ„É©„Çπ„É¢„Ç∏„É•„Éº„É´     ‚îúConfigurator ```  ___ ## „ÇΩ„Éº„Çπ„Ç≥„Éº„ÉâËß£Ë™¨  ___ ### ‚ë†modCmnGlbConst Excel„Ç∑„Éº„Éà„Åã„ÇâË®≠ÂÆöÂÄ§„ÇíÊäΩÂá∫„Åô„Çã„Åü„ÇÅ„Å´„ÄÅConfig ÊÉÖÂ†±„ÅåË®òËºâ„Åï„Çå„Å¶„ÅÑ„Çã Excel „ÅÆ„Äå„Ç∑„Éº„Éà„ÉªË°å„ÉªÂàó„Äç„ÇíÂÆöÁæ©„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ```vb Option Explicit  ' Config Ë®≠ÂÆö„Ç∑„Éº„ÉàÊÉÖÂ†± Public Const GLB_CONFIG_SHEET = \"Config\" Public Const GLB_CONFIG_KEY_COL = 1 Public Const GLB_CONFIG_ITEM_COL = 2 Public Const GLB_CONFIG_START_ROW = 2 ```  ‰æã„Åà„Å∞„ÄÅConfig „Ç∑„Éº„Éà„Åß„ÅØ„Å™„ÅÑÂà•„Ç∑„Éº„ÉàÂêç„Çí‰Ωø„ÅÑ„Åü„ÅÑÂ†¥Âêà„ÅØ„ÄÅ‰∏äË®òÂÆöÊï∞ GLB_CONFIG_SHEET „ÇíÂ§âÊõ¥„Åó„Åæ„Åô„ÄÇ  ___ ### ‚ë°Configurator Config ÊÉÖÂ†±„ÇíÊäΩÂá∫„Åô„ÇãÊ©üËÉΩ„ÇíÊåÅ„Å£„Åü„ÇØ„É©„Çπ„Åß„Åô„ÄÇ Ëß£Ë™¨„ÅØ„Ç≥„É°„É≥„Éà„Å®„Åó„Å¶Ë®òËºâ„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ```vb ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' Configurator „ÇØ„É©„Çπ ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----  Option Explicit  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' „Äê‰ΩøÁî®ÊâãÈ†Ü„Äë ' ‚ë† „Ç§„É≥„Çπ„Çø„É≥„ÇπÁîüÊàê ' ‚ë° setData    ÔºöË®≠ÂÆöÂÄ§„ÇíÊ†ºÁ¥ç ' ‚ë¢ getItem    ÔºöË®≠ÂÆöÂÄ§„ÇíÂèñÂæó ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----  ' „É°„É≥„ÉêÂ§âÊï∞ÔºàMe.„ÅßÂèÇÁÖßÂèØËÉΩ„Å®„Åô„Çã„Åü„ÇÅpublicÔºâ Public dic As Object  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : „Ç≥„É≥„Çπ„Éà„É©„ÇØ„Çø ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Private Sub Class_Initialize()      Set Me.dic = CreateObject(\"Scripting.Dictionary\")  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : Config ÊÉÖÂ†±„Åß„ÅÇ„ÇãË®≠ÂÆöÈ†ÖÁõÆ„Å®Ë®≠ÂÆöÂÄ§„ÇíÊ†ºÁ¥ç ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub setData(sheet As Worksheet, keyCol As Long, itemCol As Long, startRow As Long)      Dim i As Long     Dim row As Long      Dim key As String, item As String      i = 0     row = startRow      Do While sheet.Cells(row, keyCol) <> \"\"          key = sheet.Cells(row, keyCol)         item = sheet.Cells(row, itemCol)          Me.dic.add key, item          row = row + 1     Loop  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : setData Èñ¢Êï∞„ÅßÂèñÂæó„Åó„Åü Config ÊÉÖÂ†±„ÅÆË®≠ÂÆöÂÄ§„ÇíÂèñÂæó ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Function getItem(key As String) As String      getItem = dic.item(key)  End Function ```  ___ ### ‚ë¢Configurator „ÅÆ‰ΩøÁî®‰æã Configurator „ÇØ„É©„Çπ„ÇíÁî®„ÅÑ„Åü‰ΩøÁî®‰æã„Åß„Åô„ÄÇ  ‰∏ãË®ò„ÇíÂÆüË°å„Åô„Çã„Å®„ÄÅ„É°„ÉÉ„Çª„Éº„Ç∏„Éú„ÉÉ„ÇØ„Çπ„Å´ Config „Ç∑„Éº„Éà„ÅßË®≠ÂÆö„Åó„Åü SERVICE_NAME „ÅÆÂÄ§„ÅåË°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ  ```vb Option Explicit      Dim config As Configurator  Public Sub main()      Dim servicename As String, username As String, password As String, accessPath As String      ' Config Ë®≠ÂÆö„ÅÆË™≠„ÅøËæº„Åø     Set config = New Configurator     config.setData ThisWorkbook.Worksheets(GLB_CONFIG_SHEET), GLB_CONFIG_KEY_COL, GLB_CONFIG_ITEM_COL, GLB_CONFIG_START_ROW      servicename = config.getItem(\"SERVICE_NAME\")     Msgbox servicename  End Sub ```  ‰ªäÂõû„ÅØ‰ª•‰∏ä„Å®„Å™„Çä„Åæ„Åô„ÄÇ  Ê¨°Âõû„ÅØ„ÄÅConfig „Ç∑„Éº„Éà„ÅßË®≠ÂÆö„Åó„ÅüÈ†ÖÁõÆÂÄ§„ÇíÊâ±„ÅÑ DB „ÅÆ„Éá„Éº„Çø„ÇíÂèñÂæó„Åô„ÇãÊñπÊ≥ï„ÇíË™¨Êòé„Åó„Åæ„Åô„ÄÇ "},"_id":"blog/21-excel1-config-sheet-excel-vba.mdx","_raw":{"sourceFilePath":"blog/21-excel1-config-sheet-excel-vba.mdx","sourceFileName":"21-excel1-config-sheet-excel-vba.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/21-excel1-config-sheet-excel-vba"},"type":"Post","slug":"/blog/21-excel1-config-sheet-excel-vba","slugAsParams":"21-excel1-config-sheet-excel-vba"},{"title":"VBA | DBÊìç‰Ωú ‚Äì Á¨¨2ÂõûÔºöSELECTÊñá„Å´„Çà„ÇäÂèñÂæó„Åó„Åü„Éá„Éº„Çø„ÇíExcel„Å´Ê†ºÁ¥ç","description":"Excel„Éû„ÇØ„É≠ Á¨¨2ÂõûÔºö[SELECTÊñá„Å´„Çà„ÇäÂèñÂæó„Åó„Åü„Éá„Éº„Çø„ÇíExcel„Å´Ê†ºÁ¥ç]","date":"2020-04-15T00:00:00.000Z","emoji":"‚õè","tags":["vba"],"published":true,"body":{"raw":" DBÊìç‰Ωú„ÇíË°å„ÅÜExcel„Éû„ÇØ„É≠„Å´„Å§„ÅÑ„Å¶Ë™¨Êòé„Åó„Åæ„Åô„ÄÇ  ‰ªäÂõû„ÅÆË®ò‰∫ã„ÅØ„ÄéÁ¨¨2Âõû„Äè„Å®„Å™„Çä„Åæ„Åô„ÄÇ  Á¨¨1ÂõûÔºö[Config„Ç∑„Éº„Éà„ÅÆË®≠ÂÆöÂÄ§„ÇíVBA‰∏ä„ÅßÂèñ„ÇäÊâ±„ÅÜ](/blog/21-excel1-config-sheet-excel-vba/)   Á¨¨2ÂõûÔºö[SELECTÊñá„Å´„Çà„ÇäÂèñÂæó„Åó„Åü„Éá„Éº„Çø„ÇíExcel„Å´Ê†ºÁ¥ç](/blog/22-excel2-sql-select-excel-vba/)   Á¨¨3ÂõûÔºö[Excel „Åã„Çâ INSERT, UPDATE, DELETE „ÇíÂÆüË°å](/blog/23-excel3-sql-insert-update-delete-excel-vba/)   Á¨¨4ÂõûÔºö[Excel „Åã„Çâ MERGE „ÇíÂÆüË°å](/blog/24-excel4-sql-merge-excel-vba/)    [„ÄêExcel„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„ÅØ„Åì„Å°„Çâ„Äë](https://github.com/atman-33/template-excel-vba/tree/main/Template_OracleDB%E6%93%8D%E4%BD%9C)  ‚Äª2021/2/5Êîπ‰øÆÁâà   „ÄÄ„ÉªODBCÊé•Á∂ö„Åã„ÇâOraOLEDB.OracleÊé•Á∂ö„Å´Â§âÊõ¥   „ÄÄ„ÉªINSER,UPDATE,MERGEÊñá„ÅÆÁîüÊàêÊñπÊ≥ï„Çí‰øÆÊ≠£    ___ ## Ê¶ÇË¶Å Á¨¨2ÂõûÁõÆ„ÅØ„ÄÅSELECTÊñá„Å´„Çà„ÇäÂèñÂæó„Åó„Åü„Éá„Éº„Çø„ÇíExcel„Å´Ê†ºÁ¥ç„Åô„ÇãÊñπÊ≥ï„Å´„Å§„ÅÑ„Å¶Ë™¨Êòé„Åó„Åæ„Åô„ÄÇ  ![image](/blog/22/00.png)  Excel„ÅÆ„ÄåConfig„Ç∑„Éº„Éà„Äç„Å´DBÊé•Á∂ö„ÇíË®≠ÂÆö„Åó„ÄÅ„ÄåSQL„Ç∑„Éº„Éà„Äç„Å´„Éá„Éº„ÇøÊäΩÂá∫„Åô„ÇãSQLÊñá„ÇíË®òËºâ„Åó„Å¶„Éû„ÇØ„É≠„ÇíÂÆüË°å„Åó„Åæ„Åô„ÄÇ  „Åù„ÅÜ„Åô„Çã„Å®„ÄÅÂêÑ„Ç∑„Éº„ÉàÔºàSQL„Ç∑„Éº„Éà„ÅÆ„Ç∑„Éº„ÉàÂêç„Å´Ë®òËºâ„Åó„ÅüÂêçÁß∞Ôºâ„Å´SELECT„Åó„ÅüÁµêÊûú„ÅåË≤º„Çä‰ªò„Åë„Çâ„Çå„Åæ„Åô„ÄÇ  ‰∏ãË®ò„Å´Êìç‰ΩúÊâãÈ†Ü„ÇíÁ§∫„Åó„Åæ„Åô„ÄÇ  ___ ### ‚ë†DBÊé•Á∂öË®≠ÂÆö Config„Ç∑„Éº„Éà„Å´DBÊé•Á∂ö„ÅÆË®≠ÂÆö„ÇíË®òËºâ„Åó„Åæ„Åô„ÄÇÔºàDB„ÅØOracle„ÅÆ„ÅøÂØæË±°Ôºâ  ![image](/blog/22/01.png)  SERVICE_NAMEÔºà„Çµ„Éº„Éì„ÇπÂêçÔºâ„ÅØOracle„ÅÆ„ÇØ„É©„Ç§„Ç¢„É≥„Éà„ÇÇ„Åó„Åè„ÅØ„Çµ„Éº„Éê„Éº„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Å¶‰ΩúÊàê„ÉªË®≠ÂÆö„Åó„Åü tnsnames.ora „Å´Ë®òËºâ„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ‰æã. ‰∏ãË®ò tnsnames.ora „ÅÆ‰æã„Åß„ÅØ„ÄÅTESTDB.GRAWOR„Åå„Çµ„Éº„Éì„ÇπÂêç„Åß„Åô„ÄÇ  ```text TESTDB =   (DESCRIPTION =     (ADDRESS = (PROTOCOL = TCP)(HOST = ***)(PORT = 1521))     (CONNECT_DATA =       (SERVER = DEDICATED)       (SERVICE_NAME = TESTDB.GRAWOR)     )   ) ``` ___ ### ‚ë°OracleÊé•Á∂ö„ÉÜ„Çπ„Éà Oracle DB„Å´Êé•Á∂ö„Åó„ÄÅ Config„Ç∑„Éº„Éà„ÅÆÊé•Á∂öË®≠ÂÆö„ÅåÊ≠£„Åó„ÅÑ„ÅãÁ¢∫Ë™ç„Åó„Åæ„Åô„ÄÇ  ![image](/blog/22/02.png)  „Äå„Ç™„É©„ÇØ„É´„Å∏„ÅÆÊé•Á∂ö„ÉÜ„Çπ„ÉàÂÆå‰∫Ü„Äç„Å®„É°„ÉÉ„Çª„Éº„Ç∏„ÅåË°®Á§∫„Åï„Çå„Çå„Å∞„ÄÅÂïèÈ°å„Å™„ÅèOracle DB„Å´Êé•Á∂ö„Åß„Åç„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ___ ### ‚ë¢SQLÊñá„ÇíÂÆüË°å SQLÂÆüË°å„Éú„Çø„É≥„ÇíÊäº„Åô„Å®„ÄÅSQLÊñá„ÇíÂÆüË°å„Åó„ÄÅÂêÑ„Ç∑„Éº„Éà„Å´ÊäΩÂá∫„Éá„Éº„Çø„ÇíË≤º„Çä‰ªò„Åë„Åæ„Åô„ÄÇ  ![image](/blog/22/03.png)  ![image](/blog/22/04.png)  SQL„Ç∑„Éº„Éà„ÅÆ„Äå„Ç∑„Éº„ÉàÂêç„ÄçÈ†ÖÁõÆ„Å´Ë®òËºâ„Åó„ÅüÂêçÁß∞„ÅÆ„Ç∑„Éº„Éà„Åå‰ΩúÊàê„Åï„Çå„ÄÅSQL„ÅÆÊäΩÂá∫ÁµêÊûú„ÅåË≤º„Çä‰ªò„Åë„Çâ„Çå„Åæ„Åô„ÄÇ  ___ ## „Éë„ÉÉ„Ç±„Éº„Ç∏ÊßãÊàê Excel„Éû„ÇØ„É≠ÂÜÖ„ÅÆÊßãÊàê„ÅØ‰∏ãË®ò„Å®„Å™„Çä„Åæ„Åô „ÄÇÔºà‰ΩøÁî®„Åô„Çã„É¢„Ç∏„É•„Éº„É´„ÅÆ„ÅøË®òËºâÔºâ  ```text Template_ver1.x.x.xlsm ‚îúÊ®ôÊ∫ñ„É¢„Ç∏„É•„Éº„É´ |   ‚îúmodCmnGlbConst |   ‚îúmodSql    | „ÇØ„É©„Çπ„É¢„Ç∏„É•„Éº„É´     ‚îúConfigurator     ‚îúDBManager ```  ___ ## „ÇΩ„Éº„Çπ„Ç≥„Éº„ÉâËß£Ë™¨ ‰ªäÂõû„ÅØ„ÄÅmodCmnGlbConst „Å® Configurator „ÅÆË™¨Êòé„ÅØÁúÅÁï•„Åó„Åæ„Åô„ÄÇ  ‚Äª‰∏äË®ò„ÅØDBÊìç‰Ωú ‚Äì Á¨¨1Âõû„Å´„Å¶Ë®òËºâ  ___ ### ‚ë†DBManager DBÊìç‰Ωú„ÇíË°å„ÅÜ„ÇØ„É©„Çπ„Åß„Åô„ÄÇOracle DB„Å∏„ÅÆÊé•Á∂ö„ÇÑSQL„ÇíÂÆüË°å„Åô„ÇãÊ©üËÉΩ„ÇíÂÇô„Åà„Åæ„Åô„ÄÇ  ÂøÖË¶Å„Å™Â§âÊï∞„ÉªÈñ¢Êï∞„ÇíÊäúÁ≤ã„Åó„ÄÅ Ëß£Ë™¨„ÅØ„Ç≥„É°„É≥„Éà„Å®„Åó„Å¶Ë®òËºâ„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ```vb ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' DBManager „ÇØ„É©„Çπ ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----  Option Explicit  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' „Äê‰ΩøÁî®ÊâãÈ†Ü - SELECT„Å´„Çà„Çã„Éá„Éº„ÇøÂèñÂæó„Äë ' ‚ë†„Ç§„É≥„Çπ„Çø„É≥„ÇπÁîüÊàê ' ‚ë°openOracleÔºö„Ç™„É©„ÇØ„É´„Å∏„ÅÆÊé•Á∂ö or openAccessÔºö„Ç¢„ÇØ„Çª„Çπ„Å∏„ÅÆÊé•Á∂ö ' ‚ë¢excuteSqlÔºöSQL„ÅÆÂÆüË°å ' ‚ë£pasteRecordsetÔºöÂÆüË°å„Åó„ÅüSQL„Å´„Çà„ÇäÂèñÂæó„Åó„Åü„Éá„Éº„Çø„ÇíË≤º„Çä‰ªò„Åë ' ‚ë§closeRecordsetÔºö„É¨„Ç≥„Éº„Éâ„Çª„ÉÉ„Éà„ÅÆ„ÇØ„É≠„Éº„Ç∫ ' ‚ë•closeConnectionÔºöDBÂàáÊñ≠ ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' „Äê‰ΩøÁî®ÊâãÈ†Ü - INSERT or UPDATE or DELETE„ÅÆÂÆüË°å„Äë ' ‚ë†„Ç§„É≥„Çπ„Çø„É≥„ÇπÁîüÊàê ' ‚ë°openOracleÔºö„Ç™„É©„ÇØ„É´„Å∏„ÅÆÊé•Á∂ö or openAccessÔºö„Ç¢„ÇØ„Çª„Çπ„Å∏„ÅÆÊé•Á∂ö ' ‚ë¢begintransÔºö„Éà„É©„É≥„Ç∂„ÇØ„Ç∑„Éß„É≥ÈñãÂßã ' ‚ë£createAndExcuteOracleSql(s)ÔºöSQL„ÇíÁîüÊàê„Åó„Å¶ÂÆüË°å ' ‚ë§committransÔºö„Ç≥„Éü„ÉÉ„Éà„ÄÄ‚Äª„Ç®„É©„ÉºÁô∫ÁîüÊôÇ rollbacktrans ' ‚ë•closeConnectionÔºöDBÂàáÊñ≠ ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----  ' „É°„É≥„ÉêÂ§âÊï∞ÔºàMe.„ÅßÂèÇÁÖßÂèØËÉΩ„Å®„Åô„Çã„Åü„ÇÅpublicÔºâ Public con As Object    ' Connection Public rs As Object     ' Recordset  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : „Ç≥„É≥„Çπ„Éà„É©„ÇØ„Çø ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Private Sub Class_Initialize()      Set Me.con = CreateObject(\"Adodb.Connection\")     Set Me.rs = CreateObject(\"Adodb.Recordset\")  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : „Ç™„É©„ÇØ„É´„Å∏„ÅÆÊé•Á∂öÂá¶ÁêÜ ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub openOracle(servicename As String, username As String, password As String)      Dim constr As String      constr = \"DSN=\" & servicename     constr = constr & \";UID=\" & username     constr = constr & \";PWD=\" & password      Debug.Print (constr)     Me.con.ConnectionString = constr     Me.con.Open     Debug.Print \"„Ç™„É©„ÇØ„É´„Å∏„ÅÆÊé•Á∂öÂÆå‰∫Ü\"  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : „Ç¢„ÇØ„Çª„Çπ„Å∏„ÅÆÊé•Á∂öÂá¶ÁêÜ ' note  : ÂºïÊï∞ access_name „ÅØ„Éï„É´„Éë„ÇπÔºà„Éï„Ç©„É´„ÉÄÂêçÔºã„Éï„Ç°„Ç§„É´ÂêçÔºâ ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub openAccess(access_name As String)      Me.con.Open \"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=\" & access_name & \";\" 'Access„Éï„Ç°„Ç§„É´„Å´Êé•Á∂ö     Debug.Print \"„Ç¢„ÇØ„Çª„Çπ„Å∏„ÅÆÊé•Á∂öÂÆå‰∫Ü\"  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : „Éà„É©„É≥„Ç∂„ÇØ„Ç∑„Éß„É≥ÈñãÂßãÂá¶ÁêÜ ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub begintrans()      Me.con.begintrans     Debug.Print \"„Éà„É©„É≥„Ç∂„ÇØ„Ç∑„Éß„É≥ÈñãÂßã\"  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : „Ç≥„Éü„ÉÉ„ÉàÂá¶ÁêÜ ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub committrans()      Me.con.committrans     Debug.Print \"„Ç≥„Éü„ÉÉ„ÉàÂá¶ÁêÜÂÆüÊñΩ\"  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : „É≠„Éº„É´„Éê„ÉÉ„ÇØÂá¶ÁêÜ ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub rollbacktrans()      Me.con.rollbacktrans     Debug.Print \"„É≠„Éº„É´„Éê„ÉÉ„ÇØÂá¶ÁêÜÂÆüÊñΩ\"  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : DBÂàáÊñ≠Âá¶ÁêÜ ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub closeConnection()      On Error Resume Next      Me.con.Close     Me.rs.Close      Set Me.con = Nothing     Set Me.rs = Nothing      On Error GoTo 0     ' „Ç®„É©„ÉºÂá¶ÁêÜ„ÅÆÂëΩ‰ª§Âèñ„ÇäÊ∂à„Åó     Debug.Print \"DB„Å∏„ÅÆÂàáÊñ≠ÂÆå‰∫Ü\"  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : „É¨„Ç≥„Éº„Éâ„Çª„ÉÉ„Éà„ÅÆ„ÇØ„É≠„Éº„Ç∫ ' note  : SQLÂÆüË°å„Åß„É¨„Ç≥„Éº„Éâ„Çª„ÉÉ„Éà„Å´„Éá„Éº„Çø„ÅåÊ†ºÁ¥ç„Åï„Çå„ÅüÂæå„ÅØ„ÇØ„É≠„Éº„Ç∫ÂøÖË¶Å '         ÔºàÈÄ£Á∂ö„ÅßSQL„ÇíÂÆüË°å„Åó„Å¶„É¨„Ç≥„Éº„Éâ„Çª„ÉÉ„Éà„ÇíOpen„Åô„Çã„Åì„Å®„ÅØ„Åß„Åç„Å™„ÅÑÔºâ ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub closeRecordset()     Me.rs.Close End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : SQL„ÅÆÂÆüË°å ' note  : SELECTÊñá„ÅÆÂÆüË°åÂæå„ÅØ„ÄÅ„É¨„Ç≥„Éº„Éâ„Çª„ÉÉ„Éà„Å´„Éá„Éº„Çø„ÅåÊ†ºÁ¥ç„Åï„Çå„Çã„ÄÇ ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub excuteSql(str_sql As String)      Debug.Print str_sql & \" „ÇíÂÆüË°å„Åó„Åæ„Åô„ÄÇ\"     rs.Open str_sql, con  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : ÂÆüË°å„Åó„ÅüSQL„ÅßÂèñÂæó„Åó„Åü„É¨„Ç≥„Éº„Éâ„Çª„ÉÉ„Éà„ÇíExcel„Å´Ë≤º„Çä‰ªò„Åë ' note  : need_filed_ -> True„Åß„Éï„Ç£„Éº„É´„ÉâÂêç„ÇÇÊõ∏„ÅçËæº„Åø ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub pasteRecordset(worksheet_ As Worksheet, data_start_row_ As Long, data_start_col_ As Long, need_filed_ As Boolean)      Dim i As Long      If need_filed_ = True Then          '„Éï„Ç£„Éº„É´„ÉâÂêç„ÅÆÊõ∏„ÅçÂá∫„Åó         For i = 0 To rs.Fields.count - 1             worksheet_.Cells(data_start_row_, data_start_col_ + i).Value = rs.Fields(i).Name         Next i          data_start_row_ = data_start_row_ + 1      End If      'CopyFromRecordset„É°„ÇΩ„ÉÉ„Éâ„ÅßÂü∫Ê∫ñ„Çª„É´„ÇíÊåáÂÆö„Åó„Å¶„Éá„Éº„Çø„ÅÆÊõ∏„ÅçÂá∫„Åó     worksheet_.Cells(data_start_row_, data_start_col_).CopyFromRecordset rs  End Sub ÔºàÔºíÔºâmodSql DBManager„ÇØ„É©„Çπ„ÇíÂà©Áî®„Åó„Å¶SQL„ÇíÂÆüË°å„Åó„ÄÅExcel„Ç∑„Éº„Éà„Å´„Éá„Éº„Çø„ÇíË≤º„Çä‰ªò„Åë„Çã„É¢„Ç∏„É•„Éº„É´„Åß„Åô„ÄÇ  ÂøÖË¶Å„Å™Â§âÊï∞„ÉªÈñ¢Êï∞„ÇíÊäúÁ≤ã„Åó„ÄÅ Ëß£Ë™¨„ÅØ„Ç≥„É°„É≥„Éà„Å®„Åó„Å¶Ë®òËºâ„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  Option Explicit      ' ---- SELECTÊñá„ÇíÂÆüË°å„Åô„ÇãÊ©üËÉΩ„ÅÆË®≠ÂÆöÈ†ÖÁõÆ     Const SQL_SHEET_NAME = \"SQL\"     Const DATA_SHEET_NAME_COL = 1     Const SQL_COL = 2     Const CONNECT_TYPE_COL = 3     Const SQL_START_ROW = 2      Dim config As Configurator     Dim dbManagerOracle As dbManager     Dim dbManagerAccess As dbManager  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : „Ç∑„Éº„Éà„Å´ÁôªÈå≤„Åï„Çå„Å¶„ÅÑ„ÇãÂêÑSELECTÊñá„ÇíÂÆüË°å ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub executeSelects()      Dim i As Long     Dim row As Long      Dim wsActive As Worksheet      Dim servicename As String, username As String, password As String, accessPath As String      Dim sqlSheet As Worksheet       ' „Éá„Éº„ÇøÂèñÂæó„Åô„ÇãSQL„ÅåÊ†ºÁ¥ç„Åï„Çå„Å¶„ÅÑ„Çã„Ç∑„Éº„Éà      Dim dataSheetName As String     ' SQL„ÅÆSELECT„Éá„Éº„Çø„ÇíË≤º„Çä‰ªò„Åë„Çã„Ç∑„Éº„ÉàÂêç     Dim sql As String               ' SQLÔºàSELECTÊñáÔºâ     Dim connectType As String       ' Êé•Á∂ö„Çø„Ç§„ÉóÔºàOracle or AccessÔºâ      Set dbManagerOracle = Nothing     Set dbManagerAccess = Nothing      focus True      ' ÂÆüË°åÊôÇ„ÅÆ„Ç∑„Éº„Éà„Çí‰øùÂ≠ò     Set wsActive = ActiveSheet      ' Config Ë®≠ÂÆö„ÅÆË™≠„ÅøËæº„Åø     Set config = New Configurator     config.setData ThisWorkbook.Worksheets(GLB_CONFIG_SHEET), GLB_CONFIG_KEY_COL, GLB_CONFIG_ITEM_COL, GLB_CONFIG_START_ROW      servicename = config.getItem(\"SERVICE_NAME\")     username = config.getItem(\"USERNAME\")     password = config.getItem(\"PASSWORD\")     accessPath = config.getItem(\"ACCESS_PATH\")      i = 0      dataSheetName = ThisWorkbook.Worksheets(SQL_SHEET_NAME).Cells(SQL_START_ROW + i, DATA_SHEET_NAME_COL)     sql = ThisWorkbook.Worksheets(SQL_SHEET_NAME).Cells(SQL_START_ROW + i, SQL_COL)     connectType = ThisWorkbook.Worksheets(SQL_SHEET_NAME).Cells(SQL_START_ROW + i, CONNECT_TYPE_COL)      ' „Ç∑„Éº„Éà„Å´ÁôªÈå≤„Åï„Çå„Å¶„ÅÑ„ÇãÂêÑSELECTÊñá„ÇíÂÆüË°åÔºà„Ç∑„Éº„ÉàÂêç„ÅåÁÑ°„Åè„Å™„Çã„Åæ„ÅßÁπ∞„ÇäËøî„ÅóÔºâ     Do While dataSheetName <> \"\"          ' „Éá„Éº„ÇøË≤º„Çä‰ªò„ÅëÂÖà„ÅÆ„Ç∑„Éº„Éà„ÇíÂâäÈô§         If sheetExists(ThisWorkbook, dataSheetName) Then             Application.DisplayAlerts = False ' „É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈùûË°®Á§∫             ThisWorkbook.Worksheets(dataSheetName).Delete             Application.DisplayAlerts = True  ' „É°„ÉÉ„Çª„Éº„Ç∏„ÇíË°®Á§∫         End If          ' „Éá„Éº„ÇøË≤º„Çä‰ªò„ÅëÂÖà„ÅÆ„Ç∑„Éº„Éà„Çí‰ΩúÊàê         If sql <> \"\" Then             ' SQL Êúâ„Çä„ÄÄ‚Üí„ÄÄ„Ç∑„Éº„Éà‰ΩúÊàê             createSheet ThisWorkbook, dataSheetName          End If          ' - Oracle Êé•Á∂ö         If connectType = \"Oracle\" Then              ' DBÊé•Á∂ö             If (sql <> \"\") And (dbManagerOracle Is Nothing) Then                 Set dbManagerOracle = New dbManager                 dbManagerOracle.openOracle servicename, username, password             End If              ' SQL„ÇíÂÆüË°å             dbManagerOracle.excuteSql sql              ' „Ç∑„Éº„Éà„Å´SQL„ÅßÂèñÂæó„Åó„Åü„Éá„Éº„Çø„ÇíË≤º„Çä‰ªò„Åë             dbManagerOracle.pasteRecordset ThisWorkbook.Worksheets(dataSheetName), 1, 1, True              ' „É¨„Ç≥„Éº„Éâ„Çª„ÉÉ„Éà„Çí„ÇØ„É≠„Éº„Ç∫             dbManagerOracle.closeRecordset          ' - Access Êé•Á∂ö         ElseIf connectType = \"Access\" Then              ' DBÊé•Á∂ö             If (sql <> \"\") And (dbManagerAccess Is Nothing) Then                 Set dbManagerAccess = New dbManager                 dbManagerAccess.openAccess accessPath             End If              ' SQL„ÇíÂÆüË°å             dbManagerAccess.excuteSql sql              ' „Ç∑„Éº„Éà„Å´SQL„ÅßÂèñÂæó„Åó„Åü„Éá„Éº„Çø„ÇíË≤º„Çä‰ªò„Åë             dbManagerAccess.pasteRecordset ThisWorkbook.Worksheets(dataSheetName), 1, 1, True              ' „É¨„Ç≥„Éº„Éâ„Çª„ÉÉ„Éà„Çí„ÇØ„É≠„Éº„Ç∫             dbManagerAccess.closeRecordset          Else             ' SQL„ÅåË®òËºâ„Åã„Å§Êé•Á∂ö„Çø„Ç§„Éó„ÅåË®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑÂ†¥Âêà„ÅØÁµÇ‰∫Ü             If sql <> \"\" Then                 MsgBox SQL_SHEET_NAME & \" „Ç∑„Éº„Éà„ÅÆÊé•Á∂ö„Çø„Ç§„Éó„ÅåÊ≠£„Åó„ÅèË®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇÁµÇ‰∫Ü„Åó„Åæ„Åô„ÄÇ\"                 ThisWorkbook.Worksheets(SQL_SHEET_NAME).Activate                 End             End If         End If          i = i + 1         dataSheetName = ThisWorkbook.Worksheets(SQL_SHEET_NAME).Cells(SQL_START_ROW + i, DATA_SHEET_NAME_COL)         sql = ThisWorkbook.Worksheets(SQL_SHEET_NAME).Cells(SQL_START_ROW + i, SQL_COL)         connectType = ThisWorkbook.Worksheets(SQL_SHEET_NAME).Cells(SQL_START_ROW + i, CONNECT_TYPE_COL)      Loop      ' - OracleÂàáÊñ≠     If Not dbManagerOracle Is Nothing Then         dbManagerOracle.closeConnection     End If      ' - AccessÂàáÊñ≠     If Not dbManagerAccess Is Nothing Then         dbManagerAccess.closeConnection     End If      wsActive.Activate     focus False      Application.StatusBar = Now & \"SQL SELECTÂÆüË°åÂÆå‰∫Ü\"  End Sub ```  ‰ªäÂõû„ÅØ‰ª•‰∏ä„Å®„Å™„Çä„Åæ„Åô„ÄÇ  „Åì„ÅÆÊ©üËÉΩ„ÇíÊ¥ªÁî®„Åô„Çå„Å∞„ÄÅ„Éú„Çø„É≥‰∏Ä„Å§„Åß DB„Åã„ÇâÊúÄÊñ∞„ÅÆ„Éá„Éº„Çø„ÇíÊäΩÂá∫ÂèØËÉΩ„Å®„Å™„Çä„Åæ„Åô„ÄÇ   ‰æã„Åà„Å∞„ÄÅ„Éá„Éº„ÇøÈõÜË®àÊ•≠Âãô„ÅÆÂäπÁéáÂåñ„Å™„Å©„Å´ÂΩπÁ´ã„Å¶„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇ    Ê¨°Âõû„ÅØ„ÄÅExcel„Ç∑„Éº„Éà„Å´ÂÖ•Âäõ„Åó„Åü„Éá„Éº„Çø„ÇíÂü∫„Å´„ÄÅOracle DB„Å´INSERT„ÉªUPDATE„ÉªDELETE„Åô„ÇãÊñπÊ≥ï„ÇíË™¨Êòé„Åó„Åæ„Åô„ÄÇ "},"_id":"blog/22-excel2-sql-select-excel-vba.mdx","_raw":{"sourceFilePath":"blog/22-excel2-sql-select-excel-vba.mdx","sourceFileName":"22-excel2-sql-select-excel-vba.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/22-excel2-sql-select-excel-vba"},"type":"Post","slug":"/blog/22-excel2-sql-select-excel-vba","slugAsParams":"22-excel2-sql-select-excel-vba"},{"title":"VBA | DBÊìç‰Ωú ‚Äì Á¨¨3ÂõûÔºöExcel „Åã„Çâ INSERT, UPDATE, DELETE „ÇíÂÆüË°å","description":"Excel„Éû„ÇØ„É≠ Á¨¨3ÂõûÔºö[Excel „Åã„Çâ INSERT, UPDATE, DELETE „ÇíÂÆüË°å]","date":"2020-04-16T00:00:00.000Z","emoji":"‚õè","tags":["vba"],"published":true,"body":{"raw":" DBÊìç‰Ωú„ÇíË°å„ÅÜExcel„Éû„ÇØ„É≠„Å´„Å§„ÅÑ„Å¶Ë™¨Êòé„Åó„Åæ„Åô„ÄÇ  ‰ªäÂõû„ÅÆË®ò‰∫ã„ÅØ„ÄéÁ¨¨3Âõû„Äè„Å®„Å™„Çä„Åæ„Åô„ÄÇ  Á¨¨1ÂõûÔºö[Config„Ç∑„Éº„Éà„ÅÆË®≠ÂÆöÂÄ§„ÇíVBA‰∏ä„ÅßÂèñ„ÇäÊâ±„ÅÜ](/blog/21-excel1-config-sheet-excel-vba/)   Á¨¨2ÂõûÔºö[SELECTÊñá„Å´„Çà„ÇäÂèñÂæó„Åó„Åü„Éá„Éº„Çø„ÇíExcel„Å´Ê†ºÁ¥ç](/blog/22-excel2-sql-select-excel-vba/)   Á¨¨3ÂõûÔºö[Excel „Åã„Çâ INSERT, UPDATE, DELETE „ÇíÂÆüË°å](/blog/23-excel3-sql-insert-update-delete-excel-vba/)   Á¨¨4ÂõûÔºö[Excel „Åã„Çâ MERGE „ÇíÂÆüË°å](/blog/24-excel4-sql-merge-excel-vba/)    [„ÄêExcel„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„ÅØ„Åì„Å°„Çâ„Äë](https://github.com/atman-33/template-excel-vba/tree/main/Template_OracleDB%E6%93%8D%E4%BD%9C)  ‚Äª2021/2/5Êîπ‰øÆÁâà   „ÄÄ„ÉªODBCÊé•Á∂ö„Åã„ÇâOraOLEDB.OracleÊé•Á∂ö„Å´Â§âÊõ¥   „ÄÄ„ÉªINSER,UPDATE,MERGEÊñá„ÅÆÁîüÊàêÊñπÊ≥ï„Çí‰øÆÊ≠£    ___ ## Ê¶ÇË¶Å Á¨¨3ÂõûÁõÆ„ÅØ„ÄÅExcel„Ç∑„Éº„Éà„Å´Ê†ºÁ¥ç„Åó„Åü„Éá„Éº„ÇøÔºà„Çª„É´„ÅÆÂÄ§Ôºâ„Çí„ÄÅÊåáÂÆö„Åó„ÅüDBÔºà„Éá„Éº„Çø„Éô„Éº„ÇπÔºâ„ÅÆ„ÉÜ„Éº„Éñ„É´„Å´ÊåøÂÖ•„ÉªÊõ¥Êñ∞„ÉªÂâäÈô§„Åô„ÇãÊñπÊ≥ï„ÇíË™¨Êòé„Åó„Åæ„Åô„ÄÇ  ![image](/blog/23/00.png)  Excel„ÅÆ„ÄåConfig„Ç∑„Éº„Éà„Äç„Å´DBÊé•Á∂öÂÜÖÂÆπ„ÇíË®≠ÂÆö„Åó„ÄÅ„ÄåINSERT„ÉªUPDATE„ÉªDELETE„Äç„ÅÆÂêÑ„Ç∑„Éº„Éà„Åã„Çâ„Éá„Éº„Çø„Éô„Éº„Çπ„ÇíÊìç‰Ωú„Åó„Åæ„Åô„ÄÇ  |„Çø„Ç§„Éó|Ê©üËÉΩ| |:--|:--| INSERT|DB„ÅÆ„ÉÜ„Éº„Éñ„É´„Å´„Éá„Éº„Çø„ÇíÊåøÂÖ• Ôºà„É¨„Ç≥„Éº„ÉâÊåøÂÖ•Ôºâ UPDATE|DB„ÅÆ„ÉÜ„Éº„Éñ„É´„Å´Ê†ºÁ¥ç„Åï„Çå„Å¶„ÅÑ„Çã„Éá„Éº„Çø„ÇíÊõ¥Êñ∞ Ôºà„É¨„Ç≥„Éº„ÉâÊõ¥Êñ∞Ôºâ DELETE|DB„ÅÆ„ÉÜ„Éº„Éñ„É´„Å´Ê†ºÁ¥ç„Åï„Çå„Å¶„ÅÑ„Çã„Éá„Éº„Çø„ÇíÂâäÈô§Ôºà„É¨„Ç≥„Éº„ÉâÂâäÈô§Ôºâ  ‰∏ãË®ò„Å´Êìç‰ΩúÊâãÈ†Ü„ÇíÁ§∫„Åó„Åæ„Åô„ÄÇ  ___ ### ‚ë†DBÊé•Á∂öË®≠ÂÆö Config„Ç∑„Éº„Éà„Å´DBÊé•Á∂ö„ÅÆË®≠ÂÆö„ÇíË®òËºâ„Åó„Åæ„Åô„ÄÇÔºàDB„ÅØOracle„ÅÆ„ÅøÂØæË±°Ôºâ  ![image](/blog/23/01.png)  SERVICE_NAMEÔºà„Çµ„Éº„Éì„ÇπÂêçÔºâ„ÅØOracle„ÅÆ„ÇØ„É©„Ç§„Ç¢„É≥„Éà„ÇÇ„Åó„Åè„ÅØ„Çµ„Éº„Éê„Éº„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Å¶‰ΩúÊàê„ÉªË®≠ÂÆö„Åó„Åü tnsnames.ora „Å´Ë®òËºâ„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ‰æã. ‰∏ãË®ò tnsnames.ora „ÅÆ‰æã„Åß„ÅØ„ÄÅTESTDB.GRAWOR„Åå„Çµ„Éº„Éì„ÇπÂêç„Åß„Åô„ÄÇ  ```text TESTDB =   (DESCRIPTION =     (ADDRESS = (PROTOCOL = TCP)(HOST = ***)(PORT = 1521))     (CONNECT_DATA =       (SERVER = DEDICATED)       (SERVICE_NAME = TESTDB.GRAWOR)     )   ) ```  ___ ### ‚ë°ÁîüÊàê„Åô„ÇãINSERTÊñá„ÅÆÁ¢∫Ë™ç „Åì„Åì„Åß„ÅØ„ÄÅDB„Å´„Éá„Éº„Çø„ÇíINSERT„Åô„ÇãÂ†¥Âêà„ÅÆÊâãÈ†Ü„ÇíÁ§∫„Åó„Åæ„Åô„ÄÇ  „Åæ„Åö„ÄÅINSERT„Ç∑„Éº„Éà„Å´Ê†ºÁ¥ç„Åó„Åü„ÅÑ„Éá„Éº„Çø„ÇíË®òËºâ„Åó„Å¶„ÄÅÁîüÊàê„Åï„Çå„ÇãINSERTÊñá„ÇíÁ¢∫Ë™ç„Åó„Åæ„Åô„ÄÇ  INSERT„Åô„Çã„Éá„Éº„Çø„ÅÆË®≠ÂÆöÊñπÊ≥ï„ÅØ‰∏ãË®ò„ÅÆÈÄö„Çä„Åß„Åô„ÄÇ  1. ÂØæË±°„ÉÜ„Éº„Éñ„É´„ÇíÊåáÂÆö„Åô„Çã„ÄÇÔºà‰æãÔºéTEST_TABLEÔºâ 2. ÂØæË±°„ÉÜ„Éº„Éñ„É´„Å∏Ê†ºÁ¥ç„Åô„Çã„Ç´„É©„É†„Çí„Çø„Ç§„Éó„ÉªDB„Ç´„É©„É†Âêç„Å´ÊåáÂÆö„Åô„Çã„ÄÇ   „ÄÄÔºà‰æãÔºéINSERT„ÉªID„ÄÅINSERT„ÉªLINE „Éª„Éª„ÉªINSERT„ÉªSTART_DATEÔºâ 3. ÊåáÂÆö„Åó„Åü„Ç´„É©„É†„Å´ÂØæ„Åó„Å¶ÊåøÂÖ•„Åô„Çã„Éá„Éº„Çø„ÇíË®òËºâ„Åô„Çã„ÄÇ   „ÄÄÔºà‰æãÔºé1000,A001,1,20200401,„Éª„Éª„ÉªÔºâ  ![image](/blog/23/02.png)  ÂïèÈ°å„Å™„Åë„Çå„Å∞„ÄÅINSERTÊñá„ÅÆÂÆüË°å„Å´ÈÄ≤„Åø„Åæ„Åô„ÄÇ  ___ ### ‚ë¢INSERTÊñá„ÅÆÂÆüË°å INSERTÂÆüË°å„ÅÆ„Éú„Çø„É≥„ÇíÊäº‰∏ã„Åô„Çã„Å®„ÄÅINSERT„Ç∑„Éº„Éà„Å´Ë®òËºâ„Åó„Åü„Éá„Éº„Çø„ÇíÂØæË±°„ÅÆDB„ÉÜ„Éº„Éñ„É´„Å´ÊåøÂÖ•„Åô„ÇãÂá¶ÁêÜ„ÅåÈñãÂßã„Åï„Çå„Åæ„Åô„ÄÇ  ![image](/blog/23/03.png)  ‰∏äË®ò„ÅÆ‰æã„Åß„ÅØ„ÄÅINSERT„ÇíÂÆüË°å„Åô„Çã„Åì„Å®„Åß„ÄÅDB„ÅÆ„ÄåTEST_TABLE„Äç„Å´„Éá„Éº„Çø„ÅåÊ†ºÁ¥ç„Åï„Çå„Åæ„Åó„Åü„ÄÇ  ___ ### ‚ë£UPDATEÊñá„ÄÅDELETEÊñá„ÅÆÂ†¥Âêà ‰ªä„Åæ„ÅßINSERTÊñá„ÅÆÂÆüË°å„Å´„Å§„ÅÑ„Å¶Ë™¨Êòé„Åó„Å¶„Åç„Åæ„Åó„Åü„Åå„ÄÅ‰ªñ„Å´„ÇÇ„ÄÄUPDATEÊñá„ÉªDELETEÊñá„ÄÄ„ÅÆÂÆüË°å„Å´ÂØæÂøú„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  UPDATEÊñá„ÉªDELETEÊñá„ÇíÂÆüË°å„Åô„ÇãÊâãÈ†Ü„ÅØ„ÄÅINSERTÊñá„Å®Ê¶Ç„Å≠Âêå„Åò„Åß„Åô„ÄÇ‰∏ãË®ò„ÅÆÁîªÂÉè„ÇíÂèÇËÄÉ„Å´Ë©¶„Åó„Å¶„Åø„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ  ![image](/blog/23/04.png) ![image](/blog/23/05.png)   ___ ## „Éë„ÉÉ„Ç±„Éº„Ç∏ÊßãÊàê Excel„Éû„ÇØ„É≠ÂÜÖ„ÅÆÊßãÊàê„ÅØ‰∏ãË®ò„Å®„Å™„Çä„Åæ„Åô „ÄÇÔºà‰ΩøÁî®„Åô„Çã„É¢„Ç∏„É•„Éº„É´„ÅÆ„ÅøË®òËºâÔºâ  ```text Template_ver1.x.x.xlsm ‚îúÊ®ôÊ∫ñ„É¢„Ç∏„É•„Éº„É´ |   ‚îúmodCmnGlbConst |   ‚îúmodSql    | „ÇØ„É©„Çπ„É¢„Ç∏„É•„Éº„É´     ‚îúConfigurator     ‚îúDBManager ```  ___ ## „ÇΩ„Éº„Çπ„Ç≥„Éº„ÉâËß£Ë™¨ ‰ªäÂõû„ÅØ„ÄÅmodCmnGlbConst „Å® Configurator „ÅÆË™¨Êòé„ÅØÁúÅÁï•„Åó„Åæ„Åô„ÄÇ  ‚Äª‰∏äË®ò„ÅØDBÊìç‰Ωú ‚Äì Á¨¨1Âõû„Å´„Å¶Ë®òËºâ  ___ ### ‚ë†Ê®ôÊ∫ñ„É¢„Ç∏„É•„Éº„É´ÔºömodSql INSERT„Ç∑„Éº„Éà„Çí‰æã„Å´„Åô„Çã„Å®„ÄÅINSERTÂÆüË°å„Éú„Çø„É≥„ÇíÊäº‰∏ã„Åô„Çã„Å®„ÄÅÈñ¢Êï∞„ÄåexecuteInsertSqlsOracle()„Äç„ÅåÂÆüË°å„Åï„Çå„Åæ„ÅôÔºà‰∏ãË®òÔºâ„ÄÇ  „Åì„ÅÆÈñ¢Êï∞ÂÜÖ„Åß„ÄÅDBManager„ÇØ„É©„Çπ„Çí„Ç§„É≥„Çπ„Çø„É≥„ÇπÂåñ„Åó„ÄÅ„Ç§„É≥„Çπ„Çø„É≥„ÇπÂåñ„Åó„ÅüDBManager„Åã„ÇâINSERTÊñá„ÇíÁîüÊàê„Åó„Å¶ÂÆüË°å„Åô„ÇãÈñ¢Êï∞„ÇíÂëº„Å≥Âá∫„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ```vb ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : A.ÂêÑINSERTÊñá„ÇíÈÄ£Á∂öÂÆüË°å ' note  : OracleÂØæÂøú ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub executeInsertSqlsOracle()      Dim servicename As String, username As String, password As String      Dim sheet As Worksheet          ' SQL„ÇíÁîüÊàê„Åô„ÇãÊÉÖÂ†±„ÅåÊ†ºÁ¥ç„Åï„Çå„Å¶„ÅÑ„Çã„Ç∑„Éº„Éà     Dim tableName As String         ' Êìç‰Ωú„Åô„ÇãÂØæË±°„ÅÆ„ÉÜ„Éº„Éñ„É´      ' Config Ë®≠ÂÆö„ÅÆË™≠„ÅøËæº„Åø     Set config = New Configurator     config.setData ThisWorkbook.Worksheets(GLB_CONFIG_SHEET), GLB_CONFIG_KEY_COL, GLB_CONFIG_ITEM_COL, GLB_CONFIG_START_ROW      servicename = config.getItem(\"SERVICE_NAME\")     username = config.getItem(\"USERNAME\")     password = config.getItem(\"PASSWORD\")      ' DBÊé•Á∂ö     Set dbManagerOracle = New DBManager     dbManagerOracle.openOracle servicename, username, password      Set sheet = ThisWorkbook.Worksheets(INSERT_SHEET_NAME)     tableName = sheet.Cells(TABLE_NAME_ROW, TABLE_NAME_COL)      ' „Éà„É©„É≥„Ç∂„ÇØ„Ç∑„Éß„É≥ÈñãÂßã     dbManagerOracle.begintrans      On Error GoTo err      ' SQLÂÆüË°å     dbManagerOracle.createAndExcuteOracleSqls tableName, sheet, TYPE_DIFINED_ROW, DB_COL_NAME_DIFINED_ROW, DATA_START_ROW, DATA_START_COL      ' „Ç≥„Éü„ÉÉ„Éà     dbManagerOracle.committrans      ' DBÂàáÊñ≠     dbManagerOracle.closeConnection      Application.StatusBar = Now & \"SQL INSERTÂÆüË°åÂÆå‰∫Ü\"      Exit Sub  err:     ' „Ç®„É©„ÉºÁô∫ÁîüÊôÇ„ÅØ„É≠„Éº„É´„Éê„ÉÉ„ÇØ     Debug.Print \"„Ç®„É©„ÉºÁï™Âè∑:\" & err.Number & Chr(13) & \"„Ç®„É©„ÉºÂÜÖÂÆπ:\" & err.Description     MsgBox \"„Ç®„É©„ÉºÁï™Âè∑:\" & err.Number & Chr(13) & \"„Ç®„É©„ÉºÂÜÖÂÆπ:\" & err.Description      MsgBox \"„É≠„Éº„É´„Éê„ÉÉ„ÇØ„ÇíÂÆüË°å„Åó„ÄÅ„Éó„É≠„Ç∞„É©„É†„ÇíÁµÇ‰∫Ü„Åó„Åæ„Åô„ÄÇ\"     dbManagerOracle.rollbacktrans      End  End Sub ```  UPDATE„ÉªDELETEÊñá„ÅÆÁîüÊàê„ÉªÂÆüË°å„ÅÆ„Éó„É≠„Ç∞„É©„É†ÂÆüË°åÊâãÈ†Ü„ÇÇ„ÄÅ‰∏äË®òINSERT„ÅÆÊâãÈ†Ü„Å®Âêå„Åò„Åß„Åô„ÅÆ„ÅßË™¨Êòé„ÅØÁúÅÁï•„Åó„Åæ„Åô„ÄÇË©≥Á¥∞„ÅØExcel„Éû„ÇØ„É≠„ÅÆ„Éó„É≠„Ç∞„É©„É†„Çí„ÅîÁ¢∫Ë™ç„Åè„Å†„Åï„ÅÑ„ÄÇ  ___ ### ‚ë°„ÇØ„É©„Çπ„É¢„Ç∏„É•„Éº„É´ÔºöDBManager DBManager„ÅØOracle DB„Å∏„ÅÆÊé•Á∂ö„Å´Èñ¢„Åô„ÇãÊ©üËÉΩ„ÇÇÂÇô„Åà„Å¶„ÅÑ„Åæ„Åô„ÄÇ  „Åù„Å°„Çâ„ÅØ„ÄÅDBÊìç‰Ωú ‚Äì Á¨¨2Âõû„ÄÄ„Å´Ë®òËºâ„Åó„Å¶„ÅÑ„Åæ„Åô„ÅÆ„ÅßË™¨Êòé„ÅØÁúÅÁï•„Åó„Åæ„Åô„ÄÇ  ‰ªäÂõû„ÅØ„ÄÅÔºàÔºëÔºâÊ®ôÊ∫ñ„É¢„Ç∏„É•„Éº„É´ÔºömodSql„ÄÄÂÜÖ„ÅÆÈñ¢Êï∞„Åã„ÇâDBManager„ÇíÊìç‰Ωú„Åô„Çã„Åì„Å®„Åß„ÄÅINSERTÊñá„ÇíÁîüÊàê„Åó„Å¶ÂÆüË°å„Åô„Çã„ÇΩ„Éº„ÇπÈÉ®ÂàÜ„Å´Èñ¢„Åó„Å¶Ë™¨Êòé„Åó„Åæ„Åô„ÄÇ  SQLÊñá„ÇíÁîüÊàê„Åó„Å¶ÂÆüË°å„Åô„Çã„Åæ„Åß„Å´„ÄÅ‰∏ãË®òÈñ¢Êï∞„ÇíÁµåÁî±„Åó„Åæ„Åô„ÄÇ  createAndExcuteOracleSqlsÔºàÂÖ®„É¨„Ç≥„Éº„ÉâÂÆüË°åÔºâ   „ÄÄ‚Üì   createAndExcuteOracleSqlÔºà1„É¨„Ç≥„Éº„ÉâÂÆüË°åÔºâ   „ÄÄ‚Üì   createOracleSqlÔºàSQLÊñá„ÅÆÁîüÊàêÔºâ   „ÄÄcheckSqlTypeÔºàINSERT„ÉªUPDATE„ÉªDELETEÊñá„ÅÆÈÅ∏ÂÆöÔºâ   „ÄÄ‚îú ->createInsertOracleSqlÔºàINSERTÊñá„ÅÆÁîüÊàêÔºâ   „ÄÄ‚îú ->createUpdateOracleSqlÔºàUPDATEÊñá„ÅÆÁîüÊàêÔºâ   „ÄÄ‚îî ->createDeleteOracleSqlÔºàDELETEÊñá„ÅÆÁîüÊàêÔºâ    ```vb ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : INSERT or UPDATE or DELETE SQLÊñá„Çí‰ΩúÊàê„Åó„Å¶ÂÆüË°åÔºà1Ë°åÔºâ ' note  : ÂºïÊï∞ '         „ÉÜ„Éº„Éñ„É´Âêç„ÄÅ„ÉØ„Éº„ÇØ„Ç∑„Éº„Éà„ÄÅSQL„Çø„Ç§„ÉóÊåáÂÆöË°å„ÄÅ„Éá„Éº„Çø„Éô„Éº„Çπ„Ç´„É©„É†ÂêçÊåáÂÆöË°å '         „Éá„Éº„ÇøÊ†ºÁ¥çÈñãÂßãË°å„ÄÅ„Éá„Éº„ÇøÊ†ºÁ¥çÈñãÂßãÂàó ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub createAndExcuteOracleSql(table_name As String, sheet As Worksheet, sql_type_defined_row As Long, db_col_name_defined_row As Long _     , db_data_start_row As Long, db_data_start_col As Long)      Dim sql As String      ' SQL‰ΩúÊàê     sql = createOracleSql(table_name, sheet, sql_type_defined_row, db_col_name_defined_row, db_data_start_row, db_data_start_col)      ' SQLÂÆüË°å     excuteSql sql  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : INSERT or UPDATE or DELETE SQLÊñá„Çí‰ΩúÊàê„Åó„Å¶ÂÆüË°åÔºàË§áÊï∞Ë°åÔºâ ' note  : ÂºïÊï∞ '         „ÉÜ„Éº„Éñ„É´Âêç„ÄÅ„ÉØ„Éº„ÇØ„Ç∑„Éº„Éà„ÄÅSQL„Çø„Ç§„ÉóÊåáÂÆöË°å„ÄÅ„Éá„Éº„Çø„Éô„Éº„Çπ„Ç´„É©„É†ÂêçÊåáÂÆöË°å '         „Éá„Éº„ÇøÊ†ºÁ¥çÈñãÂßãË°å„ÄÅ„Éá„Éº„ÇøÊ†ºÁ¥çÈñãÂßãÂàó ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub createAndExcuteOracleSqls(table_name As String, sheet As Worksheet, sql_type_defined_row As Long, db_col_name_defined_row As Long _     , db_data_start_row As Long, db_data_start_col As Long)      Dim i As Long     Dim sql As String     Dim val     Dim db_data_end_row As Long      ' „Éá„Éº„Çø„ÅÆÊúÄÁµÇË°å„ÇíÊ§úÁ¥¢     i = 1     Do While sheet.Cells(db_data_start_row + i, db_data_start_col) <> \"\"         i = i + 1     Loop      db_data_end_row = db_data_start_row + i - 1      For i = db_data_start_row To db_data_end_row          createAndExcuteOracleSql table_name, sheet, sql_type_defined_row, db_col_name_defined_row, i, db_data_start_col      Next  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : INSERT or UPDATE or DELETE SQLÊñá„Çí‰ΩúÊàê ' note  : ÂºïÊï∞ '         „ÉÜ„Éº„Éñ„É´Âêç„ÄÅ„ÉØ„Éº„ÇØ„Ç∑„Éº„Éà„ÄÅSQL„Çø„Ç§„ÉóÊåáÂÆöË°å„ÄÅ„Éá„Éº„Çø„Éô„Éº„Çπ„Ç´„É©„É†ÂêçÊåáÂÆöË°å '         „Éá„Éº„ÇøÊ†ºÁ¥çÈñãÂßãË°å„ÄÅ„Éá„Éº„ÇøÊ†ºÁ¥çÈñãÂßãÂàó ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Function createOracleSql(table_name As String, sheet As Worksheet, sql_type_defined_row As Long, db_col_name_defined_row As Long _     , db_data_start_row As Long, db_data_start_col As Long) As String      Dim sql As String     sql = \"\"      Select Case checkSqlType(sheet, sql_type_defined_row, db_data_start_col)          Case \"INSERT\"             sql = createInsertOracleSql(table_name, sheet, sql_type_defined_row, db_col_name_defined_row, db_data_start_row, db_data_start_col)             createOracleSql = sql             Exit Function          Case \"UPDATE\"             sql = createUpdateOracleSql(table_name, sheet, sql_type_defined_row, db_col_name_defined_row, db_data_start_row, db_data_start_col)             createOracleSql = sql             Exit Function          Case \"DELETE\"             sql = createDeleteOracleSql(table_name, sheet, sql_type_defined_row, db_col_name_defined_row, db_data_start_row, db_data_start_col)             createOracleSql = sql             Exit Function      End Select      createOracleSql = sql  End Function  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : Excel„Åã„Çâ‰ΩúÊàê„Åô„ÇãSQL„Çø„Ç§„Éó„ÅåINSERT,UPDATE,DELTE„ÅÆ„Å©„Çå„Åã„Å™„ÅÆ„ÅãÁ¢∫Ë™ç ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Private Function checkSqlType(sheet As Worksheet, type_start_row As Long, type_start_col As Long) As String      Dim start_col As Long, end_col As Long      Dim i As Long      checkSqlType = \"\"      start_col = type_start_col     end_col = getMaxColRight(sheet, type_start_row, type_start_col)      For i = start_col To end_col         Select Case sheet.Cells(type_start_row, i)              Case \"INSERT\"                 checkSqlType = \"INSERT\"                 Exit Function              Case \"UPDATE\"                 checkSqlType = \"UPDATE\"                 Exit Function              Case \"DELETE\"                 checkSqlType = \"DELETE\"                 Exit Function          End Select     Next      MsgBox \"DBManager.checkSqlType:SQL„Çø„Ç§„Éó„ÅÆË®≠ÂÆö„ÅåÈñìÈÅï„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇINSERT,UPDATE,DELETE„ÅåÂê´„Åæ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ\"     End  End Function  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : INSERT SQLÊñá„Çí‰ΩúÊàê ' note  : ÂºïÊï∞ '         „ÉÜ„Éº„Éñ„É´Âêç„ÄÅ„ÉØ„Éº„ÇØ„Ç∑„Éº„Éà„ÄÅSQL„Çø„Ç§„ÉóÊåáÂÆöË°å„ÄÅ„Éá„Éº„Çø„Éô„Éº„Çπ„Ç´„É©„É†ÂêçÊåáÂÆöË°å '         „Éá„Éº„ÇøÊ†ºÁ¥çÈñãÂßãË°å„ÄÅ„Éá„Éº„ÇøÊ†ºÁ¥çÈñãÂßãÂàó ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Private Function createInsertOracleSql(table_name As String, sheet As Worksheet, sql_type_defined_row As Long, db_col_name_defined_row As Long _     , db_data_start_row As Long, db_data_start_col As Long) As String      Dim i As Long, j As Long     Dim start_row As Long, start_col As Long, end_col As Long      Dim sqltype As String     Dim sql As String, sql_1 As String, sql_2 As String      start_row = db_data_start_row     start_col = db_data_start_col     end_col = getMaxColRight(sheet, start_row, start_col)      sqltype = sheet.Cells(sql_type_defined_row, start_col).Value      i = start_row      ' INSERTÊñá„ÅÆÁîüÊàê     sql = \"\"     sql_1 = \"INSERT INTO \" & table_name & \" (\"     sql_2 = \"VALUES (\"      For j = start_col To end_col          ' DB„Ç´„É©„É†Âêç„ÇíËøΩÂä†         sql_1 = sql_1 & sheet.Cells(db_col_name_defined_row, j).Value         If j <> end_col Then             sql_1 = sql_1 & \", \"         Else             sql_1 = sql_1 & \") \"         End If          ' DB„Ç´„É©„É†Âêç„Å´ÂØæ„Åô„ÇãÂÄ§„ÇíËøΩÂä†         sql_2 = sql_2 & \"'\" & sheet.Cells(i, j).Value & \"'\"         If j <> end_col Then             sql_2 = sql_2 & \", \"         Else             sql_2 = sql_2 & \") \"         End If      Next      sql = sql_1 + sql_2      sql = Replace(sql_1 + sql_2, \", WHERE\", \" WHERE\")     If Right(sql, 1) = \",\" Then sql = Mid(sql, 1, Len(sql) - 1)     If Right(sql, 5) = \" AND \" Then sql = Mid(sql, 1, Len(sql) - 5)      createInsertOracleSql = sql  End Function  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : UPDATE SQLÊñá„Çí‰ΩúÊàê ' note  : ÂºïÊï∞ '         „ÉÜ„Éº„Éñ„É´Âêç„ÄÅ„ÉØ„Éº„ÇØ„Ç∑„Éº„Éà„ÄÅSQL„Çø„Ç§„ÉóÊåáÂÆöË°å„ÄÅ„Éá„Éº„Çø„Éô„Éº„Çπ„Ç´„É©„É†ÂêçÊåáÂÆöË°å '         „Éá„Éº„ÇøÊ†ºÁ¥çÈñãÂßãË°å„ÄÅ„Éá„Éº„ÇøÊ†ºÁ¥çÈñãÂßãÂàó ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Private Function createUpdateOracleSql(table_name As String, sheet As Worksheet, sql_type_defined_row As Long, db_col_name_defined_row As Long _     , db_data_start_row As Long, db_data_start_col As Long) As String      Dim i As Long, j As Long     Dim start_row As Long, start_col As Long, end_col As Long      Dim sqltype As String     Dim sql As String, sql_1 As String, sql_2 As String      start_row = db_data_start_row     start_col = db_data_start_col     end_col = getMaxColRight(sheet, start_row, start_col)      sqltype = sheet.Cells(sql_type_defined_row, start_col).Value      i = start_row      ' UPDATEÊñá„ÅÆÁîüÊàê     sql = \"\"     sql_1 = \"UPDATE \" & table_name & \" SET \"     sql_2 = \"WHERE \"      For j = start_col To end_col          If sheet.Cells(sql_type_defined_row, j).Value = \"UPDATE\" Then              ' UPDATE„Åô„ÇãDB„Ç´„É©„É†Âêç„Å®ÂÄ§„ÇíËøΩÂä†             sql_1 = sql_1 & sheet.Cells(db_col_name_defined_row, j).Value & \" = '\" _                  & sheet.Cells(i, j).Value & \"'\"             If j <> end_col Then                 sql_1 = sql_1 & \", \"             Else                 sql_1 = sql_1 & \" \"             End If          ElseIf sheet.Cells(sql_type_defined_row, j).Value = \"WHERE\" Then              ' WHERE„Å´ÂØæ„Åô„ÇãDB„Ç´„É©„É†Âêç„Å®ÂÄ§„ÇíËøΩÂä†             sql_2 = sql_2 & sheet.Cells(db_col_name_defined_row, j).Value & \" = '\" _                  & sheet.Cells(i, j).Value & \"'\"             If j <> end_col Then                 sql_2 = sql_2 & \" AND \"             Else                 sql_2 = sql_2 & \" \"             End If          Else             Debug.Print (\"UPDATEÊñá„Å´ÂØæ„Åó„Å¶„ÄÅSQL„Çø„Ç§„ÉóË®≠ÂÆö„ÅåÊ≠£„Åó„Åè„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇË®≠ÂÆö„ÇíË¶ãÁõ¥„Åó„Å¶‰∏ã„Åï„ÅÑ„ÄÇ\")             Exit Function         End If     Next      sql = sql_1 + sql_2      sql = Replace(sql_1 + sql_2, \", WHERE\", \" WHERE\")     If Right(sql, 1) = \",\" Then sql = Mid(sql, 1, Len(sql) - 1)     If Right(sql, 5) = \" AND \" Then sql = Mid(sql, 1, Len(sql) - 5)      createUpdateOracleSql = sql  End Function  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : DELETE SQLÊñá„Çí‰ΩúÊàê ' note  : ÂºïÊï∞ '         „ÉÜ„Éº„Éñ„É´Âêç„ÄÅ„ÉØ„Éº„ÇØ„Ç∑„Éº„Éà„ÄÅSQL„Çø„Ç§„ÉóÊåáÂÆöË°å„ÄÅ„Éá„Éº„Çø„Éô„Éº„Çπ„Ç´„É©„É†ÂêçÊåáÂÆöË°å '         „Éá„Éº„ÇøÊ†ºÁ¥çÈñãÂßãË°å„ÄÅ„Éá„Éº„ÇøÊ†ºÁ¥çÈñãÂßãÂàó ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Private Function createDeleteOracleSql(table_name As String, sheet As Worksheet, sql_type_defined_row As Long, db_col_name_defined_row As Long _     , db_data_start_row As Long, db_data_start_col As Long) As String      Dim i As Long, j As Long     Dim start_row As Long, start_col As Long, end_col As Long      Dim sqltype As String     Dim sql As String, sql_1 As String, sql_2 As String      start_row = db_data_start_row     start_col = db_data_start_col     end_col = getMaxColRight(sheet, start_row, start_col)      sqltype = sheet.Cells(sql_type_defined_row, start_col).Value      i = start_row      ' DELETEÊñá„ÅÆÁîüÊàê     sql = \"\"     sql_1 = \"DELETE FROM \" & table_name & \" \"     sql_2 = \"WHERE \"      For j = start_col To end_col          If sheet.Cells(sql_type_defined_row, j).Value = \"DELETE\" Then              ' WHERE„Å´ÂØæ„Åô„ÇãDB„Ç´„É©„É†Âêç„Å®ÂÄ§„ÇíËøΩÂä†             sql_2 = sql_2 & sheet.Cells(db_col_name_defined_row, j).Value & \" = '\" _                  & sheet.Cells(i, j).Value & \"'\"             If j <> end_col Then                 sql_2 = sql_2 & \" AND \"             Else                 sql_2 = sql_2 & \" \"             End If          Else             Debug.Print (\"DELETEÊñá„Å´ÂØæ„Åó„Å¶„ÄÅSQL„Çø„Ç§„ÉóË®≠ÂÆö„ÅåÊ≠£„Åó„Åè„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇË®≠ÂÆö„ÇíË¶ãÁõ¥„Åó„Å¶‰∏ã„Åï„ÅÑ„ÄÇ\")             Exit Function         End If     Next      sql = sql_1 + sql_2      sql = Replace(sql_1 + sql_2, \", WHERE\", \" WHERE\")     If Right(sql, 1) = \",\" Then sql = Mid(sql, 1, Len(sql) - 1)     If Right(sql, 5) = \" AND \" Then sql = Mid(sql, 1, Len(sql) - 5)      createDeleteOracleSql = sql  End Function ```  ‰ªäÂõû„ÅØ‰ª•‰∏ä„Å®„Å™„Çä„Åæ„Åô„ÄÇ  ‰ªäÂõûË™¨Êòé„Åó„ÅüÊ©üËÉΩ„ÇíÊ¥ªÁî®„Åô„Çå„Å∞„ÄÅ‰æã„Åà„Å∞„ÄÅÊ•≠Âãô„ÅßÊâ±„ÅÜÂ∏≥Á•®Á≠â„ÇíExcel„ÅßÂÖ•Âäõ„Åó„ÄÅÂÖ•Âäõ„Åï„Çå„Åü„Éá„Éº„Çø„Çí„Éá„Éº„Çø„Éô„Éº„Çπ„Å´Ê†ºÁ¥ç„Åô„Çã„Åì„Å®„ÅåÂèØËÉΩ„Å®„Å™„Çä„Åæ„Åô„ÄÇ  Ê¨°Âõû„ÅØ„ÄÅ„Éá„Éº„Çø„Éô„Éº„Çπ„Å´Ê†ºÁ¥ç„Åï„Çå„Å¶„ÅÑ„Çã„Éá„Éº„Çø„Å´Âøú„Åò„Å¶„ÄÄINSERT or UPDATE„ÄÄ„ÇíÈÅ∏Êäû„Åô„ÇãMERGEÊñá„ÇíÂÆüË°å„Åô„ÇãÊ©üËÉΩ„ÇíËøΩÂä†„Åó„Å¶„Åø„Åü„ÅÑ„Å®ÊÄù„ÅÑ„Åæ„Åô„ÄÇ   Ê¨°Âõû„ÅÆMERGEÊñáÁîüÊàêÊ©üËÉΩ„Åæ„ÅßÊ∫ñÂÇô„Åó„Å¶„Åä„Åë„Å∞„ÄÅOracle„Éá„Éº„Çø„Éô„Éº„Çπ„ÇíÊìç‰Ωú„Åô„ÇãExcel„Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†„Å®„Åó„Å¶Êâ±„Åà„Çã„ÅÆ„Åß„ÅØ„Å™„ÅÑ„Åß„Åó„Çá„ÅÜ„Åã„ÄÇ "},"_id":"blog/23-excel3-sql-insert-update-delete-excel-vba.mdx","_raw":{"sourceFilePath":"blog/23-excel3-sql-insert-update-delete-excel-vba.mdx","sourceFileName":"23-excel3-sql-insert-update-delete-excel-vba.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/23-excel3-sql-insert-update-delete-excel-vba"},"type":"Post","slug":"/blog/23-excel3-sql-insert-update-delete-excel-vba","slugAsParams":"23-excel3-sql-insert-update-delete-excel-vba"},{"title":"VBA | DBÊìç‰Ωú ‚Äì Á¨¨4ÂõûÔºöExcel „Åã„Çâ MERGE „ÇíÂÆüË°å","description":"Excel„Éû„ÇØ„É≠ Á¨¨4ÂõûÔºö[Excel „Åã„Çâ MERGE „ÇíÂÆüË°å]","date":"2020-04-17T00:00:00.000Z","emoji":"‚õè","tags":["vba"],"published":true,"body":{"raw":" DBÊìç‰Ωú„ÇíË°å„ÅÜExcel„Éû„ÇØ„É≠„Å´„Å§„ÅÑ„Å¶Ë™¨Êòé„Åó„Åæ„Åô„ÄÇ  ‰ªäÂõû„ÅÆË®ò‰∫ã„ÅØ„ÄéÁ¨¨4Âõû„Äè„Å®„Å™„Çä„Åæ„Åô„ÄÇ  Á¨¨1ÂõûÔºö[Config„Ç∑„Éº„Éà„ÅÆË®≠ÂÆöÂÄ§„ÇíVBA‰∏ä„ÅßÂèñ„ÇäÊâ±„ÅÜ](/blog/21-excel1-config-sheet-excel-vba/)   Á¨¨2ÂõûÔºö[SELECTÊñá„Å´„Çà„ÇäÂèñÂæó„Åó„Åü„Éá„Éº„Çø„ÇíExcel„Å´Ê†ºÁ¥ç](/blog/22-excel2-sql-select-excel-vba/)   Á¨¨3ÂõûÔºö[Excel „Åã„Çâ INSERT, UPDATE, DELETE „ÇíÂÆüË°å](/blog/23-excel3-sql-insert-update-delete-excel-vba/)   Á¨¨4ÂõûÔºö[Excel „Åã„Çâ MERGE „ÇíÂÆüË°å](/blog/24-excel4-sql-merge-excel-vba/)    [„ÄêExcel„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„ÅØ„Åì„Å°„Çâ„Äë](https://github.com/atman-33/template-excel-vba/tree/main/Template_OracleDB%E6%93%8D%E4%BD%9C)  ‚Äª2021/2/5Êîπ‰øÆÁâà   „ÄÄ„ÉªODBCÊé•Á∂ö„Åã„ÇâOraOLEDB.OracleÊé•Á∂ö„Å´Â§âÊõ¥   „ÄÄ„ÉªINSER,UPDATE,MERGEÊñá„ÅÆÁîüÊàêÊñπÊ≥ï„Çí‰øÆÊ≠£    ___ ## Ê¶ÇË¶Å Á¨¨4ÂõûÁõÆ„ÅØ„ÄÅÁ¨¨3Âõû„ÅßÂÆüË£Ö„Åó„ÅüExcel„Ç∑„Éº„Éà„Å´Ê†ºÁ¥ç„Åó„Åü„Éá„Éº„ÇøÔºà„Çª„É´„ÅÆÂÄ§Ôºâ„Çí„ÄÅÊåáÂÆö„Åó„ÅüDBÔºà„Éá„Éº„Çø„Éô„Éº„ÇπÔºâ„ÅÆ„ÉÜ„Éº„Éñ„É´„Å´ÊåøÂÖ•„ÉªÊõ¥Êñ∞„ÉªÂâäÈô§„Åô„ÇãÊñπÊ≥ï„Å´Âä†„Åà„Å¶„ÄÅ„Éá„Éº„ÇøÊåøÂÖ• or Êõ¥Êñ∞ÔºàMERGEÔºâ„ÇíËøΩÂä†„ÅßÂÆüË£Ö„Åó„Åæ„Åó„Åü„ÄÇ  ![image](/blog/24/01.png)  MERGEÂÆüË°åÊ©üËÉΩ„ÇíËøΩÂä†„Åó„Åü„ÅÆ„Åß„ÄÅ‰ªäÂõû„ÅÆExcel„Éï„Ç°„Ç§„É´„Åã„ÇâOracle„Éá„Éº„Çø„Éô„Éº„Çπ„ÇíÊìç‰Ωú„Åô„ÇãÊ©üËÉΩ„ÅØ‰∏ãË®ò„Å®„Å™„Çä„Åæ„Åô„ÄÇ  |„Çø„Ç§„Éó|Ê©üËÉΩ| |:--|:--| INSERT|DB„ÅÆ„ÉÜ„Éº„Éñ„É´„Å´„Éá„Éº„Çø„ÇíÊåøÂÖ• Ôºà„É¨„Ç≥„Éº„ÉâÊåøÂÖ•Ôºâ UPDATE|DB„ÅÆ„ÉÜ„Éº„Éñ„É´„Å´Ê†ºÁ¥ç„Åï„Çå„Å¶„ÅÑ„Çã„Éá„Éº„Çø„ÇíÊõ¥Êñ∞ Ôºà„É¨„Ç≥„Éº„ÉâÊõ¥Êñ∞Ôºâ DELETE|DB„ÅÆ„ÉÜ„Éº„Éñ„É´„Å´Ê†ºÁ¥ç„Åï„Çå„Å¶„ÅÑ„Çã„Éá„Éº„Çø„ÇíÂâäÈô§Ôºà„É¨„Ç≥„Éº„ÉâÂâäÈô§Ôºâ MERGE|DB„ÅÆ„ÉÜ„Éº„Éñ„É´„Å´Ê†ºÁ¥ç„Åï„Çå„Å¶„ÅÑ„Çã„Éá„Éº„Çø„ÇíÊåøÂÖ•„ÇÇ„Åó„Åè„ÅØÊõ¥Êñ∞  ___ ## „Éë„ÉÉ„Ç±„Éº„Ç∏ÊßãÊàê Excel„Éû„ÇØ„É≠ÂÜÖ„ÅÆÊßãÊàê„ÅØ‰∏ãË®ò„Å®„Å™„Çä„Åæ„Åô „ÄÇÔºà‰ΩøÁî®„Åô„Çã„É¢„Ç∏„É•„Éº„É´„ÅÆ„ÅøË®òËºâÔºâ  ```text Template_ver1.x.x.xlsm ‚îúÊ®ôÊ∫ñ„É¢„Ç∏„É•„Éº„É´ |   ‚îúmodCmnGlbConst |   ‚îúmodSql    | „ÇØ„É©„Çπ„É¢„Ç∏„É•„Éº„É´     ‚îúConfigurator     ‚îúDBManager ```  ___ ## „ÇΩ„Éº„Çπ„Ç≥„Éº„ÉâËß£Ë™¨ ÂâçÂõû„Åæ„Åß„ÄÅINSERT„ÉªUPDATE„ÉªDELETE„ÉªMERGE„ÅÆÂêÑ„Ç∑„Éº„Éà„Åã„ÇâÂÆüË°å„Åï„Çå„Çã„Éû„ÇØ„É≠„ÅØ„Åù„Çå„Åû„ÇåÂà•Èñ¢Êï∞„Å®„Åó„Å¶Áã¨Á´ã„Åï„Åõ„Å¶„ÅÑ„Åæ„Åó„Åü„ÄÇ  „Åù„Çå„Åß„ÅØ„ÄÅ‰ªäÂæåÊ©üËÉΩ„ÇíÊã°Âºµ„Åô„ÇãÈöõ„Å´‰∏ç‰æø„Åã„Å®ÊÄù„ÅÑ„Åæ„Åó„Åü„ÅÆ„Åß„ÄÅINSERT„ÉªUPDATE„ÉªDELETE„ÉªMERGE„ÅÆÂêÑ„Ç∑„Éº„Éà„Åã„ÇâÂÆüË°å„Åó„Åü„Éû„ÇØ„É≠„ÅØ„ÄÅ‰∏Ä„Å§„ÅÆÈñ¢Êï∞„ÇíÁµåÁî±„Åó„Å¶„Åã„Çâ„Éá„Éº„Çø„Éô„Éº„ÇπÊìç‰Ωú„ÇØ„É©„Çπ„Å´„Ç¢„ÇØ„Çª„Çπ„Åô„Çã„Çà„ÅÜ„Å´Êîπ‰øÆ„Åó„Åæ„Åó„Åü„ÄÇÔºà„Ç§„É°„Éº„Ç∏„ÅØ‰∏ãË®òÁîªÂÉèÔºâ  ![image](/blog/24/02.png)  ‰æã„Åà„Å∞„ÄÅMERGEÊñá„ÅÆÂÆüË°å„Åß„ÅØ executeMergeSqlsOracle() „ÇíÂÆüË°å„Åó„ÄÅ„Åù„ÅÆ‰∏≠„Åß executeDmlSqlsOracle Èñ¢Êï∞„ÇíÂëº„Å≥Âá∫„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ   Ôºà‰∏ãË®ò„Å´‰∏ÄÈÉ®„ÅÆ„Ç≥„Éº„Éâ„ÇíË®òËºâ„Åó„Å¶„ÅÑ„Åæ„Åô„Åå„ÄÅË©≥Á¥∞„ÅØExcel„Éï„Ç°„Ç§„É´„ÅÆVBA„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åø„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇÔºâ  ```vb ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : D.ÂêÑMERGEÊñá„ÇíÈÄ£Á∂öÂÆüË°å ' note  : OracleÂØæÂøú ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub executeMergeSqlsOracle()      Dim sheet As Worksheet          ' SQL„ÇíÁîüÊàê„Åô„ÇãÊÉÖÂ†±„ÅåÊ†ºÁ¥ç„Åï„Çå„Å¶„ÅÑ„Çã„Ç∑„Éº„Éà     Dim tableName As String         ' Êìç‰Ωú„Åô„ÇãÂØæË±°„ÅÆ„ÉÜ„Éº„Éñ„É´      Set sheet = ThisWorkbook.Worksheets(MERGE_SHEET_NAME)     tableName = sheet.Cells(TABLE_NAME_ROW, TABLE_NAME_COL)      executeDmlSqlsOracle \"MERGE\", tableName, sheet, TYPE_DIFINED_ROW, DB_COL_NAME_DIFINED_ROW, DATA_START_ROW, DATA_START_COL  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : ÂêÑINSERT, UPDATE, DELETE, MERGEÊñá„ÇíÈÄ£Á∂öÂÆüË°å ' note  : OracleÂØæÂøú ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Private Sub executeDmlSqlsOracle(dmlType As String, tableName As String, sheet As Worksheet _     , typeDifinedRow As Long, dbColNameDifinedRow As Long, dataStartRow As Long, dataStartCol As Long)      Dim servicename As String, username As String, password As String      ' Config Ë®≠ÂÆö„ÅÆË™≠„ÅøËæº„Åø     Set config = New Configurator     config.setData ThisWorkbook.Worksheets(GLB_CONFIG_SHEET), GLB_CONFIG_KEY_COL, GLB_CONFIG_ITEM_COL, GLB_CONFIG_START_ROW      servicename = config.getItem(\"SERVICE_NAME\")     username = config.getItem(\"USERNAME\")     password = config.getItem(\"PASSWORD\")      ' DBÊé•Á∂ö     Set dbManagerOracle = New DBManager     dbManagerOracle.openOracle servicename, username, password      ' „Éà„É©„É≥„Ç∂„ÇØ„Ç∑„Éß„É≥ÈñãÂßã     dbManagerOracle.begintrans      On Error GoTo err      ' SQLÂÆüË°å     dbManagerOracle.createAndExcuteOracleSqls tableName, sheet, typeDifinedRow, dbColNameDifinedRow, dataStartRow, dataStartCol      ' „Ç≥„Éü„ÉÉ„Éà     dbManagerOracle.committrans      ' DBÂàáÊñ≠     dbManagerOracle.closeConnection      Select Case dmlType          Case \"INSERT\"             Application.StatusBar = Now & \"SQL INSERTÂÆüË°åÂÆå‰∫Ü\"          Case \"UPDATE\"             Application.StatusBar = Now & \"SQL UPDATEÂÆüË°åÂÆå‰∫Ü\"          Case \"DELETE\"             Application.StatusBar = Now & \"SQL DELETEÂÆüË°åÂÆå‰∫Ü\"          Case \"MERGE\"             Application.StatusBar = Now & \"SQL MERGEÂÆüË°åÂÆå‰∫Ü\"      End Select      Exit Sub  err:     ' „Ç®„É©„ÉºÁô∫ÁîüÊôÇ„ÅØ„É≠„Éº„É´„Éê„ÉÉ„ÇØ     Debug.Print \"„Ç®„É©„ÉºÁï™Âè∑:\" & err.Number & Chr(13) & \"„Ç®„É©„ÉºÂÜÖÂÆπ:\" & err.Description     MsgBox \"„Ç®„É©„ÉºÁï™Âè∑:\" & err.Number & Chr(13) & \"„Ç®„É©„ÉºÂÜÖÂÆπ:\" & err.Description      MsgBox \"„É≠„Éº„É´„Éê„ÉÉ„ÇØ„ÇíÂÆüË°å„Åó„ÄÅ„Éó„É≠„Ç∞„É©„É†„ÇíÁµÇ‰∫Ü„Åó„Åæ„Åô„ÄÇ\"     dbManagerOracle.rollbacktrans      End  End Sub ```  ‰ªäÂõû„ÅØ‰ª•‰∏ä„Å®„Å™„Çä„Åæ„Åô„ÄÇ„Åì„Çå„ÅßExcel„Éï„Ç°„Ç§„É´„ÅÆ„Éû„ÇØ„É≠„Åã„ÇâOracle„Éá„Éº„Çø„Éô„Éº„Çπ„ÇíÊìç‰Ωú„Åô„ÇãÊñπÊ≥ï„ÅÆË™¨Êòé„ÅØÁµÇ‰∫Ü„Å®„Å™„Çä„Åæ„Åô„ÄÇ  „Åì„Çå„Åæ„ÅßË™¨Êòé„Åó„Å¶„Åç„Åü„Çà„ÅÜ„Å™„ÄÅ„Éá„Éº„Çø„Éô„Éº„Çπ„ÇíÊìç‰Ωú„Åô„ÇãÈÉ®ÂàÜ‚Äù„ÅÆ„Åø‚Äù„Çí‰∫à„ÇÅË£Ω‰Ωú„Åó„Å¶„Åä„Åë„Å∞„ÄÅ‰ªñ„ÅÆÁî®ÈÄî„Å´Âøú„Åò„Å¶ËøΩÂä†ÊîπÈÄ†„Åô„Çã„Åì„Å®„ÅßÊßò„ÄÖ„Å™Â†¥Èù¢„Å´ÂØæÂøú„Åß„Åç„Åæ„Åô„ÄÇ  Âü∫Êú¨Ê©üËÉΩ„ÇíÊ∫ñÂÇô„Åó„Å¶„Åä„Åè„Åì„Å®„ÅÆÂ§ßÂàá„Åï„ÇíÂÖ±ÊÑü„Åó„Å¶È†Ç„Åë„Çå„Å∞Âπ∏„ÅÑ„Åß„Åô„ÄÇ "},"_id":"blog/24-excel4-sql-merge-excel-vba.mdx","_raw":{"sourceFilePath":"blog/24-excel4-sql-merge-excel-vba.mdx","sourceFileName":"24-excel4-sql-merge-excel-vba.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/24-excel4-sql-merge-excel-vba"},"type":"Post","slug":"/blog/24-excel4-sql-merge-excel-vba","slugAsParams":"24-excel4-sql-merge-excel-vba"},{"title":"VBA | Âà•Excel„ÅÆ„Éá„Éº„ÇøÂèñÂæó","description":"Âà•„ÅÆExcel„Éï„Ç°„Ç§„É´„Å´Ë®òËºâ„Åï„Çå„Å¶„ÅÑ„Çã„Éá„Éº„Çø„ÇíÂèñÂæó„Åô„ÇãExcel„Éû„ÇØ„É≠","date":"2020-05-01T00:00:00.000Z","emoji":"üñã","tags":["vba"],"published":true,"body":{"raw":" Âà•„ÅÆExcel„Éï„Ç°„Ç§„É´„Å´Ë®òËºâ„Åï„Çå„Å¶„ÅÑ„Çã„Éá„Éº„Çø„ÇíÂèñÂæó„Åô„Çã„Éû„ÇØ„É≠„ÇíË£Ω‰Ωú„Åó„Åæ„Åó„Åü„ÅÆ„ÅßÁ¥π‰ªã„Åó„Åæ„Åô„ÄÇ  [„ÄêExcel„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„ÅØ„Åì„Å°„Çâ„Äë](https://github.com/atman-33/template-excel-vba/tree/main/%E5%88%A5Excel%E3%81%AE%E3%83%87%E3%83%BC%E3%82%BF%E5%8F%96%E5%BE%97)  ___ ## Ê¶ÇË¶Å Excel„Éû„ÇØ„É≠„ÇíÂÆüË°å„Åô„Çã„Å®„ÄÅÊåáÂÆö„Åó„ÅüÂà•Excel„ÅÆ„Éá„Éº„Çø„ÇíËª¢Ë®ò„Åó„Åæ„Åô„ÄÇ  ![image](/blog/25/01.png)  ___ ## „Éë„ÉÉ„Ç±„Éº„Ç∏ÊßãÊàê Excel„Éû„ÇØ„É≠ÂÜÖ„ÅÆÊßãÊàê„ÅØ‰∏ãË®ò„Å®„Å™„Çä„Åæ„Åô „ÄÇ Ôºà‰ΩøÁî®„Åô„Çã„É¢„Ç∏„É•„Éº„É´„ÅÆ„Åø‰∏ãË®ò„Å´Ë®òËºâÔºâ  ```text Âà•Excel„Éï„Ç°„Ç§„É´„ÅÆ„Éá„Éº„ÇøÂèñÂæó.xlsm ‚îúÊ®ôÊ∫ñ„É¢„Ç∏„É•„Éº„É´ |   ‚îúmodCmnFunction |   ‚îúmodExcelExtractor | „ÇØ„É©„Çπ„É¢„Ç∏„É•„Éº„É´     ‚îúExcelExtractor ```  ___ ## „ÇΩ„Éº„Çπ„Ç≥„Éº„ÉâËß£Ë™¨  ___ ### ‚ë†ExcelExtractor Âà•Excel„Åã„Çâ„Éá„Éº„Çø„ÇíÊäΩÂá∫„Åô„ÇãÊ©üËÉΩ„ÇíÊåÅ„Å£„Åü„ÇØ„É©„Çπ„Åß„Åô„ÄÇ Ëß£Ë™¨„ÅØ„Ç≥„É°„É≥„Éà„Å®„Åó„Å¶Ë®òËºâ„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ```vb ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' ExcelExtractor „ÇØ„É©„Çπ ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----  Option Explicit  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' „ÄêÊ¥ªÁî®ÊâãÈ†Ü„ÄÄ‰æã„Äë ' ‚ë† „Ç§„É≥„Çπ„Çø„É≥„ÇπÁîüÊàê ' ‚ë° setFileSheet   Ôºö„Éá„Éº„Çø„ÇíË™≠„ÅøËæº„ÇÄExcelÊÉÖÂ†±„Çí„Ç§„É≥„Éó„ÉÉ„Éà ' ‚ë°¬¥Ôºà„Éá„Éº„ÇøÂèñÂæó„Å´ÊôÇÈñì„ÅåÊéõ„Åã„ÇãÂ†¥Âêà„ÄÅ„Åì„Åì„ÅßÊäΩÂá∫ÂÖÉ„ÅÆExcel„Éï„Ç°„Ç§„É´„ÇíÈñã„ÅÑ„Å¶„Åä„ÅèÔºâ ' ‚ë¢ setDataRows    Ôºö„Éá„Éº„Çø„ÇíË™≠„ÅøËæº„ÇÄÈñãÂßãË°å„Åã„ÇâÁµÇ‰∫ÜË°å„ÇíÊ±∫ÂÆö ' ‚ë£ setDataArray   ÔºöÁâπÂÆö„ÅÆÂàó„Å´ÂØæ„Åô„Çã„Éá„Éº„Çø„Çí‰∏ÄÊôÇÁöÑ„Å´Ê†ºÁ¥ç ' ‚ë§ pasteData      ÔºöÊåáÂÆö„Åó„ÅüExcel„Éï„Ç°„Ç§„É´„ÅÆ„Çª„É´„Å´Ê†ºÁ¥ç„Éá„Éº„Çø„ÇíË≤º„Çä‰ªò„Åë ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----  ' „É°„É≥„ÉêÂ§âÊï∞ÔºàMe.„ÅßÂèÇÁÖßÂèØËÉΩ„Å®„Åô„Çã„Åü„ÇÅpublicÔºâ Public target As String         ' „Éï„Ç©„É´„ÉÄÂêç + \"[\" + „Éï„Ç°„Ç§„É´Âêç + \"]\" + „Ç∑„Éº„ÉàÂêç + \"!\" Public dataFirstRow As Long     ' ÊäΩÂá∫ÂÖÉ„ÅÆExcel„Éá„Éº„Çø„ÅåÊ†ºÁ¥ç„Åï„Çå„Å¶„ÅÑ„ÇãÊúÄÂàù„ÅÆË°å Public dataLastRow As Long      ' ÊäΩÂá∫ÂÖÉ„ÅÆExcel„Éá„Éº„Çø„ÅåÊ†ºÁ¥ç„Åï„Çå„Å¶„ÅÑ„ÇãÊúÄÂæå„ÅÆË°å  Private data() As Variant       ' ÊäΩÂá∫ÂÖÉ„ÅÆExcel„Éá„Éº„Çø„ÇíÊ†ºÁ¥ç„Åô„ÇãÈÖçÂàó  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : „Ç≥„É≥„Çπ„Éà„É©„ÇØ„Çø ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Private Sub Class_Initialize()      ReDim data(0)  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : „Éá„Éº„Çø„ÇíË™≠„ÅøËæº„ÇÄÂØæË±°Excel„ÅÆ„Éï„Ç°„Ç§„É´ÂêçÔºà„Éï„É´„Éë„ÇπÔºâ„ÄÅ„Ç∑„Éº„ÉàÂêç„ÇíË®≠ÂÆö ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub setFileSheet(filePath As String, sheetName As String)      Dim path As String, buf As String      ' „Éï„Ç°„Ç§„É´„ÅåÂ≠òÂú®„Åó„Å™„Åë„Çå„Å∞ÁµÇ‰∫Ü     If Dir(filePath) = \"\" Then         MsgBox (filePath & \" „ÅåÂ≠òÂú®„Åó„Åæ„Åõ„Çì„ÄÇ\" & Chr(13) _             & \"„Éï„Ç©„É´„ÉÄÂêç„Å®„Éï„Ç°„Ç§„É´Âêç„ÇíÁ¢∫Ë™ç„Åó„Å¶‰∏ã„Åï„ÅÑ„ÄÇ\")         Exit Sub     End If      ' „Éï„Ç°„Ç§„É´Âêç„Å´[]„Çí‰ªò„Åë„Çã     path = Replace(filePath, Dir(filePath), \"[\" & Dir(filePath) & \"]\")     Debug.Print path      ' ÂØæË±°„ÉØ„Éº„ÇØ„Ç∑„Éº„ÉàÂêç„ÇíÂèñÂæó     Me.target = \"'\" & path & sheetName & \"'!\"       ' „ÉØ„Éº„ÇØ„Ç∑„Éº„ÉàÂêç„ÅåÊ≠£„Åó„ÅÑ„Åã„Å©„ÅÜ„Åã„ÄÅ„Åæ„ÅöË™≠„ÅøËæº„Çì„Åß„Åø„Çã     On Error Resume Next     buf = ExecuteExcel4Macro(Me.target & \"R1C1\")     If Err <> 0 Then         MsgBox \"„ÉØ„Éº„ÇØ„Ç∑„Éº„Éà [ \" & sheetName & \" ] „ÇíË™≠„ÇÅ„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ\", vbExclamation         Exit Sub     End If     On Error GoTo 0 '// „Ç®„É©„ÉºÂá¶ÁêÜ„ÅÆÂëΩ‰ª§Âèñ„ÇäÊ∂à„Åó      Debug.Print target  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : „Éá„Éº„Çø„ÅåÂÖ•„Å£„Å¶„ÅÑ„ÇãÈñãÂßãË°å„ÉªÁµÇ‰∫ÜË°å„ÇíÁâπÂÆö ' note  : „Ç´„É©„É†Âêç„ÅåÂ≠òÂú®„Åô„Çã„Å™„Çâ„Å∞„ÄÅ„Éá„Éº„ÇøÊ§úÁ¥¢ÈñãÂßãË°å„Åã„Çâ‰∏ãÂÅ¥„Å´Ê§úÁ¥¢„ÇíÈÄ≤„ÇÅ„Å¶ÊúÄÁµÇË°å„ÇíÁâπÂÆö„Åô„Çã„ÄÇ '         ‚Äª‰∏ãÂÅ¥„Å∏„ÅÆÊ§úÁ¥¢ÊôÇ„ÄÅÁ©∫ÁôΩÊï∞„ÅåÈÄ£Á∂ö„Åó„Å¶Ë®≠ÂÆöÊï∞Êú™Ê∫Ä„Åß„ÅÇ„Çå„Å∞Ê§úÁ¥¢„ÇíÈÄ≤„ÇÅ„Çã„ÄÇ ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub setDataRows(fieldName As String, fieldRow As Long, fieldCol As Long, dataFirstRow As Long, serchEndBlankCount As Long)      Dim i As Long     Dim buf As String     Dim blankCount As Long      ' „Ç´„É©„É†Âêç„ÅåÂ≠òÂú®„Åó„Å™„Åë„Çå„Å∞ÁµÇ‰∫Ü     If isExistedFieldName(fieldName, fieldRow, fieldCol) = False Then         MsgBox \"ExcelÂè∞Â∏≥„Å´„Ç´„É©„É†Âêç \" & fieldName & \" „ÅåÂ≠òÂú®„Åó„Åæ„Åõ„Çì„ÄÇ\"         End     End If      ' „Éá„Éº„Çø„ÅÆË™≠„ÅøËæº„Åø     i = 0     blankCount = 0      Do While blankCount < serchEndBlankCount          ' „Éá„Éº„Çø„ÇíË™≠Ëæº         buf = ExecuteExcel4Macro(Me.target & \"R\" & dataFirstRow + i & \"C\" & fieldCol)          If buf = \"0\" Then blankCount = blankCount + 1 Else blankCount = 0    ' „Çª„É´„ÅåÁ©∫ÁôΩ„Å™„Çâ„Éñ„É©„É≥„ÇØ„Ç´„Ç¶„É≥„Éà„Å´+1          i = i + 1     Loop      Me.dataFirstRow = dataFirstRow     Me.dataLastRow = dataFirstRow + i - blankCount - 1     If Me.dataLastRow < Me.dataFirstRow Then Me.dataLastRow = Me.dataFirstRow      Debug.Print \"Ê§úÁ¥¢„Å´„Çà„Çã„ÄÄ„Éá„Éº„ÇøÈñãÂßãÔºö\" & Me.dataFirstRow & \"„ÄÄ„Éá„Éº„ÇøÁµÇ‰∫ÜÔºö\" & Me.dataLastRow  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : ÊåáÂÆö„Åó„ÅüExce„Éá„Éº„Çø„ÇíÈÖçÂàó„Å´Ê†ºÁ¥ç„Åô„Çã„ÄÇ ' note  : ‰∏ª„Å´ ‚ë† setDataArray ‚ë° pasteData „Çí„Çª„ÉÉ„Éà„Åß‰Ωø„ÅÜ„ÄÇ ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub setDataArray(fieldName As String, fieldRow As Long, fieldCol As Long)      Dim i As Long     Dim buf As String      ' „Ç´„É©„É†Âêç„ÅåÂ≠òÂú®„Åó„Å™„Åë„Çå„Å∞ÁµÇ‰∫Ü     If isExistedFieldName(fieldName, fieldRow, fieldCol) = False Then         MsgBox \"ExcelÂè∞Â∏≥„Å´„Ç´„É©„É†Âêç \" & fieldName & \" „ÅåÂ≠òÂú®„Åó„Åæ„Åõ„Çì„ÄÇ\"         ReDim data(0)         Exit Sub     End If      ' Ê†ºÁ¥ç„Éá„Éº„Çø„Çí„ÇØ„É™„Ç¢     Call clearData       ' „Éá„Éº„Çø„ÅÆË™≠„ÅøËæº„Åø     For i = Me.dataFirstRow To Me.dataLastRow          buf = ExecuteExcel4Macro(Me.target & \"R\" & i & \"C\" & fieldCol)         addData buf      Next  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : ÊåáÂÆö„Åó„ÅüExcel„Éï„Ç°„Ç§„É´„ÅÆÁâπÂÆö„Çª„É´„Å´Ê†ºÁ¥ç„Åó„Å¶„ÅÑ„Åü„Éá„Éº„Çø„Çí„Çª„ÉÉ„Éà ' note  : ‰∏ª„Å´ ‚ë† setDataArray ‚ë° pasteData „Çí„Çª„ÉÉ„Éà„Åß‰Ωø„ÅÜ„ÄÇ ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub pasteData(Workbook As Workbook, sheetName As String, row As Long, col As Long)      Dim i As Long      For i = 0 To countData          Workbook.Worksheets(sheetName).Cells(row + i, col) = getDataVal(i)         Debug.Print \"iÔºö\" & i & \"„ÄÄ„ÄÄË°åÔºö\" & row + i & \"„ÄÄ„ÄÄÂÄ§Ôºö\" & getDataVal(i)      Next  End Sub ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : Âà•Excel„ÅÆ„Ç´„É©„É†Âêç„ÅåÂ≠òÂú®„Åô„Çã„ÅãÂà§ÂÆö„Åô„ÇãÈñ¢Êï∞ ' note  : Excel„ÅÆË°åÂàó„ÅåÂ§â„Çè„Å£„Å¶„ÅÑ„Å™„ÅÑ„Åã„Å©„ÅÜ„Åã„ÅÆ„ÉÅ„Çß„ÉÉ„ÇØÁî® ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Private Function isExistedFieldName(fieldName As String, row As Long, col As Long) As Boolean      Dim buf As String      buf = ExecuteExcel4Macro(Me.target & \"R\" & row & \"C\" & col)      If InStr(buf, fieldName) > 0 Then isExistedFieldName = True _         Else isExistedFieldName = False  End Function  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : „Éá„Éº„Çø„ÅÆÂÄ§„ÇíÈÖçÂàó„Å´ËøΩÂä† ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Private Sub addData(ByVal val)     On Error Resume Next      Dim i      i = countData      If (IsEmpty(data(i)) = True) Then         data(i) = val     Else         ReDim Preserve data(i + 1)         data(i + 1) = val     End If  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : ÊåáÂÆöË¶ÅÁ¥†‰ΩçÁΩÆ„ÅÆÂÄ§„ÇíÂèñÂæó„Åô„Çã ' note  : Java„ÅÆArrayList.Get„Å®‰∏ÄÁ∑í ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Private Function getDataVal(index)     Dim v_ret As Variant      If (index > countData) Then         v_ret = Null     Else         v_ret = data(index)     End If      getDataVal = v_ret End Function  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : „Éá„Éº„ÇøÈÖçÂàó„ÅÆË¶ÅÁ¥†Êï∞„ÇíË™ø„Åπ„Çã„ÄÇ ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Private Function countData() As Long     countData = UBound(data) End Function  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : „Éá„Éº„ÇøÈÖçÂàó„Çí„ÇØ„É™„Ç¢„Åô„Çã„ÄÇ ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Private Sub clearData()     ReDim data(0) End Sub ```  ___ ## ‚ë°modExcelExtractor ExcelExtractor „ÇíÊâ±„ÅÜ„É¢„Ç∏„É•„Éº„É´„Åß„Åô„ÄÇ   Ëß£Ë™¨„ÅØ„Ç≥„É°„É≥„Éà„Å®„Åó„Å¶Ë®òËºâ„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ```vb Option Explicit  Const MAIN_DATA_FIELD_NAME_DEFINED_ROW = 10         ' ÊäΩÂá∫„Åô„ÇãExcel„Éá„Éº„Çø„ÅÆ„Éï„Ç£„Éº„É´„ÉâÂêç„Å´Âê´„Åæ„Çå„ÇãÊñáÂ≠óÂàó„ÇíÂÆöÁæ©„Åó„Å¶„ÅÑ„ÇãË°å Const MAIN_DATA_FIELD_ROW_DEFINED_ROW = 11          ' ÊäΩÂá∫„Åô„ÇãExcel„Éá„Éº„Çø„ÅÆ„Éï„Ç£„Éº„É´„ÉâÂêç„ÅåÂê´„Åæ„Çå„ÇãË°å„ÇíÂÆöÁæ©„Åó„Å¶„ÅÑ„ÇãË°å Const MAIN_DATA_FIELD_COL_DEFINED_ROW = 12          ' ÊäΩÂá∫„Åô„ÇãExcel„Éá„Éº„Çø„ÅÆÂàó„ÇíÂÆöÁæ©„Åó„Å¶„ÅÑ„ÇãË°å Const MAIN_DATA_START_ROW_DEFINED_ROW = 13          ' ÊäΩÂá∫„Åô„ÇãExcel„Éá„Éº„Çø„ÅÆÈñãÂßãË°å„ÇíÂÆöÁæ©„Åó„Å¶„ÅÑ„ÇãË°å Const MAIN_DATA_FORMAT_DEFINED_ROW = 14             ' ÊäΩÂá∫„Åô„ÇãExcel„Éá„Éº„Çø„ÅÆÊõ∏Âºè„ÇíÂÆöÁæ©„Åó„Å¶„ÅÑ„ÇãË°å  Const MAIN_DATA_START_ROW = 15                      ' „Éá„Éº„ÇøÊ†ºÁ¥çÈñãÂßãË°å Const MAIN_DATA_START_COL = 2                       ' „Éá„Éº„ÇøÊ†ºÁ¥çÈñãÂßãÂàó  Dim mainSheet As Worksheet  Dim excelPath As String Dim excelSheetName As String  Dim excelSearchFieldName As String Dim excelSearchFieldNameRow As Long Dim excelSearchFieldNameCol As Long Dim excelSearchDataStartRow As Long Dim excelSearchEndMultiBlank As Long  Dim extractor As ExcelExtractor  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : Excel„ÅÆ„Éá„Éº„ÇøÂèñÂæó ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Sub extractExcelData()      Set extractor = New ExcelExtractor      ' Excel„Éá„Éº„ÇøÁî®„ÅÆ„Çª„É´„ÇØ„É™„Ç¢     clearDataSimplified ActiveSheet, MAIN_DATA_START_ROW, MAIN_DATA_START_COL      ' Excel„ÇÑDB„ÅÆË®≠ÂÆöÊÉÖÂ†±ÂèñÂæó     setInfo      ' „Éá„Éº„ÇøÂèñÂæó„Åô„ÇãExcel„ÇíË®≠ÂÆö     extractor.setFileSheet excelPath, excelSheetName      ' Excel„Çí„Ç™„Éº„Éó„É≥Ôºàby modCmnFunctionÔºâ     openFile excelPath      ' Excel„Åã„Çâ„Éá„Éº„ÇøÂèñÂæó„Åô„ÇãË°å„ÅÆÈñãÂßã„Å®ÁµÇ‰∫Ü„ÇíÊ±∫ÂÆö     extractor.setDataRows excelSearchFieldName, excelSearchFieldNameRow, excelSearchFieldNameCol, _         excelSearchDataStartRow, excelSearchEndMultiBlank      ' Excel„Åã„Çâ„Éá„Éº„ÇøÂèñÂæó     pasteExcelData mainSheet      ' Excel„Çí„ÇØ„É≠„Éº„Ç∫Ôºàby modCmnFunctionÔºâ     closeOpenedFile False  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : Excel„Åã„ÇâÂü∫Êú¨ÊÉÖÂ†±„Çí„Çª„ÉÉ„Éà ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Private Sub setInfo()      Set mainSheet = ActiveSheet      excelPath = ActiveSheet.Cells(1, 2).Value     excelSheetName = ActiveSheet.Cells(2, 2).Value      excelSearchFieldName = ActiveSheet.Cells(4, 2).Value     excelSearchFieldNameRow = ActiveSheet.Cells(5, 2).Value     excelSearchFieldNameCol = ActiveSheet.Cells(6, 2).Value     excelSearchDataStartRow = ActiveSheet.Cells(7, 2).Value     excelSearchEndMultiBlank = ActiveSheet.Cells(8, 2).Value  End Sub  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' brief : ExcelÂè∞Â∏≥„Åã„Çâ„Éá„Éº„Çø„Çí„Çª„ÉÉ„Éà„Åô„Çã„ÄÇ ' note  : ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Private Function pasteExcelData(sheet As Worksheet)      Dim i As Long     Dim col As Variant      Dim field_name As String     Dim field_row As Long     Dim field_col As Long     Dim format As String      Debug.Print sheet.Name     i = 0     col = sheet.Cells(MAIN_DATA_FIELD_NAME_DEFINED_ROW, MAIN_DATA_START_COL).Value     Do While col <> \"\"          ' Excel„Åã„Çâ„Éá„Éº„Çø„ÇíÂèñÂæó„Åô„Çã„Åü„ÇÅ„ÅÆÊù°‰ª∂ÂèñÂæó         field_name = sheet.Cells(MAIN_DATA_FIELD_NAME_DEFINED_ROW, MAIN_DATA_START_COL + i)         field_row = sheet.Cells(MAIN_DATA_FIELD_ROW_DEFINED_ROW, MAIN_DATA_START_COL + i)         field_col = sheet.Cells(MAIN_DATA_FIELD_COL_DEFINED_ROW, MAIN_DATA_START_COL + i)          ' Excel„ÅÆ„Éá„Éº„Çø„ÇíË≤º„Çä‰ªò„Åë         extractor.setDataArray field_name, field_row, field_col         extractor.pasteData ThisWorkbook, sheet.Name, MAIN_DATA_START_ROW, MAIN_DATA_START_COL + i          ' Excel„Åã„ÇâÂèñÂæó„Åó„Åü„Éá„Éº„Çø„ÅÆÊõ∏Âºè„ÇíÂ§âÊõ¥         format = sheet.Cells(MAIN_DATA_FORMAT_DEFINED_ROW, MAIN_DATA_START_COL + i)         changeFormatMaxRowBelow sheet, MAIN_DATA_START_ROW, MAIN_DATA_START_COL + i, format          ' Ê¨°„ÅÆÂá¶ÁêÜ„Å∏Áßª„ÇãÊ∫ñÂÇô         i = i + 1         col = sheet.Cells(MAIN_DATA_FIELD_NAME_DEFINED_ROW, MAIN_DATA_START_COL + i).Value     Loop  End Function ```  ‰ªäÂõû„ÅÆExcel„Éû„ÇØ„É≠„ÅØ„ÄÅÂçò‰Ωì„Åß‰ΩøÁî®„Åô„ÇãÂ†¥Èù¢„ÅØÂ∞ë„Å™„ÅÑ„Å®ÊÄù„ÅÑ„Åæ„Åô„ÄÇ  ‰æã„Åà„Å∞„ÄÅË§áÊï∞„ÅÆExcel„Éï„Ç°„Ç§„É´„Åã„Çâ„Éá„Éº„Çø„ÇíÈõÜÁ¥Ñ„Åô„Çã„ÄÅExcel„Éï„Ç°„Ç§„É´„Åã„ÇâÊäΩÂá∫„Åó„Åü„Éá„Éº„Çø„Çí„Éá„Éº„Çø„Éô„Éº„Çπ„Å´ÁôªÈå≤„Åô„Çã„ÄÅ„Å®„ÅÑ„ÅÜ„Çà„ÅÜ„Å´Êã°Âºµ„Åô„Çã„Å®‰æøÂà©„Åß„Åô„ÄÇ  ‰ª•‰∏ä„Åß„Åô„ÄÇ "},"_id":"blog/25-get-another-excel-data-excel-vba.mdx","_raw":{"sourceFilePath":"blog/25-get-another-excel-data-excel-vba.mdx","sourceFileName":"25-get-another-excel-data-excel-vba.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/25-get-another-excel-data-excel-vba"},"type":"Post","slug":"/blog/25-get-another-excel-data-excel-vba","slugAsParams":"25-get-another-excel-data-excel-vba"},{"title":"C# | WPF Prism ÁîªÈù¢ÈÅ∑ÁßªÔºà„Éä„Éì„Ç≤„Éº„ÉàÔºâ","description":"C# WPF Prism „Éä„Éì„Ç≤„Éº„ÉàÁîªÈù¢„ÅÆÈÅ∑ÁßªÊñπÊ≥ï","date":"2023-02-26T00:00:00.000Z","emoji":"ü§ñ","tags":["csharp"],"published":true,"body":{"raw":" C#„ÅÆ **WPF Prism** „Åß„Éä„Éì„Ç≤„Éº„ÉàÁîªÈù¢„ÅÆÈÅ∑ÁßªÊñπÊ≥ï„Å´„Å§„ÅÑ„Å¶Ë™¨Êòé„Åó„Åæ„Åô„ÄÇ  ‰∏ãË®ò„ÅÆ„Çà„ÅÜ„Å´„ÄÅ„Éú„Çø„É≥„ÇíÊäº„Åô„Å®ÁîªÈù¢„ÅåÂàá„ÇäÊõø„Çè„ÇãÂá¶ÁêÜ„Åß„Åô„ÄÇ Ôºà„ÉÄ„Ç§„Ç¢„É≠„Ç∞„Åß„ÅØ„Å™„Åè„ÄÅÁîªÈù¢ÂÜÖ„ÅÆË°®Á§∫„ÅåÂàá„ÇäÊõø„Çè„Çä„Åæ„Åô„ÄÇÔºâ  ![image](/blog/26/1.gif)  ## ÂØæË±°„Éï„Ç°„Ç§„É´Ôºà‰æãÔºâ  „Ç≥„Éº„Éá„Ç£„É≥„Ç∞„ÅåÂøÖË¶Å„Å™„Éï„Ç°„Ç§„É´„ÅØ‰∏ãË®ò„ÅÆ **AÔΩûC** „Åß„Åô„ÄÇ  ```text Views/  |-MainWindowView.xamlÔºàÁîªÈù¢ÈÅ∑ÁßªÂÖÉÔºâ„ÄÄÔΩ•ÔΩ•ÔΩ•A  |-SampleNavigationView.xaml(ÁîªÈù¢ÈÅ∑ÁßªÂÖà)  ViewModels/  |-MainWindowViewModel.csÔºàÁîªÈù¢ÈÅ∑ÁßªÂÖÉÔºâ„ÄÄÔΩ•ÔΩ•ÔΩ•B  |-SampleNavigationViewModel.cs(ÁîªÈù¢ÈÅ∑ÁßªÂÖà)„ÄÄÔΩ•ÔΩ•ÔΩ•C  App.xaml.cs„ÄÄÔΩ•ÔΩ•ÔΩ•D ```  ## MainWindowView.xamlÔºàÁîªÈù¢ÈÅ∑ÁßªÂÖÉÔºâ„ÄÄÔΩ•ÔΩ•ÔΩ•A  ### ‚ë†„Éú„Çø„É≥„Å´Command„ÇíËøΩÂä†  ÁîªÈù¢ÈÅ∑ÁßªÂÖÉ„ÅÆView„ÅÆ„Éú„Çø„É≥„Å´ÂØæ„Åó„Å¶„ÄÅCommand„Å´Binding„Åß„Éá„É™„Ç≤„Éº„Éà„Ç≥„Éû„É≥„ÉâÂêçÁß∞„ÇíË®òËºâ„Åó„Åæ„Åô„ÄÇ  ```xml <Button Content=\"Sample„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥ÁîªÈù¢\"         FontSize=\"14\"         Margin=\"10\"         Padding=\"5\"         Command=\"{Binding SampleNavigationViewButton}\"/> ```  ## MainWindowViewModel.csÔºàÁîªÈù¢ÈÅ∑ÁßªÂÖÉÔºâ„ÄÄÔΩ•ÔΩ•ÔΩ•B  ### ‚ë°ViewModel„Å´IRegionManager„ÅÆÂ§âÊï∞„ÇíËøΩÂä†  ÁîªÈù¢ÈÅ∑ÁßªÂÖÉ„ÅÆViewModel„Å´„ÄÅIRegionManager„ÅÆ„Éó„É©„Ç§„Éô„Éº„ÉàÂ§âÊï∞„ÇíËøΩÂä†„Åó„ÄÅ„Ç≥„É≥„Çπ„Éà„É©„ÇØ„Çø„Åß„Çª„ÉÉ„Éà„Åó„Åæ„Åô„ÄÇ  ### ‚ë¢„Éú„Çø„É≥Êäº‰∏ãÊôÇ„ÅÆÂÆüË°å„É°„ÇΩ„ÉÉ„Éâ„ÇíËøΩÂä†  „Éú„Çø„É≥Êäº‰∏ã„Ç§„Éô„É≥„Éà„ÇíÂèó„ÅëÂèñ„Çã„Éá„É™„Ç≤„Éº„Éà„Ç≥„Éû„É≥„Éâ„ÅÆ„Éó„É≠„Éë„ÉÜ„Ç£„ÇíËøΩÂä†„Åó„ÄÅ„Éú„Çø„É≥Êäº‰∏ãÊôÇ„ÅÆExcute„É°„ÇΩ„ÉÉ„Éâ„ÇíÂÆüË£Ö„Åó„Åæ„Åô„ÄÇ  ‚ñº‰∏äË®ò‚ë°ÔΩû‚ë¢„ÅÆ„Çµ„É≥„Éó„É´„Ç≥„Éº„Éâ ```cs private IRegionManager _regionManager;  //// ÁîªÈù¢ÈÅ∑ÁßªÔºà„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥Ôºâ  //// „Ç≥„É≥„Çπ„Éà„É©„ÇØ„Çø public MainWindowViewModel(IRegionManager regionManager) {     //// ÁîªÈù¢ÈÅ∑ÁßªÁî®Ôºà„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥Ôºâ     _regionManager = regionManager;      SampleNavigationViewButton = new DelegateCommand(SampleNavigationViewButtonExecute); }  public DelegateCommand SampleNavigationViewButton { get; }  private void SampleNavigationViewButtonExecute() {    //// ÁîªÈù¢ÈÅ∑ÁßªÂá¶ÁêÜÔºà„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥Ôºâ    _regionManager.RequestNavigate(\"ContentRegion\", nameof(SampleNavigationView)); } ```  ## SampleNavigationViewModel.cs(ÁîªÈù¢ÈÅ∑ÁßªÂÖà)„ÄÄÔΩ•ÔΩ•ÔΩ•C  ### ‚ë£INavigationAware„Ç§„É≥„Çø„Éº„Éï„Çß„Éº„Çπ„ÇíÂÆüË£Ö ÁîªÈù¢ÈÅ∑ÁßªÂÖà„ÅÆViewModel„Å´„ÄÅ**INavigationAware„Ç§„É≥„Çø„Éº„Éï„Çß„Éº„Çπ** „Å® **IRegionMemberLifetime„Ç§„É≥„Çø„Éº„Éï„Çß„Éº„Çπ**„ÇíÂÆüË£Ö„Åó„Åæ„Åô„ÄÇ  ‚Äª2023/3/5 ËøΩË®ò ViewModel„Ç§„É≥„Çπ„Çø„É≥„Çπ„ÅÆ„É°„É¢„É™ÈñãÊîæ„ÅÆ„Åü„ÇÅ„ÄÅIRegionMemberLifetime„Ç§„É≥„Çø„Éº„Éï„Çß„Éº„ÇπÂÆüË£Ö„ÇíËøΩÂä†„Åó„Åæ„Åó„Åü„ÄÇ  ### ‚ë§„Ç§„É≥„Çø„Éº„Éï„Çß„Éº„Çπ„ÅÆ„É°„ÇΩ„ÉÉ„Éâ„ÇíÂ§âÊõ¥ INavigationAware„ÇíÂÆüË£Ö„Åó„Åü‰∫ã„ÅßËøΩÂä†„Åï„Çå„Çã IsNavigationTarget „ÅÆ Êàª„ÇäÂÄ§„Çí true „Å®„Åó„ÄÅKeepAlive „Çí false „Å´„Åó„Å¶‰∏ã„Åï„ÅÑ„ÄÇ„Åù„ÅÜ„Åô„Çå„Å∞„ÄÅÁîªÈù¢Á†¥Ê£Ñ„Åß„É°„É¢„É™„ÅåÈñãÊîæ„Åï„Çå„Åæ„Åô„ÄÇ  ‚ñº‰∏äË®ò‚ë£ÔΩû‚ë§„ÅÆ„Çµ„É≥„Éó„É´„Ç≥„Éº„Éâ ```cs public class SampleTableEditViewModel : BindableBase, INavigationAware, IRegionMemberLifetime {     /// <summary>     /// ViewModelÁ†¥Ê£Ñ„Å´‰º¥„ÅÑ„É°„É¢„É™ÈñãÊîæ„Åô„ÇãÈöõ„ÅØfalse     /// </summary>     public bool KeepAlive { get; set; } = false;      //// ÂêÑÁ®ÆÂá¶ÁêÜ      public bool IsNavigationTarget(NavigationContext navigationContext)     {         //// RegionMemberLifetime(KeepAlive = false)„ÅßViewModel„ÇíÁ†¥Ê£Ñ„Åô„Çã„Åü„ÇÅ„ÄÅ„Åì„Å°„Çâ„ÅØTrue         return true;     }      public virtual void OnNavigatedFrom(NavigationContext navigationContext)     {     }      public virtual void OnNavigatedTo(NavigationContext navigationContext)     {     } } ```  ## App.xaml.cs„ÄÄÔΩ•ÔΩ•ÔΩ•D  ### ‚ë•RegisterTypesÂÜÖ„ÅßView„ÇíÁôªÈå≤  ```cs protected override void RegisterTypes(IContainerRegistry containerRegistry) {     //// „Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥ÁîªÈù¢     containerRegistry.RegisterForNavigation<SampleNavigationView>(); } ```  containerRegistry.RegisterForNavigation„Å´Ë®≠ÂÆö„Åó„ÅüView„ÅåÁîªÈù¢ÈÅ∑ÁßªÂèØËÉΩ„Å®„Å™„Çä„Åæ„Åô„ÄÇ "},"_id":"blog/26-navigation-wpf-prism-cs.mdx","_raw":{"sourceFilePath":"blog/26-navigation-wpf-prism-cs.mdx","sourceFileName":"26-navigation-wpf-prism-cs.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/26-navigation-wpf-prism-cs"},"type":"Post","slug":"/blog/26-navigation-wpf-prism-cs","slugAsParams":"26-navigation-wpf-prism-cs"},{"title":"C# | WPF Prism DataGrid Column„ÅÆVisibility„Çí„Éê„Ç§„É≥„Éâ","description":"C# WPF Prism „Åß DataGrido „Ç´„É©„É†„ÅÆ Visibility „Çí„Éê„Ç§„É≥„Éâ„Åô„ÇãÊñπÊ≥ï","date":"2023-02-27T00:00:00.000Z","emoji":"üî©","tags":["csharp"],"published":true,"body":{"raw":" C#„ÅÆ **WPF Prism** „ÅßDataGrido„Ç´„É©„É†„ÅÆVisibility„Çí„Éê„Ç§„É≥„Éâ„Åô„ÇãÊñπÊ≥ï„ÇíË™¨Êòé„Åó„Åæ„Åô„ÄÇ  ‰æã„Åà„Å∞„ÄÅDataGridÂÜÖ„ÅÆ„Ç´„É©„É†„Å´ÂØæ„Åó„Å¶„Ç≥„É≥„Éú„Éú„ÉÉ„ÇØ„ÇπÔºà„ÅÆÈÅ∏ÊäûËÇ¢Ôºâ„Çí„Éá„Éº„Çø„Éê„Ç§„É≥„Éâ„Åï„Åõ„ÇãÂ†¥Âêà„ÄÅRelativeSource FindAncestor „ÇíÁî®„ÅÑ„ÅüÊñπÊ≥ï„ÅåËÄÉ„Åà„Çâ„Çå„Åæ„Åô„ÄÇ   „Åó„Åã„Åó„ÄÅ**DataGrid„ÅÆ„Ç´„É©„É†„ÅÆVisibility„Å´„Éá„Éº„Çø„Éê„Ç§„É≥„Éâ„Åô„ÇãÂ†¥Âêà„ÄÅRelativeSource„ÇíÁî®„ÅÑ„ÅüÊñπÊ≥ï„ÅØ‰Ωø„Åà„Åæ„Åõ„Çì**„ÄÇ  „Åù„ÅÆ„Åü„ÇÅ„ÄÅViewModel„ÇíÂèÇÁÖßÂèØËÉΩ„Å®„Åô„Çã„ÇØ„É©„Çπ„Çí‰ΩúÊàê„Åó„Å¶ÂØæÂøú„Åó„Åæ„Åô„ÄÇ   ## ÂØæË±°„Éï„Ç°„Ç§„É´Ôºà‰æãÔºâ  „Ç≥„Éº„Éá„Ç£„É≥„Ç∞„ÅåÂøÖË¶Å„Å™„Éï„Ç°„Ç§„É´„ÅØ‰∏ãË®ò„ÅÆ **AÔΩûC** „Åß„Åô„ÄÇ  ```text WPF/  |-Services/  |  |-BindingProxy.cs ÔΩ•ÔΩ•ÔΩ•A  |  |-Views/  |  |-SampleView.xaml ÔΩ•ÔΩ•ÔΩ•B    |  |-ViewModels/  |  |-SampleViewModel.cs ÔΩ•ÔΩ•ÔΩ•C   ```  ## BindingProxy.cs„ÄÄÔΩ•ÔΩ•ÔΩ•A  ÈÄöÂ∏∏„ÄÅItemsSource„Çí‰Ωø„ÅÜ„Å®„Éê„Ç§„É≥„Éâ„Åó„Å¶„ÅÑ„Çã„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥„ÅÆÂêÑË¶ÅÁ¥†„ÅåDataContext„Å®„Å™„Çã„Åü„ÇÅ„ÄÅ DataGridÂÜÖ„Åß„ÅØItemsSource‰ª•Â§ñ„ÅÆ„Éê„Ç§„É≥„Éâ„ÅåÂá∫Êù•„Å™„Åè„Å™„Çä„Åæ„Åô„ÄÇ  ‚ÄªDataContextÔºöBinding„ÅÆÂØæË±°  „Åù„Åì„Åß„ÄÅDataGridÂÜÖ„ÅÆ„Ç≥„É≥„Éà„É≠„Éº„É´„ÇíÁõ¥Êé•ViewModel„ÅÆ„Éó„É≠„Éë„ÉÜ„Ç£„Å´„Ç¢„ÇØ„Çª„ÇπÂèØËÉΩ„Å®„Åô„Çã**„ÄåBindingProxy„Äç**„ÇØ„É©„Çπ„ÇíÊ∫ñÂÇô„Åó„Åæ„Åô„ÄÇ  ‚ñºBindingProxy.cs  ```cs using System.Windows;  namespace Template2.WPF.Services {     /// <summary>     /// ViewModel„ÅÆ„Éê„Ç§„É≥„Éá„Ç£„É≥„Ç∞„ÇΩ„Éº„Çπ„ÅÆ‰ª£ÁêÜ„Å®„Åó„Å¶ÂÉç„Åè„ÇØ„É©„Çπ„Åß„Åô„ÄÇ     /// </summary>     public class BindingProxy : Freezable     {         /// <summary>         /// Freezable„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„ÅÆ„Ç§„É≥„Çπ„Çø„É≥„Çπ„ÇíÁîüÊàê„Åó„Åæ„Åô„ÄÇ         /// </summary>         /// <returns></returns>         protected override Freezable CreateInstanceCore()         {             return new BindingProxy();         }          /// <summary>         /// Èñì„Çí„Å®„Çä„ÇÇ„Å§„Éó„É≠„Éë„ÉÜ„Ç£         /// „Éá„Éº„Çø„Éê„Ç§„É≥„Éâ„Åó„ÅüÂ†¥Âêà„ÅØ„ÄÅ„Åì„ÅÆ„Éó„É≠„Éë„ÉÜ„Ç£„ÅåViewModel„ÅÆ‰ª£„Çè„Çä„Å´„Å™„Çã„ÄÇ         /// </summary>         public object Data         {             get { return (object)GetValue(DataProperty); }             set { SetValue(DataProperty, value); }         }          /// <summary>         /// Data „ÅÆ‰æùÂ≠òÈñ¢‰øÇ„Éó„É≠„Éë„ÉÜ„Ç£ÂÆöÁæ©         /// </summary>         public static readonly DependencyProperty DataProperty =             DependencyProperty.Register(\"Data\", typeof(object), typeof(BindingProxy), new UIPropertyMetadata(null));     } } ```  ## SampleView.xaml ÔΩ•ÔΩ•ÔΩ•B    ### ‚ë†View„ÅÆxaml„Å´„É≠„Éº„Ç´„É´„ÇØ„É©„ÇπÂèÇÁÖß„ÇíËøΩÂä†  Window„ÇÇ„Åó„Åè„ÅØUserControlË¶ÅÁ¥†„Å´„ÄÅBindingProxy„ÇØ„É©„Çπ„ÅÆnamespaceÂèÇÁÖß„ÇíËøΩÂä†„Åó„Åæ„Åô„ÄÇ  ‰æãÔºâBindingProxy.cs „ÅÆ namespace „Åå„ÄÅTemplate2.WPF.Services „ÅÆÂ†¥Âêà   **`xmlns:services=\"clr-namespace:Template2.WPF.Services\"`**  ‚ñºSampleView.xaml ```xml <UserControl x:Class=\"Template2.WPF.Views.Sample002View\"              xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"              xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"              xmlns:prism=\"http://prismlibrary.com/\"                           prism:ViewModelLocator.AutoWireViewModel=\"True\"              xmlns:materialDesign=\"http://materialdesigninxaml.net/winfx/xaml/themes\"              xmlns:i=\"http://schemas.microsoft.com/xaml/behaviors\"              Background=\"{StaticResource backgroundColor}\"              xmlns:services=\"clr-namespace:Template2.WPF.Services\"              > ```  ### ‚ë°DataGrid„ÅÆ„É™„ÇΩ„Éº„Çπ„Å´BindingProxyÂèÇÁÖß„ÇíËøΩÂä†  ‰∏ãË®ò„Ç≥„Éº„Éâ„ÇíËøΩÂä†„Åó„Å¶DataGridÂÜÖ„ÅßBindingProxy„ÇíÂà©Áî®ÂèØËÉΩ„Å®„Åó„Åæ„Åô„ÄÇ  ```xml <DataGrid.Resources>     <!--DataGrid„ÅÆItemSource„Å®„ÅØÂà•„ÅÆ„Ç¢„Ç§„ÉÜ„É†„ÇíBind„Åô„Çã„Åü„ÇÅ„Å´ÂøÖË¶Å-->     <services:BindingProxy x:Key=\"Proxy\" Data=\"{Binding}\"/> </DataGrid.Resources> ```  ‰æãÔºâDataGrid„Å∏„ÅÆÁµÑËæº„Åø‰æã  ‚ñºSampleView.xaml ```xml <DataGrid Style=\"{StaticResource commonDataGrid}\"           ItemsSource=\"{Binding WorkerMstEntities}\"           SelectedItem=\"{Binding WorkerMstEntitiesSlectedItem}\"           VerticalAlignment=\"Top\"           HorizontalAlignment=\"Left\"           IsReadOnly=\"False\"           CanUserAddRows=\"False\"           Cursor=\"Hand\">                  <DataGrid.Resources>                     <!--DataGrid„ÅÆItemSource„Å®„ÅØÂà•„ÅÆ„Ç¢„Ç§„ÉÜ„É†„ÇíBind„Åô„Çã„Åü„ÇÅ„Å´ÂøÖË¶Å-->                     <services:BindingProxy x:Key=\"Proxy\" Data=\"{Binding}\"/>                 </DataGrid.Resources>                  ÔºàÁúÅÁï•Ôºâ ```  ### ‚ë¢DataGrid„Ç´„É©„É†„ÅÆVisibility„Çí„Éê„Ç§„É≥„Éâ  DataGrid„ÅÆColumnË¶ÅÁ¥†„Å´„ÄÅVisibility„ÇíËøΩÂä†„Åó„Åæ„Åô„ÄÇ  **„Éù„Ç§„É≥„Éà** - Binding:Data.XXX „ÇíË®òËºâ„Åô„Çã„Åì„Å® - Source:StaticResource„ÇíË®òËºâ„Åô„Çã„Åì„Å®  ‚ñºSampleView.xaml ```xml <DataGrid.Columns>     <!-- „Ç´„É©„É†„ÅÆVisibility„ÅØ„ÄÅBindingProxy„ÇØ„É©„Çπ„ÇíÂà©Áî®„Åó„Å¶ViewModel„ÅÆ„Éó„É≠„Éë„ÉÜ„Ç£„ÇíÂèÇÁÖß„Åô„ÇãÂøÖË¶ÅÊúâ„Çä -->     <materialDesign:DataGridTextColumn Header=\"‰ΩúÊ•≠ËÄÖÂêçÁß∞\"            Binding=\"{Binding WorkerName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}\"            Visibility=\"{Binding Data.WorkerNameVisibility, Source={StaticResource Proxy}}\">      ÔºàÁúÅÁï•Ôºâ ```  ## SampleViewModel.cs ÔΩ•ÔΩ•ÔΩ•C      ### ‚ë£ViewModel„Å´Visibility„Éê„Ç§„É≥„ÉâÁî®„Éó„É≠„Éë„ÉÜ„Ç£„ÇíÊ∫ñÂÇô  ÈÄöÂ∏∏„ÅÆWPF Prism„Åß„Éó„É≠„Éë„ÉÜ„Ç£„Çí„Éá„Éº„Çø„Éê„Ç§„É≥„Éâ„Åô„ÇãÊñπÊ≥ï„Å®ÂêåÊßò„Å´„ÄÅVisibility„Çí„Éê„Ç§„É≥„Éâ„Åó„ÅüÂêçÁß∞„ÅÆ„Éó„É≠„Éë„ÉÜ„Ç£„Å®„Éó„É©„Ç§„Éô„Éº„ÉàÂ§âÊï∞„ÇíËøΩÂä†„Åó„Åæ„Åô„ÄÇ  ‚ñºSampleViewModel.cs ```cs private Visibility _workerNameVisibility = Visibility.Visible; public Visibility WorkerNameVisibility {     get { return _workerNameVisibility; }     set { SetProperty(ref _workerNameVisibility, value); } } ```  ‰ª•‰∏ä„Åß„Åô„ÄÇ "},"_id":"blog/28-bind-datagrid-column-visibility-wpf-prism-cs.mdx","_raw":{"sourceFilePath":"blog/28-bind-datagrid-column-visibility-wpf-prism-cs.mdx","sourceFileName":"28-bind-datagrid-column-visibility-wpf-prism-cs.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/28-bind-datagrid-column-visibility-wpf-prism-cs"},"type":"Post","slug":"/blog/28-bind-datagrid-column-visibility-wpf-prism-cs","slugAsParams":"28-bind-datagrid-column-visibility-wpf-prism-cs"},{"title":"C# | WPF Prism ÁîªÈù¢ÈÅ∑ÁßªÔºà„ÉÄ„Ç§„Ç¢„É≠„Ç∞Ôºâ","description":"C# WPF Prism „ÉÄ„Ç§„Ç¢„É≠„Ç∞ÁîªÈù¢„ÅÆÈÅ∑ÁßªÊñπÊ≥ï","date":"2023-02-27T00:00:00.000Z","emoji":"üî®","tags":["csharp"],"published":true,"body":{"raw":" C#„ÅÆ **WPF Prism** „Åß„ÉÄ„Ç§„Ç¢„É≠„Ç∞ÁîªÈù¢ÔºàÂà•„Ç¶„Ç£„É≥„Éâ„Ç¶Ôºâ„ÇíË°®Á§∫„Åô„ÇãÊñπÊ≥ï„Å´„Å§„ÅÑ„Å¶Ë™¨Êòé„Åó„Åæ„Åô„ÄÇ   ## ÂØæË±°„Éï„Ç°„Ç§„É´Ôºà‰æãÔºâ  „Ç≥„Éº„Éá„Ç£„É≥„Ç∞„ÅåÂøÖË¶Å„Å™„Éï„Ç°„Ç§„É´„ÅØ‰∏ãË®ò„ÅÆ **AÔΩûD** „Åß„Åô„ÄÇ  ```text Views/  |-MainWindowView.xamlÔºàÁîªÈù¢ÈÅ∑ÁßªÂÖÉÔºâ„ÄÄÔΩ•ÔΩ•ÔΩ•A  |-SampleTableEditView.xaml(ÁîªÈù¢ÈÅ∑ÁßªÂÖà)  ViewModels/  |-MainWindowViewModel.csÔºàÁîªÈù¢ÈÅ∑ÁßªÂÖÉÔºâ„ÄÄÔΩ•ÔΩ•ÔΩ•B  |-SampleTableEditViewModel.cs(ÁîªÈù¢ÈÅ∑ÁßªÂÖà)„ÄÄÔΩ•ÔΩ•ÔΩ•C„ÄÄ  App.xaml.cs„ÄÄÔΩ•ÔΩ•ÔΩ•D ```  ## MainWindowView.xamlÔºàÁîªÈù¢ÈÅ∑ÁßªÂÖÉÔºâ„ÄÄÔΩ•ÔΩ•ÔΩ•A  ### ‚ë†„Éú„Çø„É≥„Å´Command„ÇíËøΩÂä†  ÁîªÈù¢ÈÅ∑ÁßªÂÖÉ„ÅÆView„ÅÆ„Éú„Çø„É≥„Å´ÂØæ„Åó„Å¶„ÄÅCommand„Å´Binding„Åß„Éá„É™„Ç≤„Éº„Éà„Ç≥„Éû„É≥„ÉâÂêçÁß∞„ÇíË®òËºâ„Åó„Åæ„Åô„ÄÇ  ```xml <Button Content=\"SampleTableÁ∑®ÈõÜ\"         FontSize=\"14\"         Margin=\"10\"         Padding=\"5\"         Command=\"{Binding SampleTableEditViewButton}\"/> ```  ## MainWindowViewModel.csÔºàÁîªÈù¢ÈÅ∑ÁßªÂÖÉÔºâ„ÄÄÔΩ•ÔΩ•ÔΩ•B  ### ‚ë°ViewModel„Å´IDialogService„ÅÆÂ§âÊï∞„ÇíËøΩÂä†  ÁîªÈù¢ÈÅ∑ÁßªÂÖÉ„ÅÆViewModel„Å´„ÄÅIDialogService„ÅÆ„Éó„É©„Ç§„Éô„Éº„ÉàÂ§âÊï∞„ÇíËøΩÂä†„Åó„ÄÅ„Ç≥„É≥„Çπ„Éà„É©„ÇØ„Çø„Åß„Çª„ÉÉ„Éà„Åó„Åæ„Åô„ÄÇ  ### ‚ë¢„Éú„Çø„É≥Êäº‰∏ãÊôÇ„ÅÆÂÆüË°å„É°„ÇΩ„ÉÉ„Éâ„ÇíËøΩÂä†  „Éú„Çø„É≥Êäº‰∏ã„Ç§„Éô„É≥„Éà„ÇíÂèó„ÅëÂèñ„Çã„Éá„É™„Ç≤„Éº„Éà„Ç≥„Éû„É≥„Éâ„ÅÆ„Éó„É≠„Éë„ÉÜ„Ç£„ÇíËøΩÂä†„Åó„ÄÅ„Éú„Çø„É≥Êäº‰∏ãÊôÇ„ÅÆExcute„É°„ÇΩ„ÉÉ„Éâ„ÇíÂÆüË£Ö„Åó„Åæ„Åô„ÄÇ  ‰∏äË®ò‚ë°ÔΩû‚ë¢„ÅÆ„Ç≥„Éº„Éâ‰æã„ÅØ‰∏ãË®ò„Å®„Å™„Çä„Åæ„Åô„ÄÇ  ```cs //// „Ç≥„É≥„Çπ„Éà„É©„ÇØ„Çø public MainWindowViewModel(IDialogService dialogService) {     //// ÁîªÈù¢ÈÅ∑ÁßªÁî®Ôºà„ÉÄ„Ç§„Ç¢„É≠„Ç∞Ôºâ     _dialogService = dialogService;      SampleTableEditViewButton = new DelegateCommand(SampleTableEditViewButtonExecute); }  public DelegateCommand SampleTableEditViewButton { get; }  private void SampleTableEditViewButtonExecute() {     //// ÁîªÈù¢ÈÅ∑ÁßªÂá¶ÁêÜÔºà„ÉÄ„Ç§„Ç¢„É≠„Ç∞Ôºâ     _dialogService.ShowDialog(nameof(SampleTableEditView), null, null); } ```  ## SampleTableEditViewModel.cs(ÁîªÈù¢ÈÅ∑ÁßªÂÖà)„ÄÄÔΩ•ÔΩ•ÔΩ•C„ÄÄ  ### ‚ë£IDialogAware„Ç§„É≥„Çø„Éº„Éï„Çß„Éº„Çπ„ÇíÂÆüË£Ö ÁîªÈù¢ÈÅ∑ÁßªÂÖà„ÅÆViewModel„Å´„ÄÅ**IDialogAware„Ç§„É≥„Çø„Éº„Éï„Çß„Éº„Çπ** „ÇíÂÆüË£Ö„Åó„Åæ„Åô„ÄÇ  ### ‚ë§CanCloseDialog„É°„ÇΩ„ÉÉ„Éâ„ÇíÂ§âÊõ¥ IDialogAware„ÇíÂÆüË£Ö„Åó„Åü‰∫ã„ÅßËøΩÂä†„Åï„Çå„Çã CanCloseDialog() „É°„ÇΩ„ÉÉ„Éâ„Å´„ÄÅ retun true „ÇíË®òËºâ„Åó„Åæ„Åô„ÄÇ true„ÇíËøî„Åô‰∫ã„Åß„ÄÅ„ÉÄ„Ç§„Ç¢„É≠„Ç∞„ÇíÈñâ„Åò„Çã‰∫ã„ÅåÂèØËÉΩ„Å®„Å™„Çä„Åæ„Åô„ÄÇ  ‚ñº‰∏äË®ò‚ë£ÔΩû‚ë§„ÅÆ„Çµ„É≥„Éó„É´„Ç≥„Éº„Éâ ```cs public class SampleTableEditViewModel : BindableBase, IDialogAware {    //// ÂêÑÁ®ÆÂá¶ÁêÜ    public bool CanCloseDialog()   {       return true;    //// true:ÁîªÈù¢„ÇíÈñâ„Åò„Çã‰∫ã„ÅåÂèØËÉΩ   } } ```  ## App.xaml.cs„ÄÄÔΩ•ÔΩ•ÔΩ•D  ### ‚ë•RegisterTypesÂÜÖ„ÅßView„ÇíÁôªÈå≤  ```cs protected override void RegisterTypes(IContainerRegistry containerRegistry) {     //// „ÉÄ„Ç§„Ç¢„É≠„Ç∞ÁîªÈù¢ÔºàÂà•ÁîªÈù¢„Å´Ë°®Á§∫Ôºâ ‚ÄªViewModel„Å´IDialogAwareÂÆüË£Ö„ÅåÂøÖË¶Å     containerRegistry.RegisterDialog<SampleTableEditView, SampleTableEditViewModel>();  } ```  containerRegistry.RegisterDialog„Å´Ë®≠ÂÆö„Åó„ÅüView„Åå„ÉÄ„Ç§„Ç¢„É≠„Ç∞Ë°®Á§∫ÂèØËÉΩ„Å®„Å™„Çä„Åæ„Åô„ÄÇ "},"_id":"blog/27-dialog-wpf-prism-cs.mdx","_raw":{"sourceFilePath":"blog/27-dialog-wpf-prism-cs.mdx","sourceFileName":"27-dialog-wpf-prism-cs.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/27-dialog-wpf-prism-cs"},"type":"Post","slug":"/blog/27-dialog-wpf-prism-cs","slugAsParams":"27-dialog-wpf-prism-cs"},{"title":"C# | WPF Prism DataGrid „Éâ„É©„ÉÉ„Ç∞&„Éâ„É≠„ÉÉ„Éó„Åß‰∏¶„Å≥Êõø„Åà","description":"C# WPF „Åß„ÄÅ DataGrid „ÅÆ„É¨„Ç≥„Éº„Éâ„Çí„Éâ„É©„ÉÉ„Ç∞&„Éâ„É≠„ÉÉ„Éó„Åß‰∏¶„Å≥Êõø„Åà„ÇãÂá¶ÁêÜ","date":"2023-03-02T00:00:00.000Z","emoji":"ü•Ñ","tags":["csharp"],"published":true,"body":{"raw":" C#„ÅÆ **WPF** „Åß„ÄÅDataGrid„ÅÆ„É¨„Ç≥„Éº„Éâ„Çí„Éâ„É©„ÉÉ„Ç∞&„Éâ„É≠„ÉÉ„Éó„Åß‰∏¶„Å≥Êõø„Åà„ÇãÂá¶ÁêÜ„ÇíË™¨Êòé„Åó„Åæ„Åô„ÄÇ  ![image](/blog/29/1.gif)  ## ÂØæË±°„Éï„Ç°„Ç§„É´Ôºà‰æãÔºâ  „Ç≥„Éº„Éá„Ç£„É≥„Ç∞„ÅåÂøÖË¶Å„Å™„Éï„Ç°„Ç§„É´„ÅØ‰∏ãË®ò„ÅÆ **AÔΩûB** „Åß„Åô„ÄÇ  ```text Services/  |-BindingDragDropRowBehavior.cs ÔΩ•ÔΩ•ÔΩ•A  Views/  |-SampleView.xaml ÔΩ•ÔΩ•ÔΩ•B ```  ## BindingDragDropRowBehavior.cs ÔΩ•ÔΩ•ÔΩ•A  ### ‚ë†DataGrip„ÅÆË°å„Çí„Éâ„É©„ÉÉ„Ç∞&„Éâ„É≠„ÉÉ„Éó„Åô„Çã„Éì„Éò„Ç§„Éì„Ç¢„ÇíÊ∫ñÂÇô  DataGrip„ÅÆË°å„Çí„Éâ„É©„ÉÉ„Ç∞&„Éâ„É≠„ÉÉ„Éó„Åô„Çã„Éì„Éò„Ç§„Éì„Ç¢„ÇíÊ∫ñÂÇô„Åó„Åæ„Åô„ÄÇ„Ç≥„Éº„Éâ„ÅØ‰∏ãË®ò„Å®„Å™„Çä„Åæ„Åô„ÄÇ   namespaece „ÅØ„ÄÅÈÅ©ÂÆúÂ§âÊõ¥„Åó„Å¶‰∏ã„Åï„ÅÑ„ÄÇ  ‚ñºBindingDragDropRowBehavior.cs ```cs using System; using System.Windows; using System.Windows.Controls; using System.Windows.Controls.Primitives; using System.Windows.Input; using System.Collections; using System.Windows.Data; using System.Windows.Media;  namespace Template2.WPF.Services {     /// <summary>     /// DataGrid„ÅÆË°å„Çí„Éâ„É©„ÉÉ„Ç∞&„Éâ„É≠„ÉÉ„Éó„Åß‰∏¶„Å≥Â§â„Åà„Çã„Éì„Éò„Ç§„Éì„Ç¢     /// Ë§áÈõë„Å™DataGridÊßãÈÄ†„Å´„ÅØÂØæÂøú„Åó„Å¶„ÅÑ„Å™„ÅÑ„Åü„ÇÅÊ≥®ÊÑè     ///     /// „ÄÄÂà©Áî®ÂèØËÉΩ„Å™DataGrid„ÅÆ‰æã     /// „ÄÄ„ÉªËá™ÂãïÂàóÁîüÊàê„ÅÆ„Åø     /// „ÄÄ„ÉªDataGridTextColumn„ÅÆ„Åø     /// </summary>     public static class BindingDragDropRowBehavior     {         private static DataGrid dataGrid;          private static Popup popup;          private static bool enable;          private static object draggedItem;          public static object DraggedItem         {             get { return BindingDragDropRowBehavior.draggedItem; }             set { BindingDragDropRowBehavior.draggedItem = value; }         }          public static Popup GetPopupControl(DependencyObject obj)         {             return (Popup)obj.GetValue(PopupControlProperty);         }          public static void SetPopupControl(DependencyObject obj, Popup value)         {             obj.SetValue(PopupControlProperty, value);         }          // Using a DependencyProperty as the backing store for PopupControl.  This enables animation, styling, binding, etc...         public static readonly DependencyProperty PopupControlProperty =             DependencyProperty.RegisterAttached(\"PopupControl\", typeof(Popup), typeof(BindingDragDropRowBehavior), new UIPropertyMetadata(null, OnPopupControlChanged));          private static void OnPopupControlChanged(DependencyObject depObject, DependencyPropertyChangedEventArgs e)         {             if (e.NewValue == null || !(e.NewValue is Popup))             {                 throw new ArgumentException(\"Popup Control should be set\", \"PopupControl\");             }             popup = e.NewValue as Popup;              dataGrid = depObject as DataGrid;             // Check if DataGrid             if (dataGrid == null)                 return;               if (enable && popup != null)             {                 dataGrid.BeginningEdit += new EventHandler<DataGridBeginningEditEventArgs>(OnBeginEdit);                 dataGrid.CellEditEnding += new EventHandler<DataGridCellEditEndingEventArgs>(OnEndEdit);                 dataGrid.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(OnMouseLeftButtonUp);                 dataGrid.PreviewMouseLeftButtonDown += new MouseButtonEventHandler(OnMouseLeftButtonDown);                 dataGrid.MouseMove += new MouseEventHandler(OnMouseMove);             }             else             {                 dataGrid.BeginningEdit -= new EventHandler<DataGridBeginningEditEventArgs>(OnBeginEdit);                 dataGrid.CellEditEnding -= new EventHandler<DataGridCellEditEndingEventArgs>(OnEndEdit);                 dataGrid.MouseLeftButtonUp -= new System.Windows.Input.MouseButtonEventHandler(OnMouseLeftButtonUp);                 dataGrid.MouseLeftButtonDown -= new MouseButtonEventHandler(OnMouseLeftButtonDown);                 dataGrid.MouseMove -= new MouseEventHandler(OnMouseMove);                  dataGrid = null;                 popup = null;                 draggedItem = null;                 IsEditing = false;                 IsDragging = false;             }         }          public static bool GetEnabled(DependencyObject obj)         {             return (bool)obj.GetValue(EnabledProperty);         }          public static void SetEnabled(DependencyObject obj, bool value)         {             obj.SetValue(EnabledProperty, value);         }          // Using a DependencyProperty as the backing store for Enabled.  This enables animation, styling, binding, etc...         public static readonly DependencyProperty EnabledProperty =             DependencyProperty.RegisterAttached(\"Enabled\", typeof(bool), typeof(BindingDragDropRowBehavior), new UIPropertyMetadata(false, OnEnabledChanged));          private static void OnEnabledChanged(DependencyObject depObject, DependencyPropertyChangedEventArgs e)         {             //Check if value is a Boolean Type             if (e.NewValue is bool == false)                 throw new ArgumentException(\"Value should be of bool type\", \"Enabled\");              enable = (bool)e.NewValue;          }          public static bool IsEditing { get; set; }          public static bool IsDragging { get; set; }          private static void OnBeginEdit(object sender, DataGridBeginningEditEventArgs e)         {             IsEditing = true;             //in case we are in the middle of a drag/drop operation, cancel it...             if (IsDragging) ResetDragDrop();         }          private static void OnEndEdit(object sender, DataGridCellEditEndingEventArgs e)         {             IsEditing = false;         }           /// <summary>         /// Initiates a drag action if the grid is not in edit mode.         /// </summary>         private static void OnMouseLeftButtonDown(object sender, MouseButtonEventArgs e)         {             if (IsEditing) return;              var row = UIHelpers.TryFindFromPoint<DataGridRow>((UIElement)sender, e.GetPosition(dataGrid));             if (row == null || row.IsEditing) return;              //set flag that indicates we're capturing mouse movements             IsDragging = true;             DraggedItem = row.Item;         }          /// <summary>         /// Completes a drag/drop operation.         /// </summary>         private static void OnMouseLeftButtonUp(object sender, MouseButtonEventArgs e)         {             if (!IsDragging || IsEditing)             {                 return;             }              //get the target item             var targetItem = dataGrid.SelectedItem;              if (targetItem == null || !ReferenceEquals(DraggedItem, targetItem))             {                 //get target index                 var targetIndex = ((dataGrid).ItemsSource as IList).IndexOf(targetItem);                  //remove the source from the list                 ((dataGrid).ItemsSource as IList).Remove(DraggedItem);                  //move source at the target's location                 ((dataGrid).ItemsSource as IList).Insert(targetIndex, DraggedItem);                  //select the dropped item                 dataGrid.SelectedItem = DraggedItem;             }              //reset             ResetDragDrop();         }          /// <summary>         /// Closes the popup and resets the         /// grid to read-enabled mode.         /// </summary>         private static void ResetDragDrop()         {             IsDragging = false;             popup.IsOpen = false;             dataGrid.IsReadOnly = false;         }          /// <summary>         /// Updates the popup's position in case of a drag/drop operation.         /// </summary>         private static void OnMouseMove(object sender, MouseEventArgs e)         {             if (!IsDragging || e.LeftButton != MouseButtonState.Pressed) return;              popup.DataContext = DraggedItem;             //display the popup if it hasn't been opened yet             if (!popup.IsOpen)             {                 //switch to read-only mode                 dataGrid.IsReadOnly = true;                  //make sure the popup is visible                 popup.IsOpen = true;             }               Size popupSize = new Size(popup.ActualWidth, popup.ActualHeight);             popup.PlacementRectangle = new Rect(e.GetPosition(dataGrid), popupSize);              //make sure the row under the grid is being selected             Point position = e.GetPosition(dataGrid);             var row = UIHelpers.TryFindFromPoint<DataGridRow>(dataGrid, position);             if (row != null) dataGrid.SelectedItem = row.Item;         }     }     public static class UIHelpers     {          #region find parent          /// <summary>         /// Finds a parent of a given item on the visual tree.         /// </summary>         /// <typeparam name=\"T\">The type of the queried item.</typeparam>         /// <param name=\"child\">A direct or indirect child of the         /// queried item.</param>         /// <returns>The first parent item that matches the submitted         /// type parameter. If not matching item can be found, a null         /// reference is being returned.</returns>         public static T TryFindParent<T>(DependencyObject child)           where T : DependencyObject         {             //get parent item             DependencyObject parentObject = GetParentObject(child);              //we've reached the end of the tree             if (parentObject == null) return null;              //check if the parent matches the type we're looking for             T parent = parentObject as T;             if (parent != null)             {                 return parent;             }             else             {                 //use recursion to proceed with next level                 return TryFindParent<T>(parentObject);             }         }           /// <summary>         /// This method is an alternative to WPF's         /// <see cref=\"VisualTreeHelper.GetParent\"/> method, which also         /// supports content elements. Do note, that for content element,         /// this method falls back to the logical tree of the element.         /// </summary>         /// <param name=\"child\">The item to be processed.</param>         /// <returns>The submitted item's parent, if available. Otherwise         /// null.</returns>         public static DependencyObject GetParentObject(DependencyObject child)         {             if (child == null) return null;             ContentElement contentElement = child as ContentElement;              if (contentElement != null)             {                 DependencyObject parent = ContentOperations.GetParent(contentElement);                 if (parent != null) return parent;                  FrameworkContentElement fce = contentElement as FrameworkContentElement;                 return fce != null ? fce.Parent : null;             }              //if it's not a ContentElement, rely on VisualTreeHelper             return VisualTreeHelper.GetParent(child);         }          #endregion           #region update binding sources          /// <summary>         /// Recursively processes a given dependency object and all its         /// children, and updates sources of all objects that use a         /// binding expression on a given property.         /// </summary>         /// <param name=\"obj\">The dependency object that marks a starting         /// point. This could be a dialog window or a panel control that         /// hosts bound controls.</param>         /// <param name=\"properties\">The properties to be updated if         /// <paramref name=\"obj\"/> or one of its childs provide it along         /// with a binding expression.</param>         public static void UpdateBindingSources(DependencyObject obj,                                   params DependencyProperty[] properties)         {             foreach (DependencyProperty depProperty in properties)             {                 //check whether the submitted object provides a bound property                 //that matches the property parameters                 BindingExpression be = BindingOperations.GetBindingExpression(obj, depProperty);                 if (be != null) be.UpdateSource();             }              int count = VisualTreeHelper.GetChildrenCount(obj);             for (int i = 0; i < count; i++)             {                 //process child items recursively                 DependencyObject childObject = VisualTreeHelper.GetChild(obj, i);                 UpdateBindingSources(childObject, properties);             }         }          #endregion           /// <summary>         /// Tries to locate a given item within the visual tree,         /// starting with the dependency object at a given position.          /// </summary>         /// <typeparam name=\"T\">The type of the element to be found         /// on the visual tree of the element at the given location.</typeparam>         /// <param name=\"reference\">The main element which is used to perform         /// hit testing.</param>         /// <param name=\"point\">The position to be evaluated on the origin.</param>         public static T TryFindFromPoint<T>(UIElement reference, Point point)           where T : DependencyObject         {             DependencyObject element = reference.InputHitTest(point)                                          as DependencyObject;             if (element == null) return null;             else if (element is T) return (T)element;             else return TryFindParent<T>(element);         }     } } ```  ## SampleView.xaml ÔΩ•ÔΩ•ÔΩ•B  ### ‚ë°View„Å´„ÄÅBindingDragDropRowBehavior„ÅÆÂèÇÁÖß„ÇíËøΩÂä†  „Éâ„É©„ÉÉ„Ç∞ÔºÜ„Éâ„É≠„ÉÉ„Éó„Åß‰∏¶„Å≥Êõø„Åà„Çí„Åó„Åü„ÅÑDataGrid„Å´„ÄÅ BindingDragDropBehavior „ÇíË®≠ÂÆö„Åó„Åæ„Åô„ÄÇ  „Åù„ÅÆ„Åü„ÇÅ„Å´„ÄÅ„Åæ„Åö„ÅØViewÔºàxamlÔºâ„Åã„Çâ BindingDragDropRowBehaviorÔºàÊ≠£Âºè„Å´„ÅØnamespaceÔºâ„ÇíÂèÇÁÖßÂèØËÉΩ„Å®„Åô„ÇãË®≠ÂÆö„ÇíËøΩÂä†„Åó„Åæ„Åô„ÄÇ  **`xmlns:services=\"clr-namespace:Template2.WPF.Services\"`**  ‚ñºSampleView.xamlÔºàSampleView„ÅåUserControl„ÅÆÂ†¥ÂêàÔºâ ```xml <UserControl x:Class=\"Template2.WPF.Views.SampleView\"              xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"              xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"              xmlns:prism=\"http://prismlibrary.com/\"                           prism:ViewModelLocator.AutoWireViewModel=\"True\"              xmlns:services=\"clr-namespace:Template2.WPF.Services\">     ÔΩ•ÔΩ•ÔΩ• ```  „Åì„Çå„Åß„ÄÅSampleView„Åß„ÅØ„ÄÅservices„Å´Ê†ºÁ¥ç„Åï„Çå„Åü„ÇØ„É©„ÇπÔºàBindingDragDropBehaviorÔºâ„ÅåÂà©Áî®ÂèØËÉΩ„Å®„Å™„Çä„Åæ„Åô„ÄÇ  ### ‚ë¢DataGrid„Å´„ÄÅ BindingDragDropRowBehavior „ÅÆË®≠ÂÆö„ÇíËøΩÂä† Ê¨°„Å´„ÄÅDataGrid„Å´‰∏ãË®ò„Ç≥„Éº„Éâ„ÇíËøΩÂä†„Åó„Åæ„Åô„ÄÇ `services:BindingDragDropRowBehavior`„ÅØ„ÄÅ‰∏äË®ò‚ë°„ÅåË®≠ÂÆöÊ∏à„Åø„Åß„ÅÇ„Çå„Å∞ÂèÇÁÖßÂèØËÉΩ„Åß„Åô„ÄÇ  DataGdid„Å´‰∏ãË®ò„ÅÆ„Éó„É≠„Éë„ÉÜ„Ç£„ÇíËøΩÂä†„Åó„Åæ„Åô„ÄÇ ```xml x:Name=\"WorkerGroupMstEntitiesName\" SelectionMode=\"Single\" services:BindingDragDropRowBehavior.Enabled=\"True\" services:BindingDragDropRowBehavior.PopupControl=\"{Binding ElementName=DraggingPopup}\" AllowDrop=\"True\" ```  ÂÆüÈöõ„ÅÆÂÆüË£Ö‰æã„ÅØ‰∏ãË®ò„Å®„Å™„Çä„Åæ„Åô„ÄÇ  ‚ñºSampleView.xamlÔºàDataGrid„Å∏„ÅÆÂÆüË£Ö‰æãÔºâ ```xml <DataGrid Style=\"{StaticResource commonDataGrid}\"             ItemsSource=\"{Binding WorkerGroupMstEntities}\"             Cursor=\"Hand\"             Margin=\"5\"                          x:Name=\"WorkerGroupMstEntitiesName\"             SelectionMode=\"Single\"             services:BindingDragDropRowBehavior.Enabled=\"True\"             services:BindingDragDropRowBehavior.PopupControl=\"{Binding ElementName=DraggingPopup}\"             AllowDrop=\"True\"> ```  ‰∏äË®ò„Ç≥„Éº„Éâ„ÅÆ`services:BindingDragDropRowBehavior.PopupControl=\"{Binding ElementName=DraggingPopup}`„ÅØ„ÄÅÂæåËø∞„Åô„Çã„Éù„ÉÉ„Éó„Ç¢„ÉÉ„ÉóË°®Á§∫„Å´ÂøÖË¶Å„Å®„Å™„Çä„Åæ„Åô„ÄÇ  ### ‚ë£DataGrid„Éâ„É©„ÉÉ„Ç∞ÔºÜ„Éâ„É≠„ÉÉ„ÉóÊôÇ„ÅÆ„Éù„ÉÉ„Éó„Ç¢„ÉÉ„ÉóË°®Á§∫Ë®≠ÂÆö„ÇíËøΩÂä†  „Éù„ÉÉ„Éó„Ç¢„ÉÉ„Éó„ÅØ„ÄÅ„Éâ„É©„ÉÉ„Ç∞‰∏≠„Å´„É¨„Ç≥„Éº„Éâ„ÅÆ„Éá„Éº„Çø„ÇíË°®Á§∫„Åô„ÇãÊ©üËÉΩ„Åß„Åô„ÄÇ   ÈÅ∏Êäû„ÄÅ„Å§„Åæ„Çä„Éâ„É©„ÉÉ„Ç∞„Åó„Å¶„ÅÑ„Çã„É¨„Ç≥„Éº„Éâ„ÅåÂàÜ„Åã„ÇäÊòì„Åè„Å™„Çä„Åæ„Åô„ÄÇ    ÂÆüË£Ö„Åß„ÅØ„ÄÅ‰∏ãË®ò„ÅÆ„Çà„ÅÜ„Å´ **Popup** „Çí **DataGrid „ÅÆÂ§ñÂÅ¥** „Å´ÈÖçÁΩÆ„Åó„Åæ„Åô„ÄÇ  ‚ñºSampleView.xaml ```xml <!-- DataGrid„Çí„Éâ„É©„ÉÉ„Ç∞ÔºÜ„Éâ„É≠„ÉÉ„Éó„Åó„ÅüÈöõ„ÅÆ„Éù„ÉÉ„Éó„Ç¢„ÉÉ„ÉóË°®Á§∫ --> <Popup  x:Name=\"DraggingPopup\"         AllowsTransparency=\"True\"         IsHitTestVisible=\"False\"         Placement=\"RelativePoint\"         PlacementTarget=\"{Binding ElementName=WorkerGroupMstEntitiesName}\">     <!--  Popup construction Use properties of DraggedObject inside for Binding  -->     <TextBlock Text=\"{Binding Path=WorkerGroupName}\"/> </Popup>  <DataGrid Style=\"{StaticResource commonDataGrid}\"             ItemsSource=\"{Binding WorkerGroupMstEntities}\"             Cursor=\"Hand\"             Margin=\"5\"                          x:Name=\"WorkerGroupMstEntitiesName\"             SelectionMode=\"Single\"             services:BindingDragDropRowBehavior.Enabled=\"True\"             services:BindingDragDropRowBehavior.PopupControl=\"{Binding ElementName=DraggingPopup}\"             AllowDrop=\"True\">      <DataGrid.Columns>         <DataGridTextColumn Header=\"‰ΩúÊ•≠ËÄÖ„Ç∞„É´„Éº„Éó„Ç≥„Éº„Éâ\"                             Binding=\"{Binding WorkerGroupCode}\"                             IsReadOnly=\"True\">         </DataGridTextColumn>         <DataGridTextColumn Header=\"‰ΩúÊ•≠ËÄÖ„Ç∞„É´„Éº„ÉóÂêçÁß∞\"                             Binding=\"{Binding WorkerGroupName}\"                             MinWidth=\"400\"                             IsReadOnly=\"True\">         </DataGridTextColumn>     </DataGrid.Columns>  </DataGrid> ```  Popup „ÅÆ`Name`„ÅØ„ÄÅDataGrid „ÅÆ`PopupControl`„ÅßË®≠ÂÆö„Åó„ÅüÂêçÁß∞„Åß„Åô„ÄÇ  ‚ñº`<Popup>`„ÅÆ‰∏≠   ```xml x:Name=\"**DraggingPopup**\"   ```  „Åå„ÄÅ    ‚ñº`<DataGdid>`„ÅÆ‰∏≠   ```xml services:BindingDragDropRowBehavior.PopupControl=\"{Binding ElementName=**DraggingPopup**}\"   ```  „Å´ÂØæÂøú„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ    „Åæ„Åü„ÄÅ„Éâ„É©„ÉÉ„Ç∞ÊôÇ„Å´PopupË°®Á§∫„Åï„Åõ„Çã„ÉÜ„Ç≠„Çπ„Éà„ÅØ„ÄÅ‰∏ãË®ò„ÅÆÈÉ®ÂàÜ„ÅßË®≠ÂÆö„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ‚ñº`<Popup>`„ÅÆ‰∏≠   ```xml <TextBlock Text=\"{Binding Path=WorkerGroupName}\"/>   ```  ‰∏äË®ò„ÅÆ **Popup „ÉÜ„Ç≠„Çπ„Éà„Éñ„É≠„ÉÉ„ÇØ„ÅÆ Binding Path „ÅßË®≠ÂÆö„Åó„Åü„Éó„É≠„Éë„ÉÜ„Ç£**Ôºà‰∏äË®ò„ÅÆÂ†¥Âêà„ÄÅWorkerGroupNameÔºâ„Åå**„Éâ„É©„ÉÉ„Ç∞ÊôÇ„Å´Ë°®Á§∫**„Åï„Çå„Åæ„Åô„ÄÇ  ‰ª•‰∏ä„Åß„Åô„ÄÇ"},"_id":"blog/29-datagrid-drag-and-drop-to-sort-wpf-cs.mdx","_raw":{"sourceFilePath":"blog/29-datagrid-drag-and-drop-to-sort-wpf-cs.mdx","sourceFileName":"29-datagrid-drag-and-drop-to-sort-wpf-cs.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/29-datagrid-drag-and-drop-to-sort-wpf-cs"},"type":"Post","slug":"/blog/29-datagrid-drag-and-drop-to-sort-wpf-cs","slugAsParams":"29-datagrid-drag-and-drop-to-sort-wpf-cs"},{"title":"Hexo | „Éû„ÉÜ„É™„Ç¢„É´ÔºàmaterialÔºâ„ÉÜ„Éº„Éû„ÅÆÈÅ©Áî®„ÉªË®≠ÂÆöÊñπÊ≥ï","description":"Hexo „Å´ „Éû„ÉÜ„É™„Ç¢„É´„ÉÜ„Éº„Éû„ÇíÈÅ©Áî®„Åô„ÇãÊñπÊ≥ï","date":"2023-03-04T00:00:00.000Z","emoji":"üå∏","tags":["hexo"],"published":true,"body":{"raw":" „Éñ„É≠„Ç∞„ÇíWordpress„Åã„ÇâHexo„Å´Â§âÊõ¥„Åó„ÄÅmaterial „ÉÜ„Éº„Éû„ÇíÈÅ©Áî®„Åó„Åæ„Åó„Åü„ÄÇ   material „ÉÜ„Éº„Éû„ÅØ„ÄÅGogle„ÅåÊé®Â•®„Åó„Å¶„ÅÑ„Çã„Éû„ÉÜ„É™„Ç¢„É´„Éá„Ç∂„Ç§„É≥„Çí„Éô„Éº„Çπ„Å®„Åó„ÅüÁæé„Åó„ÅÑ„Éá„Ç∂„Ç§„É≥„Åß„Åô„ÄÇ    Hexo„ÅØ„ÉÜ„Éº„Éû„ÇíGithub„Åã„Çâ„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åó„Å¶ÂÆüË£Ö„Åó„Åæ„Åô„Åå„ÄÅmaterial „ÉÜ„Éº„Éû„Å´„ÅØ„Éê„Ç∞„ÅåÊÆã„Å£„Å¶„Åä„Çä„ÄÅ„Åù„ÅÆ„Åæ„ÅæÂà©Áî®„Åô„Çã‰∫ã„ÅåÂá∫Êù•„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ  ‰ªäÂõû„ÄÅmaterial „ÉÜ„Éº„ÉûÈÅ©Áî®„Å´ÂøÖË¶Å„Å™‰øÆÊ≠£Áâà„ÅÆ„ÉÜ„Éº„Éû„Éï„Ç°„Ç§„É´Êèê‰æõ„Å®Ë®≠ÂÆöÊâãÈ†Ü„ÇíË®òËºâ„Åó„Å¶„Åä„Åç„Åæ„Åô„ÄÇ  ![image](/blog/30/1.png)  ## ÂâçÊèê - OS:Windows  ## HexoÁí∞Â¢ÉÊßãÁØâ  ### Node.js„Çí„Ç§„É≥„Çπ„Éà„Éº„É´  Hexo„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åô„Çã„Åü„ÇÅ„ÅÆ **npm„Ç≥„Éû„É≥„Éâ** „Çí‰Ωø„Åà„Çã„Çà„ÅÜ„Å´„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ   „Åù„ÅÆ„Åü„ÇÅ„Å´„ÄÅ„Åæ„Åö„ÅØNode.js„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åô„ÄÇ    ‰∏ãË®ò„É™„É≥„ÇØÂÖà„Åã„Çâ **Node.js„Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ** „Åó„Å¶‰∏ã„Åï„ÅÑ„ÄÇ    https://nodejs.org/ja/    Ê¨°„Å´„ÄÅ„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åó„Åü**Windows Installer(.msi)„Çí„ÉÄ„Éñ„É´„ÇØ„É™„ÉÉ„ÇØ„Åó„Å¶„Ç§„É≥„Çπ„Éà„Éº„É´**„Åó„Åæ„Åô„ÄÇ    ### Hexo„Çí„Ç§„É≥„Çπ„Éà„Éº„É´  „Ç≥„Éû„É≥„Éâ„Éó„É≠„É≥„Éó„Éà„Åß‰ª•‰∏ã„ÇíÂÆüË°å„Åó„Åæ„Åô„ÄÇ ```cmd npm install hexo-cli -g ```  „Åì„Çå„Åß„ÄÅ**Hexo„ÅÆ„Ç§„É≥„Çπ„Éà„Éº„É´ÂÆå‰∫Ü**„Åß„Åô„ÄÇ  ### Hexo„ÅÆÁí∞Â¢ÉÊßãÁØâ  HexoÁî®„ÅÆ„Éá„Ç£„É¨„ÇØ„Éà„É™Ôºà„Éï„Ç©„É´„ÉÄÔºâ„ÇíÊ∫ñÂÇô„Åó„Åæ„Åô„ÄÇ   ‰æã„Å®„Åó„Å¶`„ÄåC:\\hexo-blog„Äç`„ÇíHexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™„Å®„Åó„Åæ„Åô„ÄÇ    „Ç≥„Éû„É≥„Éâ„Éó„É≠„É≥„Éó„Éà„Åß`init`„ÇíÂÆüË°å„Åó„ÄÅ„Çµ„Ç§„ÉàÁî®„ÅÆ„Éï„Ç©„É´„ÉÄ„ÇíÁîüÊàê„Åó„Åæ„Åô„ÄÇ ```cmd npx hexo init HexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™  ‰æãÔºâ npx hexo init C:\\hexo-blog ```  `cd HexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™`„ÅßÁßªÂãï„Åó„ÄÅ  ```cmd npm install ```  Hexo„Éñ„É≠„Ç∞Áî®„ÅÆÂêÑÁ®Æ„Éá„Ç£„É¨„ÇØ„Éà„É™„ÅåÁîüÊàê„Åï„Çå„Å¶„ÅÑ„Çå„Å∞ÂÆå‰∫Ü„Åß„Åô„ÄÇ  ## material „ÉÜ„Éº„ÉûÁí∞Â¢ÉÊßãÁØâ  ### material „ÉÜ„Éº„Éû„Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ  [„Ç™„É™„Ç∏„Éä„É´](https://github.com/iblh/hexo-theme-material)„ÅØ„Éê„Ç∞„ÅåÊÆã„Å£„Å¶„ÅÑ„Åæ„Åô„ÅÆ„Åß„ÄÅ‰øÆÊ≠£Áâà„Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åó„Å¶‰∏ã„Åï„ÅÑ„ÄÇ  ‚Üì‰øÆÊ≠£Áâà   [https://github.com/atman-33/hexo-theme-material](https://github.com/atman-33/hexo-theme-material)    Code > Download ZIP „Åßzip„Éï„Ç°„Ç§„É´„Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åó„Åæ„Åô„ÄÇ   ![image](/blog/30/2.png)  „ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„ÅåÂÆå‰∫Ü„Åô„Çå„Å∞„ÄÅzip„ÇíËß£Âáç„Åó„ÄÅ‰∏≠Ë∫´„ÇíHexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™Áõ¥‰∏ã„ÅÆ**themes/material„Éï„Ç©„É´„ÉÄ**„Å´Ê†ºÁ¥ç„Åó„Åæ„Åô„ÄÇ  ```text HexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™\\ |-themes\\    |-material\\       ‚Üë„Åì„ÅÆ‰∏≠„Å´zip„Éï„Ç°„Ç§„É´„ÅÆ‰∏≠Ë∫´„Åå‰øùÂ≠ò„Åï„Çå„Å¶„ÅÑ„Çå„Å∞OK  ```  ![image](/blog/30/3.png)  ### material „ÉÜ„Éº„Éû„ÇíË®≠ÂÆö  Ê¨°„Å´„ÄÅmaterial „ÉÜ„Éº„Éû „ÇíË™≠„ÅøËæº„ÇÄ„Çà„ÅÜ„Å´‰øÆÊ≠£„Åó„Åæ„Åô„ÄÇ   HexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™ÂÜÖ„ÅÆ„Äå_config.yml„Äç„Çí „ÉÜ„Ç≠„Çπ„Éà„Ç®„Éá„Ç£„Çø „ÅßÈñã„Åç„ÄÅtheme „Çí material „Å´Â§âÊõ¥„Åó„Åæ„Åô„ÄÇ    ‚ñºHexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™/_config.yml   ![image](/blog/30/4.png)  „Åì„ÅÆÊôÇÁÇπ„ÅßHexo„Éñ„É≠„Ç∞„Çí„É≠„Éº„Ç´„É´„Çµ„Éº„Éê„Éº„ÅßÁ¢∫Ë™çÂèØËÉΩ„Åß„Åô„ÄÇ   Á¢∫Ë™ç„Åô„Çã„Å´„ÅØ„ÄÅ„Ç≥„Éû„É≥„Éâ„Éó„É≠„É≥„Éó„Éà„Åß‰ª•‰∏ã„ÇíÂÆüË°å„Åó„Åæ„Åô„ÄÇ    ```cmd cd HexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™ hexo server -g ```  „Éñ„É©„Ç¶„Ç∂„ÅßURL„Å´`„Äåhttp://localhost:4000„Äç`„ÇíÂÖ•Âäõ„Åô„Çå„Å∞„ÄÅHexo„Éñ„É≠„Ç∞„ÇíÁ¢∫Ë™ç„Åß„Åç„Åæ„Åô„ÄÇ  ## Hexo/material „ÅÆ config Ë®≠ÂÆö  Hexo Âèä„Å≥ material „ÉÜ„Éº„Éû„ÅØÂàùÊúüË®≠ÂÆö„ÅÆ„Åæ„Åæ„Åß„ÅØÊâ±„ÅÑËæõ„ÅÑ„Åü„ÇÅ„ÄÅË®≠ÂÆö„ÇíÂ§âÊõ¥„Åó„Åæ„Åô„ÄÇ  HexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™ÂÜÖ„Å´„ÅØ„ÄÅ2„Å§„ÅÆ_config.yml„Éï„Ç°„Ç§„É´„ÅåÂ≠òÂú®„Åó„Åæ„Åô„ÄÇ   Ë™¨ÊòéÊôÇ„Å´„Å©„Å°„Çâ„ÅÆ_config.yml„ÇíÁ§∫„Åó„Å¶„ÅÑ„Çã„ÅÆ„ÅãÊòéÁ¢∫„Å´„Åô„Çã„Åü„ÇÅ„ÄÅ„Åì„Åì„Åã„Çâ„ÅØ‰ª•‰∏ã„ÅÆÂêçÁß∞„ÅßË®òËºâ„Åô„Çã‰∫ã„Å®„Åó„Åæ„Åô„ÄÇ   - ‚ë†„É´„Éº„Éà_config.yml - ‚ë°„ÉÜ„Éº„Éû_config.yml  ```text HexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™\\ |-_config.ml„Éª„Éª„Éª‚ë†„É´„Éº„Éà_config.yml |-themes\\    |-material       |-_config.yml„Éª„Éª„Éª‚ë°„ÉÜ„Éº„Éû_config.yml ```  ### Ë®ÄË™ûË®≠ÂÆö  HexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™„Åã„Çâ„ÄÅ„ÉÜ„Ç≠„Çπ„Éà„Ç®„Éá„Ç£„Çø„Åß „É´„Éº„Éà_config.yml „Éï„Ç°„Ç§„É´„ÅÆ language „Éó„É≠„Éë„ÉÜ„Ç£„ÇíË®≠ÂÆö„Åó„Åæ„Åô„ÄÇ  ‚ñº„É´„Éº„Éà_config.yml   ![image](/blog/30/5.png)  language „Çí ja „Å´„Åó„Å¶„ÄÅÊó•Êú¨Ë™û„Å´„Åó„Åæ„Åô„ÄÇ  ### Ë®ò‰∫ã„Å´ÂØæÂøú„Åó„ÅüÁîªÂÉè‰øùÂ≠òÁî®„Éï„Ç©„É´„ÉÄ  „É´„Éº„Éà_config.yml „ÅÆ post_asset_folder „ÅÆÂÄ§„ÇíÂ§âÊõ¥„Åó„Å¶„Åä„Åç„Åæ„Åô„ÄÇ  `post_asset_folder: `**`true`**  post_asset_folder „ÅÆÂÄ§„Çí true „Å´„Åô„Çã„Å®„ÄÅ_post„Éï„Ç©„É´„ÉÄÁõ¥‰∏ã„Å´Êñ∞Ë¶èË®ò‰∫ã‰ΩúÊàêÊôÇ„Å´Ë®ò‰∫ã„Å´ÂØæÂøú„Åó„Åü„Éï„Ç©„É´„ÉÄ„ÅåËá™ÂãïÁöÑ„Å´ÁîüÊàê„Åï„Çå„Åæ„Åô„ÄÇ   Ë®ò‰∫ã„Åß‰ΩøÁî®„Åô„ÇãÁîªÂÉè„Çí„ÄÅ„Åù„ÅÆ„Éï„Ç©„É´„ÉÄ„Å´‰øùÂ≠ò„Åó„Å¶„Åä„Åë„Å∞„ÄÅË®ò‰∫ã‰∏≠„Å´ÂèÇÁÖß„Åô„Çã‰∫ã„ÅåÂèØËÉΩ„Åß„Åô„ÄÇ    ‚ñºË®ò‰∫ãÂÜÖ„Åßasset„Éï„Ç©„É´„ÉÄ„ÅÆÁîªÂÉè„ÇíË™≠„ÅøËæº„ÇÄÂ†¥Âêà„ÅÆË®òËø∞   ```yml {% asset_img ÁîªÂÉè„Éï„Ç°„Ç§„É´Âêç.jpg %} ```  ### „Éñ„É≠„Ç∞„ÅÆ„Ç¢„Ç§„Ç≥„É≥„ÉªÁîªÂÉè  „Åì„Åì„Åã„Çâ„ÅØ„ÄÅ„ÉÜ„Éº„Éû_configy.yml„ÇíË®≠ÂÆö„Åó„Å¶„ÅÑ„Åç„Åæ„Åô„ÄÇ   „Éñ„É≠„Ç∞„ÅÆ„Ç¢„Ç§„Ç≥„É≥„ÇÑÁîªÂÉè„ÅØ‰ª•‰∏ã„ÅÆÈÉ®ÂàÜ„ÅßË®≠ÂÆö„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ    ‚ñº„ÉÜ„Éº„Éû_config.yml   ![image](/blog/30/6.png)  ‚ñº„ÉÜ„Éº„Éû_config.yml   ![image](/blog/30/7.png)  ÂèÇÁÖßÂÖÉ„ÅÆÁîªÂÉè„Éï„Ç°„Ç§„É´ÁΩÆÂ†¥„ÅØ‰∏ãË®ò„Å´„ÅÇ„Çä„Åæ„Åô„ÅÆ„Åß„ÄÅÂøÖË¶Å„Å´Âøú„Åò„Å¶‰øÆÊ≠£„Åó„Åæ„Åô„ÄÇ   **`HexoÁî®\\themes\\material\\source\\img`**    ### SEO„ÇíÊúÄÈÅ©Âåñ „Åì„ÅÆË®≠ÂÆö„ÇíÊúâÂäπ„Å´„Åô„Çã„Å®„ÄÅÊßãÈÄ†Âåñ„Éá„Éº„Çø„Åå„Éö„Éº„Ç∏„ÅÆ„Éò„ÉÉ„ÉÄ„Éº„Å´ÁîüÊàê„Åï„Çå„ÄÅGoogle „Å™„Å©„ÅÆÊ§úÁ¥¢„Ç®„É≥„Ç∏„É≥„ÅÆ SEO „ÇíÊîπÂñÑ„Åô„Çã„ÅÆ„Å´ÂΩπÁ´ã„Å°„Åæ„Åô„ÄÇ   „Åü„Å†„Åó„ÄÅ`hexo g` „Å´ ÂïèÈ°å„Åå„ÅÇ„ÇãÂ†¥Âêà„ÅØ `false` „Å´Ë®≠ÂÆö„Åó„Å¶„Åø„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ    ‚ñº„ÉÜ„Éº„Éû_config.yml   ![image](/blog/30/8.png)  ### „Çπ„É≠„Éº„Ç¨„É≥„Å®ËÉåÊôØËâ≤  „Çπ„É≠„Éº„Ç¨„É≥Ôºà„Éà„ÉÉ„Éó„Éö„Éº„Ç∏„ÅÆÊ¶ÇË¶ÅÊñáÔºâ„Å®ËÉåÊôØËâ≤„ÅØ‰∏ãË®ò„Åã„ÇâË®≠ÂÆö„Åó„Åæ„Åô„ÄÇ  ‚ñº„ÉÜ„Éº„Éû_config.yml   ![image](/blog/30/9.png)  ### „Éö„Éº„Ç∏„ÅÆJavaScript„Ç®„Éï„Çß„ÇØ„Éà  ‚ñº„ÉÜ„Éº„Éû_config.yml   ![image](/blog/30/10.png)  ### ÊäïÁ®ø„Éö„Éº„Ç∏Ë¶ÅÊó®„ÅÆÂçòË™ûÊï∞  ‚ñº„ÉÜ„Éº„Éû_config.yml   ![image](/blog/30/11.png)  ### ÊäïÁ®ø„Éö„Éº„Ç∏„ÅÆ„Çµ„É†„Éç„Ç§„É´  material „ÉÜ„Éº„Éû„ÅØ 19 Êûö„ÅÆ„Ç∑„É≥„Éó„É´„Å™ÁîªÂÉè„ÅåÊ∫ñÂÇô„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇÊäïÁ®ø„Éö„Éº„Ç∏„Å´„Çµ„É†„Éç„Ç§„É´„ÅåÂÆöÁæ©„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑÂ†¥Âêà„ÄÅ„ÉÜ„Éº„Éû„ÅØ„É©„É≥„ÉÄ„É†„Éï„Ç©„É´„ÉÄÔºà„Éá„Ç£„É¨„ÇØ„Éà„É™\\themes\\material\\source\\img\\randomÔºâ„Åã„Çâ„É©„É≥„ÉÄ„É†„Å´ÂÜôÁúü„ÇíÈÅ∏Êäû„Åó„Åæ„Åô„ÄÇ    „É©„É≥„ÉÄ„É†„Å´Ë°®Á§∫„Åô„ÇãÁîªÂÉèÊï∞„ÅØ‰∏ãË®ò„Åã„ÇâË®≠ÂÆö„Åó„Åæ„Åô„ÄÇ  ‚ñº„ÉÜ„Éº„Éû_config.yml   ![image](/blog/30/12.png)  ÊäïÁ®ø„Éö„Éº„Ç∏„Å´„Çµ„É†„Éç„Ç§„É´„ÇíË®≠ÂÆö„Åô„ÇãÂ†¥Âêà„ÅØ„ÄÅÊäïÁ®ø„Éö„Éº„Ç∏„ÅÆmd„Éï„Ç°„Ç§„É´„ÅÆ‰∏äÈÉ®„Å´**thumbnail**„ÇíË®≠ÂÆö„Åô„Çå„Å∞OK„Åß„Åô„ÄÇ   „Çµ„É≥„Éó„É´„ÅØ‰∏ãË®ò„Å®„Å™„Çä„Åæ„Åô„ÄÇ    ‚ñºÊäïÁ®ø„Éö„Éº„Ç∏„ÅÆ„Éï„Ç°„Ç§„É´.md   ![image](/blog/30/13.png)  ‰∏äË®ò„ÅÆ‰æã„Åß„ÅØ„ÄÅ„ÄåHexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™\\themes\\material\\source\\img\\thumbnails„Äç„Éï„Ç©„É´„ÉÄ„Çí‰ΩúÊàê„Åó„ÄÅ„Åù„Åì„Å´‰øùÂ≠ò„Åó„Åü„Éï„Ç°„Ç§„É´„Çí„Çµ„É†„Éç„Ç§„É´„Å®„Åó„Å¶Âà©Áî®„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ### „Éï„Ç©„É≥„Éà  „Éï„Ç©„É≥„Éà„ÅØ„ÄÅÂàùÊúüË®≠ÂÆö„Å†„Å®Êó•Êú¨Ë™û„ÅÆË¶ãÊ†Ñ„Åà„ÅåËâØ„Åè„Å™„Åã„Å£„Åü„Åü„ÇÅ„ÄÅ‰∏ãË®ò„ÅÆ„Çà„ÅÜ„Å´Â§âÊõ¥„Åó„Åæ„Åó„Åü„ÄÇ  ‚ñº„ÉÜ„Éº„Éû_config.yml   ![image](/blog/30/14.png)  ### „Ç≥„Éº„Éâ„Éñ„É≠„ÉÉ„ÇØ„ÅÆÂº∑Ë™øË°®Á§∫  material „ÉÜ„Éº„Éû„ÅØ„ÄÅ2 Á®ÆÈ°û„ÅÆ„Ç≥„Éº„Éâ„ÅÆÂº∑Ë™øË°®Á§∫„ÇíÊèê‰æõ„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ   - prettify - hanabi  ‰∏äË®ò„ÇíÊúâÂäπ„Å´„Åô„Çã„Å´„ÅØ„ÄÅ„É´„Éº„Éà_config.yml ÂÜÖ„ÅÆ„Ç≥„Éº„Éâ„ÅÆÂº∑Ë™øË°®Á§∫„Çí„Ç™„Éï„Å´„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ   Ôºà„Åù„ÅÜ„Åó„Å™„Åë„Çå„Å∞Á´∂Âêà„Åó„Å¶„Åó„Åæ„ÅÑ„Åæ„Åô„ÄÇÔºâ  ‰ª•‰∏ã„ÅØ„ÄÅhabani „ÅÆË®≠ÂÆö‰æã„Åß„Åô„ÄÇ  ‚ñº„É´„Éº„Éà_config.yml   ![image](/blog/30/15.png)  ‚ñº„ÉÜ„Éº„Éû_config.yml   ![image](/blog/30/16.png)  hanabi Ë°®Á§∫ÂäπÊûú„ÅÆ„Çµ„É≥„Éó„É´„ÇíËºâ„Åõ„Å¶„Åç„Åæ„Åô„ÄÇ   ![image](/blog/30/17.png)  ### SNSË®≠ÂÆö  ÂøÖË¶ÅÁÑ°„ÅÑ„É™„É≥„ÇØ„ÅØÁ©∫ÁôΩ„ÅßOK„Åß„Åô„ÄÇ  ‚ñº„ÉÜ„Éº„Éû_config.yml   ![image](/blog/30/18.png)  ### „Çµ„Ç§„Éâ„Éê„ÉºË®≠ÂÆö  „Çµ„Ç§„Éâ„Éê„Éº„Çí„Ç´„Çπ„Çø„Éû„Ç§„Ç∫„Åó„Åæ„Åô„ÄÇ  ‚ñº„ÉÜ„Éº„Éû_config.yml   ![image](/blog/30/19.png)  „Åì„ÅÆË®≠ÂÆö„ÅÆÂ†¥Âêà„ÄÅ‰∏ãË®ò„ÅÆ„Çà„ÅÜ„Å´Ë°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ  ![image](/blog/30/20.png)  „Ç¢„Ç§„Ç≥„É≥„ÅØ„ÄÅ**Google „ÅÆ Material Icon** „ÇíÂà©Áî®„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ   „ÄÄ‚Üì   [https://fonts.google.com/icons?icon.set=Material+Icons](https://fonts.google.com/icons?icon.set=Material+Icons)  Âà©Áî®„Åó„Åü„ÅÑ„Ç¢„Ç§„Ç≥„É≥„ÇíË¶ã„Å§„Åë„Å¶„ÄÅ„Çµ„Ç§„Éâ„Éê„Éº„ÅÆ„Äåicon: **„Ç≥„Ç≥**„Äç„Å´Ë®≠ÂÆö„Åó„Å¶‰∏ã„Åï„ÅÑ„ÄÇ  **‚ÄªGoogle „ÅÆ material icon „ÅåÂÖ®„Å¶Âà©Áî®„Åß„Åç„Çã„Çè„Åë„Åß„ÅØ„Å™„Åè„ÄÅË°®Á§∫„ÅåÂèçÊò†„Åï„Çå„Å™„ÅÑ„Ç¢„Ç§„Ç≥„É≥„ÇÇ„ÅÇ„Çä„Åæ„Åô**„ÅÆ„Åß„ÅîÊ≥®ÊÑè‰∏ã„Åï„ÅÑ„ÄÇÁêÜÁî±„ÅØ‰∏çÊòé„Åß„Åô„ÄÇ    „Çµ„Ç§„Éâ„Éê„Éº„ÅÆ„Äå„Çø„Ç∞„Äç„Éª„Äå„É™„É≥„ÇØ„Äç„Éª„ÄåÂïè„ÅÑÂêà„Çè„Åõ„Äç„ÅØÂ∞ÇÁî®„ÅÆ„Éö„Éº„Ç∏„Çí‰ΩúÊàê„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇÊñπÊ≥ï„ÅØÂæåËø∞„Åó„Åæ„Åô„ÄÇ  ### „Çø„Ç∞„Éö„Éº„Ç∏‰ΩúÊàê  ‚ñº„ÉÜ„Éº„Éû_config.yml   ![image](/blog/30/21.png)  „Ç≥„Éû„É≥„Éâ„Éó„É≠„É≥„Éó„Éà„ÇíÈñã„Åç„ÄÅHexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™„Å´ÁßªÂãï„Åó„Å¶„ÄÅ‰ª•‰∏ã„ÅÆ„Çà„ÅÜ„Å´ÂÖ•Âäõ„Åó„Åæ„Åô„ÄÇ  ‚ñº„Ç≥„Éû„É≥„Éâ„Éó„É≠„É≥„Éó„Éà ```cmd cd HexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™ hexo new page \"tags\" ```  `HexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™\\source\\tags` „Éï„Ç©„É´„ÉÄÂÜÖ„ÅÆ `index.md` „Éï„Ç°„Ç§„É´„Çí„ÄÅ‰ª•‰∏ã„ÅÆ„Çà„ÅÜ„Å´Á∑®ÈõÜ„Åó„Åæ„Åô„ÄÇ    ‚ñºHexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™\\source\\tags\\index.md  ```md --- title: tags date: 2023-02-26 15:50:54 layout: tags --- ```  **`layout: tags` „ÅåÂøÖÈ†à**„Åß„Åô„ÄÇ    ### „É™„É≥„ÇØ„Éö„Éº„Ç∏‰ΩúÊàê  ‚ñº„ÉÜ„Éº„Éû_config.yml   ![image](/blog/30/22.png)  „Ç≥„Éû„É≥„Éâ„Éó„É≠„É≥„Éó„Éà„ÇíÈñã„Åç„ÄÅHexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™„Å´ÁßªÂãï„Åó„Å¶„ÄÅ‰ª•‰∏ã„ÅÆ„Çà„ÅÜ„Å´ÂÖ•Âäõ„Åó„Åæ„Åô„ÄÇ  ‚ñº„Ç≥„Éû„É≥„Éâ„Éó„É≠„É≥„Éó„Éà ```cmd cd HexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™ hexo new page \"links\" ```  `HexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™\\source\\links` „Éï„Ç©„É´„ÉÄÂÜÖ„ÅÆ `index.md` „Éï„Ç°„Ç§„É´„Çí„ÄÅ‰ª•‰∏ã„ÅÆ„Çà„ÅÜ„Å´Á∑®ÈõÜ„Åó„Åæ„Åô„ÄÇ  ‚ñºHexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™\\source\\links\\index.md  ```md --- title: links date: 2023-02-27 18:03:34 layout: links --- ```  **`layout: links` „ÅåÂøÖÈ†à**„Åß„Åô„ÄÇ    „Åæ„Åü„ÄÅ`HexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™\\source` „Éï„Ç©„É´„ÉÄÂÜÖ„Å´„Äå**\\_data**„Äç„Éï„Ç©„É´„ÉÄ „Çí‰ΩúÊàê„Åó„ÄÅ„Åù„ÅÆÁõ¥‰∏ã„Å´„Äå**links.yml**„Äç„Éï„Ç°„Ç§„É´„Çí‰ΩúÊàê„Åó„Å¶Á∑®ÈõÜ„Åó„Åæ„Åô„ÄÇ    Á∑®ÈõÜÂÜÖÂÆπ„ÅÆ„Çµ„É≥„Éó„É´„ÅØ‰∏ãË®ò„Å®„Å™„Çä„Åæ„Åô„ÄÇ„É™„É≥„ÇØ„ÇíË§áÊï∞„Å´Â¢ó„ÇÑ„ÅôÂ†¥Âêà„ÅØ„ÄÅÁ∂ö„Åë„Å¶Ë®òËºâ„Åó„Å¶„ÅÑ„Åë„Å∞OK„Åß„Åô„ÄÇ    ‚ñºHexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™\\source\\\\_data\\links.yml   ```yml Github atman-33:      link: https://github.com/atman-33     avatar: https://avatars.githubusercontent.com/u/41929192?v=4     descr: \"Github „Éà„ÉÉ„Éó„Éö„Éº„Ç∏\"  Google Material Icons:      link: https://fonts.google.com/icons?icon.set=Material+Icons     avatar: https://www.gstatic.com/images/icons/material/apps/fonts/1x/catalog/v5/favicon.svg     descr: \"Google „Éû„ÉÜ„É™„Ç¢„É´„Ç¢„Ç§„Ç≥„É≥\"   ```  ### Âïè„ÅÑÂêà„Çè„Åõ„Éö„Éº„Ç∏‰ΩúÊàê  ‚ñº„ÉÜ„Éº„Éû_config.yml   ![image](/blog/30/23.png)  „Ç≥„Éû„É≥„Éâ„Éó„É≠„É≥„Éó„Éà„ÇíÈñã„Åç„ÄÅHexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™„Å´ÁßªÂãï„Åó„Å¶„ÄÅ‰ª•‰∏ã„ÅÆ„Çà„ÅÜ„Å´ÂÖ•Âäõ„Åó„Åæ„Åô„ÄÇ  ‚ñº„Ç≥„Éû„É≥„Éâ„Éó„É≠„É≥„Éó„Éà ```cmd cd HexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™ hexo new page \"about\" ```  `HexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™\\source\\about` „Éï„Ç©„É´„ÉÄÂÜÖ„ÅÆ `index.md` „Éï„Ç°„Ç§„É´„ÇíÁ∑®ÈõÜ„Åó„Åæ„Åô„ÄÇ    ‚ñºHexoÁî®„Éá„Ç£„É¨„ÇØ„Éà„É™\\source\\about\\index.md    ```md --- title: Âïè„ÅÑÂêà„Çè„Åõ date: 2023-02-27 18:14:12 ---  „ÅîÈñ≤Ë¶ßÈ†Ç„Åç„ÅÇ„Çä„Åå„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„Åô„ÄÇ  Ë≥™Âïè„ÉªË¶ÅÊúõ„Å™„Å©„ÅÇ„Çä„Åæ„Åó„Åü„Çâ„ÄÅTwitter„ÅßÈÄ£Áµ°„Åè„Å†„Åï„ÅÑ„ÄÇ  ‚Äª„Åì„Åì„Å´Twitter„ÅÆURL„Å™„Å©  ```  „Åì„ÅÆ„Éö„Éº„Ç∏„ÅØ„ÄÅÈÄöÂ∏∏„ÅÆÂõ∫ÂÆö„Éö„Éº„Ç∏„Åß„Åô„ÄÇ   „Åù„Åì„Å´Twitter„Å™„Å©„ÅÆURL„ÇíÊé≤Ëºâ„Åô„Çå„Å∞„ÄÅÂïèÂêà„ÅõÂÖà„Å®„Åó„Å¶Âà©Áî®ÂèØËÉΩ„Åß„Åô„ÄÇ    ___  ‰ª•‰∏ä„Åß„Åô„ÄÇ"},"_id":"blog/30-material-theme-hexo.mdx","_raw":{"sourceFilePath":"blog/30-material-theme-hexo.mdx","sourceFileName":"30-material-theme-hexo.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/30-material-theme-hexo"},"type":"Post","slug":"/blog/30-material-theme-hexo","slugAsParams":"30-material-theme-hexo"},{"title":"C# | WPF Prism ÁîªÈù¢ÈÅ∑Áßª„É°„É¢„É™ÈñãÊîæ","description":"C# WPF Prism „ÅÆÁîªÈù¢ÈÅ∑ÁßªÊôÇ„Å´„Åä„Åë„Çã„É°„É¢„É™Ëß£ÊîæÊñπÊ≥ï","date":"2023-03-05T00:00:00.000Z","emoji":"üíª","tags":["csharp"],"published":true,"body":{"raw":" WPF Prism „Åß„ÅØ„ÄÅRegion„Å®„ÅÑ„ÅÜÊ©üËÉΩ„ÅßÁîªÈù¢ÈÅ∑Áßª„Åó„Åæ„Åô„ÄÇ  „Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥„ÅÆÁîªÈù¢ÈÅ∑ÁßªÔºàÁîªÈù¢„ÅÆ‰∏ÄÈÉ®„Åß„ÅÇ„ÇãRegionÈÉ®ÂàÜ„ÅåÂàá„ÇäÊõø„Çè„ÇãÂá¶ÁêÜÔºâ„Åß„ÅØ„ÄÅÈÅ∑ÁßªÂÖà„Å´ INavigaitionAware „Ç§„É≥„Çø„Éº„Éï„Çß„Éº„Çπ„ÇíÂÆüË£Ö„Åó„Åæ„Åô„ÄÇ  „Åù„ÅÆÈöõ„Å´ÁîüÊàê„Åï„Çå„Çã **IsNavigationTarget „É°„ÇΩ„ÉÉ„Éâ**„ÅØ„ÄÅViewModel„Ç§„É≥„Çπ„Çø„É≥„Çπ„Çí‰Ωø„ÅÑÂõû„Åô„Åã„Å©„ÅÜ„Åã„Çí Êàª„ÇäÂÄ§„ÅÆ bool „ÅßÂà§Êñ≠„Åó„Åæ„Åô„Åå„ÄÅ**return false „Å®„Åó„Å¶„ÇÇ„É°„É¢„É™„ÅØÈñãÊîæ„Åï„Çå„Åæ„Åõ„Çì**„ÄÇ  **„ÄêIsNavigationTarget„ÅÆÊàª„ÇäÂÄ§**   - true : „Ç§„É≥„Çπ„Çø„É≥„Çπ„Çí‰Ωø„ÅÑÂõû„Åô„ÄÇÊ¨°Âõû„ÅÆÁîªÈù¢Ëµ∑ÂãïÊôÇ„Å´„Ç≥„É≥„Çπ„Éà„É©„ÇØ„Çø„ÅåÂëº„Å∞„Çå„Å™„ÅÑ„ÄÇ - false: „Ç§„É≥„Çπ„Çø„É≥„Çπ„Çí‰Ωø„ÅÑÂõû„Åï„Å™„ÅÑ„ÄÇÊ¨°Âõû„ÅÆÁîªÈù¢Ëµ∑ÂãïÊôÇ„Å´„Ç≥„É≥„Çπ„Éà„É©„ÇØ„Çø„ÅåÂëº„Å∞„Çå„Çã„ÄÇ„Åü„Å†„Åó„ÄÅ**„É°„É¢„É™„ÅØÈñãÊîæ„Åï„Çå„Å™„ÅÑ**„ÄÇ  ## „Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥ÁîªÈù¢ÈÅ∑ÁßªÊôÇ„Å´„É°„É¢„É™„ÇíÈñãÊîæ„Åô„ÇãÊñπÊ≥ï  ViewModel„Å´**IRegionMemberLifetime„Ç§„É≥„Çø„Éº„Éï„Çß„Éº„Çπ„ÇíÂÆüË£Ö**„Åó„ÄÅ**KeepAlive„Éó„É≠„Éë„ÉÜ„Ç£„ÅÆÂÄ§„Çífalse**„Å´„Åó„Åæ„Åô„ÄÇ  „Åæ„Åü„ÄÅ**INavigationAware„Ç§„É≥„Çø„Éº„Éï„Çß„Éº„Çπ„ÇÇÂêà„Çè„Åõ„Å¶ÂÆüË£Ö**„Åó„Å¶„ÅÑ„ÇãÂ†¥Âêà„ÄÅ**IsNavigationTarget „ÅØ True**„Å´„Åó„Å¶„Åä„Åç„Åæ„Åô„ÄÇ  ViewModel„Å∏„ÅÆÂÆüË£Ö‰æã„Åß„Åô„ÄÇ  ‚ñºSampleViewModel.cs ```cs public class SampleViewModel : BindableBase, INavigationAware, IRegionMemberLifetime {     /// <summary>     /// ViewModelÁ†¥Ê£Ñ„Å´‰º¥„ÅÑ„É°„É¢„É™ÈñãÊîæ„Åô„ÇãÈöõ„ÅØfalse     /// </summary>     public bool KeepAlive { get; set; } = false;      public SampleViewModel()     {     }      public bool IsNavigationTarget(NavigationContext navigationContext)     {         //// RegionMemberLifetime(KeepAlive = false)„ÅßViewModel„ÇíÁ†¥Ê£Ñ„Åô„Çã„Åü„ÇÅ„ÄÅ„Åì„Å°„Çâ„ÅØTrue         return true;     }      public virtual void OnNavigatedFrom(NavigationContext navigationContext)     {     }      public virtual void OnNavigatedTo(NavigationContext navigationContext)     {     } } ```  ‰ª•‰∏ä„Åß„Åô„ÄÇ"},"_id":"blog/32-delete-view-instance-cash-wpf-prism-cs.mdx","_raw":{"sourceFilePath":"blog/32-delete-view-instance-cash-wpf-prism-cs.mdx","sourceFileName":"32-delete-view-instance-cash-wpf-prism-cs.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/32-delete-view-instance-cash-wpf-prism-cs"},"type":"Post","slug":"/blog/32-delete-view-instance-cash-wpf-prism-cs","slugAsParams":"32-delete-view-instance-cash-wpf-prism-cs"},{"title":"C# | Prism Xamarin Forms „ÄåÂèÇÁÖß„Ç¢„Çª„É≥„Éñ„É™„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„Äç ÂØæÂá¶","description":"Visual Studio„Åß„ÄÅPrism„ÅÆ„ÄåXamarin Forms„Äç„ÇíÂà©Áî®ÊôÇ„ÄÅUWP„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆ„Éì„É´„Éâ„ÅåÈÄö„Çâ„Åö„Ç®„É©„Éº„ÅåÁô∫Áîü„Åô„ÇãÈöõ„ÅÆÂØæÂá¶ÊñπÊ≥ï","date":"2023-03-11T00:00:00.000Z","emoji":"üêú","tags":["csharp"],"published":true,"body":{"raw":" Visual Studio„Åß„ÄÅPrism„ÅÆ„ÄåXamarin Forms„Äç„ÇíÂà©Áî®„Åó„Å¶„ÅÑ„ÅüÈöõ„ÄÅUWP„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆ„Éì„É´„Éâ„ÅåÈÄö„Çâ„Å™„Åè„Å¶„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Å¶„ÅÑ„Åæ„Åó„Åü„ÄÇ  ÂØæÂá¶ÊñπÊ≥ï„ÇíÊÆã„Åó„Å¶„Åä„Åç„Åæ„Åô„ÄÇ  ## ÁèæË±°  Áí∞Â¢É„ÅØ‰ª•‰∏ã  - Windows 10 - Visual Studio 2022 - Prism Template Pack „Ç§„É≥„Çπ„Éà„Éº„É´Ê∏à„Åø  „Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏„ÅØ„Åì„Å°„Çâ„Åß„Åô„ÄÇ  ![image](/blog/33/1.png)  > .NETCore,Version=v5.0 „ÅÆÂèÇÁÖß„Ç¢„Çª„É≥„Éñ„É™„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ„Åì„ÅÆÂïèÈ°å„ÇíËß£Ê±∫„Åô„Çã„Å´„ÅØ„ÄÅ„Åì„ÅÆ„Éï„É¨„Éº„É†„ÉØ„Éº„ÇØ „Éê„Éº„Ç∏„Éß„É≥„ÅÆ Developer Pack (SDK/Targeting Pack) „Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åô„Çã„Åã„ÄÅ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆ„Çø„Éº„Ç≤„ÉÉ„Éà„ÇíÂÜçË®≠ÂÆö„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇhttps://aka.ms/msbuild/developerpacks „Åß .NET Framework Developer Pack „Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åß„Åç„Åæ„Åô„ÄÇ   ## ÂØæÂá¶  Visual Studio „Ç§„É≥„Çπ„Éà„Éº„É©„Éº„Åã„Çâ„ÄÅ**„É¶„Éã„Éê„Éº„Çµ„É´ Windows „Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†ÈñãÁô∫„Çí„Ç§„É≥„Çπ„Éà„Éº„É´**„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ  ![image](/blog/33/3.png)  Ê§úË®º„Åß„Åç„Å¶„ÅÑ„Åæ„Åõ„Çì„Åå„ÄÅÂêà„Çè„Åõ„Å¶„Äå.NET „Éû„É´„ÉÅ„Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É† „Ç¢„Éó„É™„ÅÆ UIÈñãÁô∫„Äç„ÇÇÂøÖË¶Å„Åã„ÇÇ„Åó„Çå„Åæ„Åõ„Çì„ÄÇ   Ôºà‰ªäÂõû„ÅÆ„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„ÅüÈöõ„ÄÅ„Éû„É´„ÉÅ„Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†UIÈñãÁô∫„ÅØÊó¢„Å´„Ç§„É≥„Çπ„Éà„Éº„É´Ê∏à„Åø„Å†„Å£„Åü„Åü„ÇÅÔºâ    ‰ª•‰∏ä„Åß„Åô„ÄÇ"},"_id":"blog/33-prism-xamarin-form-uwp-assembly-error-cs.mdx","_raw":{"sourceFilePath":"blog/33-prism-xamarin-form-uwp-assembly-error-cs.mdx","sourceFileName":"33-prism-xamarin-form-uwp-assembly-error-cs.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/33-prism-xamarin-form-uwp-assembly-error-cs"},"type":"Post","slug":"/blog/33-prism-xamarin-form-uwp-assembly-error-cs","slugAsParams":"33-prism-xamarin-form-uwp-assembly-error-cs"},{"title":"Oracle 21c XE ÊßãÁØâÊâãÈ†Ü","description":"Windows PC„Å´„ÄÅ„ÄåOracle Database 21c Express Edition (XE)„Äç„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Å¶Âà©Áî®„Åô„ÇãÊñπÊ≥ï","date":"2023-03-11T00:00:00.000Z","emoji":"üíø","tags":["oracle"],"published":true,"body":{"raw":"Windows PC„Å´„ÄÅ„ÄåOracle Database 21c Express Edition (XE)„Äç„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Å¶Âà©Áî®„Åô„ÇãÊñπÊ≥ï„ÇíË®ò„Åó„Å¶„Åä„Åç„Åæ„Åô„ÄÇ  ## Oracle XE „Å®„ÅØ  ÁâπÂæ¥„ÅØ‰ª•‰∏ã„ÅÆÈÄö„Çä„Åß„Åô„ÄÇ  - ÁÑ°ÂÑü„Åã„Å§Êú¨Áï™Áí∞Â¢É„ÅßOracle Database XE„Çí‰ΩøÁî®ÂèØËÉΩ - ÊúÄÂ§ß12GB„ÅÆ„É¶„Éº„Ç∂„Éº„Éª„Éá„Éº„Çø - ÊúÄÂ§ß2GB„ÅÆ„Éá„Éº„Çø„Éô„Éº„ÇπRAM - ÊúÄÂ§ß2„Å§„ÅÆCPU„Çπ„É¨„ÉÉ„Éâ  ÁßÅ„ÅØ„Ç¢„Éó„É™ÈñãÁô∫Áî®„Åß„ÄÅÂÄã‰∫∫PC„Å´„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ‚ÄªÂÖ¨ÂºèHP„ÅÆOracle XEË™¨Êòé   [Oracle XE Ë™¨Êòé](https://www.oracle.com/jp/database/technologies/appdev/xe.html)    ## ÊâãÈ†Ü  ### 1. „ÉÄ„Ç¶„É≥„É≠„Éº„Éâ  Web„Åã„Çâ„ÄåOracle Database XE„Äç„Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åó„Åæ„Åô„ÄÇ  [Oracle XE „ÉÄ„Ç¶„É≥„É≠„Éº„Éâ](https://www.oracle.com/jp/database/technologies/xe-downloads.html)  ![image](/blog/34/1.png)  „ÄåOracle Database 21c Express Edition for Windows x64„Äç„Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„ÄÅ„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„ÇíÈñãÂßã„Åó„Åæ„Åô„ÄÇ  ### 2. „Ç§„É≥„Çπ„Éà„Éº„É´  „ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åó„Åü„ÄåOracleXE213_Win64.zip„Äç„Éï„Ç°„Ç§„É´„ÇíËß£Âáç„Åó„Åæ„Åô„ÄÇ  Ëß£Âáç„Åó„Å¶‰ΩúÊàê„Åï„Çå„Åü„Éï„Ç©„É´„ÉÄÂÜÖ„ÅÆ„Äåsetup.exe„Äç„Çí**ÁÆ°ÁêÜËÄÖ„Å®„Åó„Å¶**ÂÆüË°å„Åó„Åæ„Åô„ÄÇ  „ÄåÊ¨°„Å∏„Äç„Éú„Çø„É≥Êäº‰∏ã„ÄÅ„Äå‰ΩøÁî®Ë®±Ë´æÊù°È†Ö„ÅÆÂèó„ÅëÂÖ•„Çå„Äç„Å´„ÉÅ„Çß„ÉÉ„ÇØ„ÇíÂÖ•„Çå„Å¶ÈÄ≤„ÇÅ„Åæ„Åô„ÄÇ  ÂÆõÂÖà„Éï„Ç©„É´„ÉÄÁîªÈù¢„Åß„ÄÅ„Ç§„É≥„Çπ„Éà„Éº„É´ÂÖà„ÇíË®≠ÂÆö„Åó„Åæ„Åô„ÄÇÁßÅ„ÅØ‰∏ãË®ò„Å´Â§âÊõ¥„Åó„Åæ„Åó„Åü„ÄÇ  `ÂÆõÂÖà„Éï„Ç©„É´„ÉÄÔºö C:\\oracle\\product\\21c\\`  ‰∏äË®ò„ÅÆÂ†¥Âêà„ÄÅOracleÁí∞Â¢ÉÂ§âÊï∞„ÇÇÂêà„Çè„Åõ„Å¶Â§âÊõ¥„Åï„Çå„Åæ„Åô„ÄÇ  `Oracle„Éõ„Éº„É†Ôºö C:\\oracle\\product\\21c\\dbhomeXE\\` `Oracle„Éô„Éº„ÇπÔºö C:\\oracle\\product\\21c\\`  Oracle DatabaseÊÉÖÂ†±„Åß„ÄÅ„Éá„Éº„Çø„Éô„Éº„Çπ„Éª„Éë„Çπ„ÉØ„Éº„Éâ„ÇíË®≠ÂÆö„Åó„Åæ„Åô„ÄÇ   ÔºàSYS„ÄÅSYSTEM„ÄÅPDBADMIN„Ç¢„Ç´„Ç¶„É≥„Éà„ÅÆ„Éë„Çπ„ÉØ„Éº„ÉâÔºâ  `„Éë„Çπ„ÉØ„Éº„Éâ‰æãÔºâsys`  Ê≠£Â∏∏„Å´„Ç§„É≥„Çπ„Éà„Éº„É´ÂÆå‰∫ÜÂæå„ÄÅDBÈñ¢ÈÄ£ÊÉÖÂ†±„ÅåË°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ  ![image](/blog/34/2.png)  „Åì„Çå„Åß„Ç§„É≥„Çπ„Éà„Éº„É´ÂÆå‰∫Ü„Åß„Åô„ÄÇ  ### 3. „É¶„Éº„Ç∂„Éº‰ΩúÊàê  „Ç≥„Éû„É≥„Éâ„Éó„É≠„É≥„Éó„Éà„ÇÇ„Åó„Åè„ÅØ power shell „Åß‰ª•‰∏ã„ÅÆ„Ç≥„Éû„É≥„Éâ„ÇíÂÆüË°å„Åó„Å¶„ÅÑ„Åç„Åæ„Åô„ÄÇ  Oracle 21c XE„Å´Êé•Á∂ö ```shell sqlplus / as sysdba ```  Êé•Á∂öÂÖà„ÇíÁ¢∫Ë™ç ```sql SQL> show con_name  ‚Üì  CON_NAME ------------------------------ CDB$ROOT ``` „Ç≥„É≥„ÉÜ„Éä„Éá„Éº„Çø„Éô„Éº„ÇπÔºàCDBÔºâ„Å´Êé•Á∂ö„Åï„Çå„Å¶„ÅÑ„Çã„Åü„ÇÅ„ÄÅ„Éó„É©„Ç¨„Éñ„É´„Éá„Éº„Çø„Éô„Éº„ÇπÔºàPDBÔºâ„Å´Êé•Á∂ö„ÇíÂàá„ÇäÊõø„Åà„Åæ„Åô„ÄÇ  Â≠òÂú®„Åô„Çã„Éó„É©„Ç¨„Éñ„É´„Éá„Éº„Çø„Éô„Éº„Çπ„ÇíÁ¢∫Ë™ç„Åó„Åæ„Åô„ÄÇ ```sql SQL> show pdbs  ‚Üì      CON_ID CON_NAME                       OPEN MODE  RESTRICTED ---------- ------------------------------ ---------- ----------          2 PDB$SEED                       READ ONLY  NO          3 XEPDB1                         READ WRITE NO ````  Êó¢„Å´Â≠òÂú®„Åô„Çã„ÄåXEPDB1„Äç„ÇíÂà©Áî®„Åô„Çã‰∫ã„Å®„Åó„Åæ„Åô„ÄÇ  ```sql SQL> ALTER SESSION SET CONTAINER=XEPDB1;  ‚Üì  „Çª„ÉÉ„Ç∑„Éß„É≥„ÅåÂ§âÊõ¥„Åï„Çå„Åæ„Åó„Åü„ÄÇ ```  ```sql SQL> show con_name  ‚Üì  CON_NAME ------------------------------ XEPDB1  ``` „ÄåXEPDB1„Äç„Å´Êé•Á∂ö„Åó„Åæ„Åó„Åü„ÄÇ  Á∂ö„ÅÑ„Å¶„É¶„Éº„Ç∂„Éº„Çí‰ΩúÊàê„Åó„Åæ„Åô„ÄÇ  - „É¶„Éº„Ç∂„Éº: atman - „Éë„Çπ„ÉØ„Éº„Éâ: atman  „Éó„É≠„Éï„Ç°„Ç§„É´„ÅØ„ÄåDEFAULT„Äç„ÇíË®≠ÂÆö„Åó„Å¶„Éë„Çπ„ÉØ„Éº„ÉâÊúüÈôê„ÇíÁÑ°ÊúüÈôê„Å´„Åó„Åæ„Åô„ÄÇ  ```sql SQL >  CREATE USER atman IDENTIFIED BY atman; GRANT CONNECT, RESOURCE TO atman; ALTER USER atman QUOTA UNLIMITED ON users; ALTER PROFILE DEFAULT LIMIT PASSWORD_LIFE_TIME UNLIMITED; ```  „Éó„É≠„Éï„Ç°„Ç§„É´„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åø„Åæ„Åô„ÄÇ ```sql SQL > select username, profile from dba_users where username = 'ATMAN'; ``` „Éó„É≠„Éï„Ç°„Ç§„É´„ÅØ„ÄåDEFAULT„Äç„Å®„Å™„Å£„Å¶„ÅÑ„Åæ„Åó„Åü„ÄÇ  ```sql SQL > SELECT * FROM DBA_PROFILES WHERE RESOURCE_NAME = 'PASSWORD_LIFE_TIME'; ``` „Éó„É≠„Éï„Ç°„Ç§„É´DEFAULT„ÅÆ„Éë„Çπ„ÉØ„Éº„Éâ„ÅåÁÑ°ÊúüÈôê„Å®„Å™„Å£„Å¶„ÅÑ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç„Åó„Åæ„Åô„ÄÇ  „Åì„Çå„Åß„É¶„Éº„Ç∂„Éº‰ΩúÊàê„ÅØÂÆå‰∫Ü„Åß„Åô„ÄÇ  Ë£úË∂≥„Åß„Åô„Åå„ÄÅË°®È†òÂüü„ÅØ‰∏ãË®ò„Å´„Å™„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇ  - Ë°®È†òÂüü: USERS - ‰∏ÄÊôÇË°®È†òÂüü: TEMP  Á¢∫Ë™çÁî®„ÅÆSQL„Åß„Åô„ÄÇ ```sql SELECT username,default_tablespace,temporary_tablespace  FROM DBA_USERS WHERE username='ATMAN'; ```   ### 4. tnsnames.ora Á∑®ÈõÜ  ÊúÄÂæå„Å´„ÄÅ‰ªäÂõûÂà©Áî®„Åó„Åü„Éó„É©„Ç¨„Éñ„É´„Éá„Éº„Çø„Éô„Éº„Çπ„Å´Êé•Á∂ö„Åô„Çã„Åü„ÇÅ„Å´„ÄÅtnsnames.ora„ÇíÁ∑®ÈõÜ„Åó„Åæ„Åô„ÄÇ  ___ >Ë£úË∂≥    >tnsnames.ora „ÅÆ‰øùÂ≠òÂ†¥ÊâÄ„ÇíÁ¢∫Ë™ç„Åô„ÇãÊñπÊ≥ï„Åß„Åô„ÄÇ   > >„Ç≥„Éû„É≥„Éâ„Éó„É≠„É≥„Éó„Éà„ÇíÈñã„ÅÑ„Å¶„ÄÅ**tnsping „Çí„Çè„Åñ„Å®Â§±Êïó**„Åï„Åõ„Åæ„Åô„ÄÇ   >‰æã„Åà„Å∞ `tnsping aaa`„Å®ÂÆüË°å„Åó„Åæ„Åô„ÄÇÔºàaaa„ÅØ‰ªÆ„ÄÇÂ≠òÂú®„Åó„Å™„ÅÑTNSÂêç„Åß„Å™„Åë„Çå„Å∞‰Ωï„Åß„ÇÇOKÔºâ    ```shell C:\\Repos\\computing-atman> tnsping aaa  ‚Üì  TNS Ping Utility for 64-bit Windows: Version 21.0.0.0.0 - Production on 11-3Êúà -2023 22:52:44  Copyright (c) 1997, 2021, Oracle.  All rights reserved.  „Éë„É©„É°„Éº„Çø„Éª„Éï„Ç°„Ç§„É´„Çí‰ΩøÁî®„Åó„Åæ„Åó„Åü: C:\\oracle\\product\\21c\\homes\\OraDB21Home1\\network\\admin\\sqlnet.ora  TNS-03505: ÂêçÂâç„ÅÆËß£Ê±∫„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ ```  ‰∏äË®ò„ÅÆ**sqlnet.ora„Éï„Ç°„Ç§„É´„ÅÆ‰øùÂ≠ò„Éá„Ç£„É¨„ÇØ„Éà„É™„Å´„ÄÅtnsnames.ora„ÇÇ‰øùÂ≠ò**„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ ___  tnsnames.ora„ÅÆÊúÄÂæå„Å´„ÄÅ‰ª•‰∏ã„ÅÆË®òËø∞„ÇíËøΩÂä†„Åó„Åæ„Åô„ÄÇ  ```text XEPDB1= (DESCRIPTION=   (LOAD_BALANCE=off)    (ADDRESS=     (PROTOCOL=tcp)       (HOST=localhost)       (PORT=1521)   )    (CONNECT_DATA=     (SERVICE_NAME=XEPDB1)      (FAILOVER_MODE=       (TYPE=select)        (METHOD=basic)     )   ) ) ```  „Ç≥„Éû„É≥„Éâ„Éó„É≠„É≥„Éó„Éà„Åß„ÄÅtnsping„ÅßÊé•Á∂öÁ¢∫Ë™ç„Åó„Åæ„Åô„ÄÇ ```shell tnsping XEPDB1 ```  OK„Å®Ë°®Á§∫„Åï„Çå„Çå„Å∞„ÄÅÂïèÈ°åÁÑ°„Åó„ÅßÂÆå‰∫Ü„Åß„Åô„ÄÇ  > „ÇÇ„Åó‰∏äË®ò„ÅßÊßãÁØâ„Åó„ÅüOracle„Å´ÂØæ„Åó„Å¶„ÄÅ‰ªñPC„ÇÑ„Éá„Éê„Ç§„Çπ„Åã„ÇâÊé•Á∂ö„Åô„ÇãÂ†¥Âêà„ÅØ„ÄÅWindows FireWall „ÅÆË®≠ÂÆö„ÇíÂ§âÊõ¥„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ > ÊñπÊ≥ï„ÅØ„Ç§„É≥„Çø„Éº„Éç„ÉÉ„Éà„ÇíÊ§úÁ¥¢„Åô„Çå„Å∞ÊâãÈ†Ü„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åô„ÅÆ„Åß„ÄÅ„Åì„Åì„Åß„ÅÆË™¨Êòé„ÅØÂâ≤ÊÑõ„Åó„Åæ„Åô„ÄÇ"},"_id":"blog/34-install-oracle-xe.mdx","_raw":{"sourceFilePath":"blog/34-install-oracle-xe.mdx","sourceFileName":"34-install-oracle-xe.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/34-install-oracle-xe"},"type":"Post","slug":"/blog/34-install-oracle-xe","slugAsParams":"34-install-oracle-xe"},{"title":"C# | Xamarin „Åß Android ÂÆüÊ©ü„Å´Êé•Á∂ö","description":"Visual Studio „ÅÆ Xamarin Forms „Åã„Çâ„ÄÅAndroidÁ´ØÊú´„ÅÆÂÆüÊ©ü„Å´Êé•Á∂ö„Åô„ÇãÊâãÈ†Ü","date":"2023-03-12T00:00:00.000Z","emoji":"üì±","tags":["csharp"],"published":true,"body":{"raw":" Visual Studio „ÅÆ Xamarin Forms „Åã„Çâ„ÄÅAndroidÁ´ØÊú´„ÅÆÂÆüÊ©ü„Å´Êé•Á∂ö„Åô„ÇãÊâãÈ†Ü„ÇíË®ò„Åó„Åæ„Åô„ÄÇ  AndroidÁ´ØÊú´„ÅÆÁ®ÆÈ°û„Å´„ÇÇ‰æù„Çã„Å®ÊÄù„ÅÑ„Åæ„Åô„Åå„ÄÅWeb„Å´Êé≤Ëºâ„Åï„Çå„Å¶„ÅÑ„ÇãÊâãÈ†Ü„Åß‰∏äÊâã„Åè„ÅÑ„Åã„Å™„ÅÑÂ†¥Âêà„Å´ÂèÇËÄÉ„Å´„Åó„Å¶‰∏ã„Åï„ÅÑ„ÄÇ  ## ÊâãÈ†Ü  Áí∞Â¢É„ÅØ‰ª•‰∏ã„Å®„Å™„Çä„Åæ„Åô„ÄÇ  - Visual Studio 2023 - AndroidÁ´ØÊú´ : Galaxy S10 - Android„Éê„Éº„Ç∏„Éß„É≥ : 12 - PC„Å®AndoroidÁ´ØÊú´„ÅØUSBÊé•Á∂ö  ### 1. Xamarin „Éó„É≠„Ç∏„Çß„ÇØ„Éà‰ΩúÊàê  Visual Studio „Åß Xamarin „ÅÆ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Çí‰ΩúÊàê„Åó„Å¶Èñã„Åç„Åæ„Åô„ÄÇ  ### 2. Android SDK Manager„ÇíËµ∑Âãï  „Çø„Éñ„ÅÆ „ÉÑ„Éº„É´ > Android > Android SDK Manager „ÇíËµ∑Âãï„Åó„Åæ„Åô„ÄÇ  ### 3. AndroidÈñ¢ÈÄ£„ÅÆ„ÇΩ„Éï„Éà„Ç¶„Çß„Ç¢„Çí„Ç§„É≥„Çπ„Éà„Éº„É´  Êé•Á∂ö„Åô„ÇãAndroidÁ´ØÊú´„ÅÆAndroi„Éê„Éº„Ç∏„Éß„É≥„Å´ÂØæÂøú„Åó„ÅüSDK Platform„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åô„ÄÇ  Android„Éê„Éº„Ç∏„Éß„É≥12„ÅÆÂ†¥Âêà - „Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É† > Andoroid 12.0 - S > Android SDK Platform 31  „Åæ„Åü„ÄÅAndoroidÁ´ØÊú´„Å®USBÊé•Á∂ö„Åô„Çã„ÅÆ„Åß„Éâ„É©„Ç§„Éê„Éº„ÇÇÂøÖË¶Å„Åß„Åô„ÄÇ - „ÉÑ„Éº„É´ > ËøΩÂä† > Google USB Driver  ### 4. PC„ÇíÈñãÁô∫ËÄÖ„É¢„Éº„Éâ„Å´Â§âÊõ¥  Ë®≠ÂÆö > ÈñãÁô∫ËÄÖÂêë„Åë „ÅßË®≠ÂÆö„ÇíÂ§âÊõ¥„Åó„Åæ„Åô„ÄÇ - ÈñãÁô∫ËÄÖ„É¢„Éº„Éâ : ON - „Éá„Éê„Ç§„Çπ„ÅÆÊ§úÂá∫ : ON  ![image](/blog/35/1.png)  ### 5. AndroidÁ´ØÊú´„ÇíÈñãÁô∫ËÄÖ„É¢„Éº„Éâ„Å´Â§âÊõ¥  Galaxy„ÅÆÂ†¥Âêà„ÅØ‰ª•‰∏ã„ÅÆÊâãÈ†Ü„Åß„Åô„ÄÇ  - Ë®≠ÂÆö„Ç¢„Éó„É™ > Á´ØÊú´ÊÉÖÂ†±„ÄÄ„ÇíÈñã„Åè - „ÇΩ„Éï„Éà„Ç¶„Çß„Ç¢ÊÉÖÂ†±„ÄÄ„ÇíÈÅ∏Êäû - „Éì„É´„ÉâÁï™Âè∑ „Çí 7ÂõûÈÄ£Á∂ö „Åß„Çø„ÉÉ„Éó  „Åì„Çå„ÅßÈñãÁô∫ËÄÖ„É¢„Éº„Éâ„ÅåON„Å®„Å™„Çä„ÄÅË®≠ÂÆö„Ç¢„Éó„É™„ÅÆ‰∏ÄÁï™‰∏ã„Å´„ÄåÈñãÁô∫ËÄÖÂêë„Åë„Ç™„Éó„Ç∑„Éß„É≥„Äç„ÅåË°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ  ### 6. AndoroidÁ´ØÊú´„ÅÆUSB„Éá„Éê„ÉÉ„Ç∞„ÇíÊúâÂäπ  Âºï„ÅçÁ∂ö„Åç„ÄÅAndoroidÁ´ØÊú´„ÅÆ„ÄåÈñãÁô∫ËÄÖÂêë„Åë„Ç™„Éó„Ç∑„Éß„É≥„ÄçË®≠ÂÆö„ÇíÂ§âÊõ¥„Åó„Åæ„Åô„ÄÇ - USB„Éá„Éê„ÉÉ„Ç∞ : ON „Å´Â§âÊõ¥  „Åì„ÅÆÊôÇÁÇπ„Åß„ÄÅPC„Å®AndoroidÁ´ØÊú´„ÇíUSB„Ç±„Éº„Éñ„É´„ÅßÊé•Á∂ö„Åó„ÄÅVisual Studio „ÅÆ Android„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Åã„Çâ„Éá„Éê„ÉÉ„Ç∞Ëµ∑Âãï„Åô„ÇãÈöõ„Å´„ÄåAndoroidÁ´ØÊú´„Äç„ÅåË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Çå„Å∞ÂïèÈ°åÁÑ°„ÅèÂÆå‰∫Ü„Åß„Åô„ÄÇ  „ÇÇ„Åó„ÄÅ„Åì„ÅÆÊôÇÁÇπ„Åß„ÇÇVisual Studio‰∏ä„ÅßAndoroidÁ´ØÊú´„ÇíË™çË≠ò„Åó„Å¶„ÅÑ„Å™„ÅÑ„Çà„ÅÜ„Åß„ÅÇ„Çå„Å∞„ÄÅ‰ª•‰∏ã„ÇíË©¶„Åó„Å¶‰∏ã„Åï„ÅÑ„ÄÇ  ### 7. USB„Ç±„Éº„Éñ„É´Â§âÊõ¥  PC„Å®AndoroidÁ´ØÊú´„ÇíUSBÊé•Á∂ö„Åó„Å¶„ÅÑ„Çã„Å´„ÇÇÈñ¢„Çè„Çâ„Åö„ÄÅPC„ÅÆ„Ç®„ÇØ„Çπ„Éó„É≠„Éº„É©„Éº‰∏ä„Å´AndoroidÁ´ØÊú´„ÅåË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑÂ†¥Âêà„ÄÅ**USB„Ç±„Éº„Éñ„É´„ÅåÂØæÂøú„Åó„Å¶„ÅÑ„Å™„ÅÑÂèØËÉΩÊÄß**„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ  USB„Ç±„Éº„Éñ„É´„ÇíÂ§âÊõ¥„Åó„ÄÅWindows„ÅåAndoroidÁ´ØÊú´„ÇíË™çË≠ò„Åó„Å¶„ÅÑ„Çã„ÅãÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ   ÔºàÈÄöÂ∏∏„ÄÅUSBÊé•Á∂ö„Åó„ÅüÊôÇÁÇπ„Åß„Éù„ÉÉ„Éó„Ç¢„ÉÉ„ÉóÁ≠â„ÅåË°®Á§∫„Åï„Çå„Åæ„ÅôÔºâ  ### 8. Android „ÅÆUSBË®≠ÂÆö„ÇíÂ§âÊõ¥  AndoroidÁ´ØÊú´„ÅÆ„ÄåÈñãÁô∫ËÄÖÂêë„Åë„Ç™„Éó„Ç∑„Éß„É≥„ÄçË®≠ÂÆö„ÇíÂ§âÊõ¥„Åó„Åæ„Åô„ÄÇ - Ê®ôÊ∫ñUSBË®≠ÂÆö > **ÁîªÂÉè„ÇíËª¢ÈÄÅ** „ÇíÈÅ∏Êäû  „Åì„Åì„Åæ„Åß„ÅÆË®≠ÂÆö„ÅßÊ¶Ç„Å≠‰∏äÊâã„Åè„ÅÑ„Åè„Å®ÊÄù„ÅÑ„Åæ„Åô„ÄÇ  „Åì„Çå„Åß„ÇÇPC„ÅåAndoroidÁ´ØÊú´„ÇíË™çË≠ò„Åó„Å™„ÅÑÂ†¥Âêà„ÅØ‰ª•‰∏ã„Çí„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ„ÄÇ  ### 9. Samsung„Éâ„É©„Ç§„Éê„Éº„Çí„Ç§„É≥„Çπ„Éà„Éº„É´ PC„Å´Samsung„Éâ„É©„Ç§„Éê„Éº„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Å¶„Åø„Åæ„Åô„ÄÇ  [https://developer.samsung.com/android-usb-driver](https://developer.samsung.com/android-usb-driver)  „Åù„Çå„Åß„ÇÇ‰∏äÊâã„Åè„ÅÑ„Åã„Å™„ÅÑÂ†¥Âêà„ÅØ„ÄÅ‰ªñ„Çµ„Ç§„Éà„ÇíÂèÇËÄÉ„Å´„Åó„Å¶„Éà„É©„Ç§„Åó„Å¶„ÅÑ„Åè„Åó„Åã„Å™„ÅÑ„Åß„Åó„Çá„ÅÜ„ÄÇ ___  ‰ª•‰∏ä„Åß„Åô„ÄÇ    "},"_id":"blog/35-xamarin-connect-android-cs.mdx","_raw":{"sourceFilePath":"blog/35-xamarin-connect-android-cs.mdx","sourceFileName":"35-xamarin-connect-android-cs.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/35-xamarin-connect-android-cs"},"type":"Post","slug":"/blog/35-xamarin-connect-android-cs","slugAsParams":"35-xamarin-connect-android-cs"},{"title":"C# | WPF Prism MainWindow „Åã„Çâ ContentRegion „ÅÆ View „É°„ÇΩ„ÉÉ„Éâ„ÇíÂëº„Å≥Âá∫„ÅôÊñπÊ≥ï","description":"WPF Prism„Åß„ÅØ„ÄÅ‰∏ªË¶Å„Å™„Ç¶„Ç£„É≥„Éâ„Ç¶(Main Window)„Å®„Åù„ÅÆ‰∏≠„Å´Âê´„Åæ„Çå„Çã‰∏ÄÈÄ£„ÅÆ„É™„Éº„Ç∏„Éß„É≥(Region)„ÅßÊßãÊàê„Åï„Çå„ÇãÂ†¥Âêà„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ„Åì„Çå„Çâ„ÅÆ„É™„Éº„Ç∏„Éß„É≥„Å´„ÅØ„ÄÅ„Éì„É•„Éº(View)„ÇÑ„Éì„É•„Éº„É¢„Éá„É´(ViewModel)„ÅåÈÖçÁΩÆ„Åï„Çå„ÄÅÁõ∏‰∫í„Å´ÈÄö‰ø°„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇMain Window„Åã„ÇâContent Region„Å´„ÅÇ„Çã„Éì„É•„Éº„ÇÑ„Éì„É•„Éº„É¢„Éá„É´„ÅÆ„É°„ÇΩ„ÉÉ„Éâ„ÇíÂëº„Å≥Âá∫„ÅôÊñπÊ≥ï„ÇíË™¨Êòé„Åó„Åæ„Åô„ÄÇ","date":"2023-03-19T00:00:00.000Z","emoji":"üå∑","tags":["csharp"],"published":true,"body":{"raw":" WPF Prism„Åß„ÅØ„ÄÅ‰∏ªË¶Å„Å™„Ç¶„Ç£„É≥„Éâ„Ç¶(Main Window)„Å®„Åù„ÅÆ‰∏≠„Å´Âê´„Åæ„Çå„Çã‰∏ÄÈÄ£„ÅÆ„É™„Éº„Ç∏„Éß„É≥(Region)„ÅßÊßãÊàê„Åï„Çå„ÇãÂ†¥Âêà„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ   „Åì„Çå„Çâ„ÅÆ„É™„Éº„Ç∏„Éß„É≥„Å´„ÅØ„ÄÅ„Éì„É•„Éº(View)„ÇÑ„Éì„É•„Éº„É¢„Éá„É´(ViewModel)„ÅåÈÖçÁΩÆ„Åï„Çå„ÄÅÁõ∏‰∫í„Å´ÈÄö‰ø°„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇ  Main Window„Åã„ÇâContent Region„Å´„ÅÇ„Çã„Éì„É•„Éº„ÇÑ„Éì„É•„Éº„É¢„Éá„É´„ÅÆ„É°„ÇΩ„ÉÉ„Éâ„ÇíÂëº„Å≥Âá∫„ÅôÊñπÊ≥ï„Å®„Åó„Å¶„ÄÅ‰ª•‰∏ã„ÅÆÊâãÈ†Ü„ÅÆÊñπÊ≥ï„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ  ### 1. Main Window„Åã„ÇâContent Region„Å´„ÅÇ„Çã„Éì„É•„Éº„ÇíÂèñÂæó„Åô„Çã  ```cs var contentRegion = regionManager.Regions[\"ContentRegion\"]; var contentView = contentRegion.Views.FirstOrDefault() as YourContentView; ```  ### 2. ÂèñÂæó„Åó„Åü„Éì„É•„Éº„Åã„ÇâViewModel„ÇíÂèñÂæó„Åô„Çã  ```cs var contentViewModel = (YourContentViewModel)contentView.DataContext; ```  ### 3. ViewModel„ÅÆ„É°„ÇΩ„ÉÉ„Éâ„ÇíÂëº„Å≥Âá∫„Åô  ```cs contentViewModel.YourMethod(); ```  „Åü„Å†„Åó„ÄÅ„Åì„ÅÆÊñπÊ≥ï„ÅØContent Region„Å´ÁèæÂú®Ë°®Á§∫„Åï„Çå„Å¶„ÅÑ„Çã„Éì„É•„Éº„Å´ÂØæ„Åó„Å¶„ÅÆ„ÅøÊ©üËÉΩ„Åó„Åæ„Åô„ÄÇ   Content Region„Å´Ë§áÊï∞„ÅÆ„Éì„É•„Éº„Åå„ÅÇ„ÇãÂ†¥Âêà„ÅØ„ÄÅ„Å©„ÅÆ„Éì„É•„Éº„ÅÆ„É°„ÇΩ„ÉÉ„Éâ„ÇíÂëº„Å≥Âá∫„Åô„Åã„ÇíÊòéÁ§∫ÁöÑ„Å´ÊåáÂÆö„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ  „Åæ„Åü„ÄÅ„Åì„ÅÆÊñπÊ≥ï„ÅØ„ÄÅ„É™„Éº„Ç∏„Éß„É≥„ÅÆÂêçÂâç„Åå\"ContentRegion\"„Åß„ÅÇ„Çã„Åì„Å®„ÇíÂâçÊèê„Å®„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ   „ÇÇ„ÅóÁï∞„Å™„ÇãÂêçÂâç„Çí‰ΩøÁî®„Åó„Å¶„ÅÑ„ÇãÂ†¥Âêà„ÅØ„ÄÅÈÅ©ÂÆúÂ§âÊõ¥„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ"},"_id":"blog/36-mainwindow-call-content-region-view-wpf-prism-cs.mdx","_raw":{"sourceFilePath":"blog/36-mainwindow-call-content-region-view-wpf-prism-cs.mdx","sourceFileName":"36-mainwindow-call-content-region-view-wpf-prism-cs.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/36-mainwindow-call-content-region-view-wpf-prism-cs"},"type":"Post","slug":"/blog/36-mainwindow-call-content-region-view-wpf-prism-cs","slugAsParams":"36-mainwindow-call-content-region-view-wpf-prism-cs"},{"title":"C# | WPF Prism ÈÉ®ÂàÜView„Åã„ÇâMainWindow„ÅÆ„É°„ÇΩ„ÉÉ„Éâ„ÇíÂëº„Å≥Âá∫„ÅôÊñπÊ≥ï","description":"WPF Prism„Åß„ÅØ„ÄÅÈÉ®ÂàÜView„Åã„ÇâMain Window„ÅÆ„É°„ÇΩ„ÉÉ„Éâ„ÇíÂëº„Å≥Âá∫„Åô„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇPrism„ÅÆ„Ç§„Éô„É≥„ÉàAggregator„Çí‰ΩøÁî®„Åô„Çã„Åì„Å®„Åß„ÄÅViewModelÈñì„ÅÆÁõ¥Êé•ÁöÑ„Å™ÂèÇÁÖß„ÇíÂõûÈÅø„Åó„ÄÅ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥ÂÜÖ„ÅßÁô∫Áîü„Åô„Çã„Ç§„Éô„É≥„Éà„ÇíÁ∞°Âçò„Å´Âá¶ÁêÜ„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇ","date":"2023-03-19T00:00:00.000Z","emoji":"üèá","tags":["csharp"],"published":true,"body":{"raw":" WPF Prism„Åß„ÅØ„ÄÅÈÉ®ÂàÜView„Åã„ÇâMain Window„ÅÆ„É°„ÇΩ„ÉÉ„Éâ„ÇíÂëº„Å≥Âá∫„Åô„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇ  Prism„ÅÆ„Ç§„Éô„É≥„ÉàAggregator„Çí‰ΩøÁî®„Åô„Çã„Åì„Å®„Åß„ÄÅViewModelÈñì„ÅÆÁõ¥Êé•ÁöÑ„Å™ÂèÇÁÖß„ÇíÂõûÈÅø„Åó„ÄÅ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥ÂÜÖ„ÅßÁô∫Áîü„Åô„Çã„Ç§„Éô„É≥„Éà„ÇíÁ∞°Âçò„Å´Âá¶ÁêÜ„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇ    ‰ª•‰∏ã„ÅØ„ÄÅAggregator„Çí‰ΩøÁî®„Åó„Å¶„ÄÅÈÉ®ÂàÜView„Åã„ÇâMain Window„ÅÆViewModel„ÅÆ„É°„ÇΩ„ÉÉ„Éâ„ÇíÂëº„Å≥Âá∫„ÅôÊñπÊ≥ï„ÅÆ‰æã„Åß„Åô„ÄÇ  ### 1. Main Window„ÅÆViewModel„Å´„ÄÅÂëº„Å≥Âá∫„Åó„Åü„ÅÑ„É°„ÇΩ„ÉÉ„Éâ„Çí‰ΩúÊàê„Åó„Åæ„Åô„ÄÇ  ```cs public class MainWindowViewModel : BindableBase {     private readonly IEventAggregator _eventAggregator;      public MainWindowViewModel(IEventAggregator eventAggregator)     {         _eventAggregator = eventAggregator;     }      public void SomeMethod()     {         // Do something     } } ```  ### 2. ÈÉ®ÂàÜView„Å´„ÄÅ„Ç§„Éô„É≥„ÉàAggregator„ÇíÊ≥®ÂÖ•„Åó„Åæ„Åô„ÄÇ  ```cs public class PartialView : UserControl {     private readonly IEventAggregator _eventAggregator;      public PartialView(IEventAggregator eventAggregator)     {         _eventAggregator = eventAggregator;     } } ```  ### 3. ÈÉ®ÂàÜViewÂÜÖ„Åß„ÄÅ„Ç§„Éô„É≥„ÉàAggregator„Çí‰ΩøÁî®„Åó„Å¶„Ç§„Éô„É≥„Éà„ÇíÁô∫Ë°å„Åó„Åæ„Åô„ÄÇ  „Åü„Å®„Åà„Å∞„ÄÅ‰ª•‰∏ã„ÅÆ„Çà„ÅÜ„Å´„ÄÅ\"SomeEvent\"„Å®„ÅÑ„ÅÜ„Ç§„Éô„É≥„Éà„ÇíÁô∫Ë°å„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇ  ```cs _eventAggregator.GetEvent<SomeEvent>().Publish(); ```  „Åù„ÅÆ„Åæ„Åæ„Å†„Å®„ÄÅSomeEvent„ÇØ„É©„Çπ„ÅåÁÑ°„ÅÑ„Åü„ÇÅ„Ç®„É©„Éº„Å®„Å™„Çä„Åæ„Åô„ÄÇ „Åù„ÅÆ„Åü„ÇÅ„ÄÅÊñ∞„Åó„ÅÑ„ÇØ„É©„Çπ„Çí‰ΩúÊàê„Åó„Å¶ PubSubEvent „ÇíÁ∂ôÊâø„Åó„ÅüSomeEvent„ÇØ„É©„Çπ„Çí‰ΩúÊàê„Åó„Åæ„Åô„ÄÇ ```cs public class SomeEvent : PubSubEvent { } ```  Ë£úË∂≥„Åß„Åô„Åå„ÄÅ„Éë„É©„É°„Éº„Çø„ÅÇ„Çä„ÅÆ„Ç§„Éô„É≥„ÉàÁî®ÊÑè„Åô„ÇãÂ†¥Âêà„ÅØ„ÄÅPubSubEvent„ÅÆ„Ç∏„Çß„Éç„É™„ÉÉ„ÇØÂûã„Å´ÂÆöÁæ©„Åó„Åæ„Åô„ÄÇ ```cs public class SomeEvent : PubSubEvent<string> { } ```  ### 4. Main Window„ÅÆViewModel„Å´„ÄÅ\"SomeEvent\"„ÇíË≥ºË™≠„Åô„Çã„É°„ÇΩ„ÉÉ„Éâ„Çí‰ΩúÊàê„Åó„Åæ„Åô„ÄÇ  „Åì„Çå„Å´„Çà„Çä„ÄÅ„Ç§„Éô„É≥„Éà„ÅåÁô∫Ë°å„Åï„Çå„Åü„Å®„Åç„Å´„ÄÅË©≤ÂΩì„ÅÆ„É°„ÇΩ„ÉÉ„Éâ„ÅåÂëº„Å≥Âá∫„Åï„Çå„Åæ„Åô„ÄÇ  ```cs public class MainWindowViewModel : BindableBase {     private readonly IEventAggregator _eventAggregator;      public MainWindowViewModel(IEventAggregator eventAggregator)     {         _eventAggregator = eventAggregator;         _eventAggregator.GetEvent<SomeEvent>().Subscribe(OnSomeEvent);     }      public void OnSomeEvent()     {         SomeMethod();     }      public void SomeMethod()     {         // Do something     } } ```  „Åì„Çå„Åß„ÄÅÈÉ®ÂàÜView„Åã„ÇâMain Window„ÅÆViewModel„ÅÆ„É°„ÇΩ„ÉÉ„Éâ„ÇíÂëº„Å≥Âá∫„Åô„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇ   ÈÉ®ÂàÜViewÂÜÖ„Åß„Ç§„Éô„É≥„Éà„ÇíÁô∫Ë°å„Åô„Çã„Åì„Å®„Åß„ÄÅMain Window„ÅÆViewModel„Å´„Ç§„Éô„É≥„Éà„ÇíÂèó‰ø°„Åô„Çã„É°„ÇΩ„ÉÉ„Éâ„Çí‰ΩúÊàê„Åó„ÄÅÂøÖË¶Å„Å™Âá¶ÁêÜ„ÇíÂÆüË°å„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇ"},"_id":"blog/37-partialview-call-mainwindow-method-wpf-prism-cs.mdx","_raw":{"sourceFilePath":"blog/37-partialview-call-mainwindow-method-wpf-prism-cs.mdx","sourceFileName":"37-partialview-call-mainwindow-method-wpf-prism-cs.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/37-partialview-call-mainwindow-method-wpf-prism-cs"},"type":"Post","slug":"/blog/37-partialview-call-mainwindow-method-wpf-prism-cs","slugAsParams":"37-partialview-call-mainwindow-method-wpf-prism-cs"},{"title":"C# | WPF Prism „ÉÄ„Ç§„Ç¢„É≠„Ç∞ÁîªÈù¢ÂÜÖ„Å´RegionÔºàContentControlÔºâ„ÇíÈÖçÁΩÆ„Åô„ÇãÊñπÊ≥ï","description":"WPF Prism„Åß„ÅØ„ÄÅDialogÁîªÈù¢ÂÜÖ„ÅÆContentControl„Å´Âà•„ÅÆView„ÇíË°®Á§∫„Åï„Åõ„ÇãÊñπÊ≥ï","date":"2023-03-19T00:00:00.000Z","emoji":"ü¶ì","tags":["csharp"],"published":true,"body":{"raw":" WPF Prism„Åß„ÅØ„ÄÅDialogÁîªÈù¢ÂÜÖ„ÅÆContentControl„Å´Âà•„ÅÆView„ÇíË°®Á§∫„Åï„Åõ„ÇãÊñπÊ≥ï„Å®„Åó„Å¶„ÄÅ‰ª•‰∏ã„ÅÆÊâãÈ†Ü„ÇíÂÆüË°å„Åó„Åæ„Åô„ÄÇ  ### „ÉÄ„Ç§„Ç¢„É≠„Ç∞Áî®„ÅÆView„Çí‰ΩúÊàê  1. „ÉÄ„Ç§„Ç¢„É≠„Ç∞Áî®„ÅÆView„Çí‰ΩúÊàê„Åó„Åæ„Åô„ÄÇ‰æã„Åà„Å∞„ÄÅ\"MyDialogView\"„Å®„ÅÑ„ÅÜÂêçÂâç„ÅÆView„Çí‰ΩúÊàê„Åó„Åæ„Åô„ÄÇ 2. „ÉÄ„Ç§„Ç¢„É≠„Ç∞Áî®„ÅÆViewModel„Çí‰ΩúÊàê„Åó„Åæ„Åô„ÄÇ‰æã„Åà„Å∞„ÄÅ\"MyDialogViewModel\"„Å®„ÅÑ„ÅÜÂêçÂâç„ÅÆViewModel„Çí‰ΩúÊàê„Åó„Åæ„Åô„ÄÇ 3. „ÉÄ„Ç§„Ç¢„É≠„Ç∞Áî®„ÅÆView„Å´„ÄÅContentControl„ÇíËøΩÂä†„Åó„Åæ„Åô„ÄÇ  ‰æã„Åà„Å∞„ÄÅ‰ª•‰∏ã„ÅÆ„Çà„ÅÜ„Å™XAML„Ç≥„Éº„Éâ„Çí‰ΩøÁî®„Åó„Å¶„ÄÅContentControl„ÇíËøΩÂä†„Åó„Åæ„Åô„ÄÇ  ```xml <UserControl x:Class=\"MyNamespace.MyDialogView\"     xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"     xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"     xmlns:prism=\"http://www.codeplex.com/prism\"     prism:ViewModelLocator.AutoWireViewModel=\"True\"     Width=\"300\"     Height=\"300\">         <ContentControl          prism:RegionManager.RegionManager=\"{Binding MainRegionManager}\"          prism:RegionManager.RegionName=\"{Binding ContentRegionName}\"/> </UserControl> ```  ### „ÉÄ„Ç§„Ç¢„É≠„Ç∞„ÅÆ‰∏ÄÈÉ®„Å´Ë°®Á§∫„Åï„Åõ„ÇãView„Çí‰ΩúÊàê  4. „ÉÄ„Ç§„Ç¢„É≠„Ç∞Áî®„ÅÆView„Å´„ÄÅË°®Á§∫„Åï„Åõ„Åü„ÅÑView„ÇíÂÆöÁæ©„Åó„Åæ„Åô„ÄÇ‰æã„Åà„Å∞„ÄÅ‰ª•‰∏ã„ÅÆ„Çà„ÅÜ„Å™XAML„Ç≥„Éº„Éâ„Çí‰ΩøÁî®„Åó„Å¶„ÄÅË°®Á§∫„Åï„Åõ„Åü„ÅÑView„ÇíÂÆöÁæ©„Åó„Åæ„Åô„ÄÇ  ```xml <UserControl x:Class=\"MyNamespace.MyContentView\"     xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"     xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">     <Grid>         <!-- Ë°®Á§∫„Åï„Åõ„Åü„ÅÑ„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅÆÂÆöÁæ© -->     </Grid> </UserControl> ```  ### „ÉÄ„Ç§„Ç¢„É≠„Ç∞Áî®„ÅÆViewModel„Å´Âá¶ÁêÜ„ÇíËøΩÂä†  5. „ÉÄ„Ç§„Ç¢„É≠„Ç∞Áî®„ÅÆViewModel„ÅÆ„Ç≥„É≥„Çπ„Éà„É©„ÇØ„Çø„Åß„ÄÅË°®Á§∫„Åï„Åõ„Åü„ÅÑView„ÇíË°®Á§∫„Åô„Çã„Åü„ÇÅ„ÅÆÂá¶ÁêÜ„ÇíËøΩÂä†„Åó„Åæ„Åô„ÄÇ  ```cs public MyDialogView(IRegionManager regionManager) {     MainRegionManager = regionManager;       MainRegionManager.RegisterViewWithRegion(_contentRegionName, nameof(MyContentView)); }  private IRegionManager _mainRegionManager; public IRegionManager MainRegionManager {     get { return _mainRegionManager; }     set { SetProperty(ref _mainRegionManager, value); } }  private readonly string _contentRegionName = \"dialogRegionName\"; public string ContentRegionName {     get { return _contentRegionName; } } ```  **Dialog„ÅÆÂ†¥Âêà„ÄÅDialog„ÅÆRegionManager„Å´„ÄÅÊ≥®ÂÖ•„Åï„Çå„ÅüRegionManager„ÇíË®≠ÂÆö**„Åô„ÇãÂøÖË¶Å„ÅÇ„Çã„ÅÆ„ÅßË¶ÅÊ≥®ÊÑè„Åß„Åô„ÄÇ  „Åì„Çå„Çâ„ÅÆÊâãÈ†Ü„ÇíÂÆüË°å„Åô„Çã„Åì„Å®„Åß„ÄÅ„ÉÄ„Ç§„Ç¢„É≠„Ç∞ÁîªÈù¢ÂÜÖ„ÅÆContentControl„Å´Âà•„ÅÆView„ÇíË°®Á§∫„Åï„Åõ„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇ   „Åü„Å†„Åó„ÄÅView„ÅÆË°®Á§∫ÊñπÊ≥ï„ÇÑViewModel„ÅÆ‰ΩúÊàêÊñπÊ≥ï„ÅØ„ÄÅ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Å´„Çà„Å£„Å¶Áï∞„Å™„ÇãÂ†¥Âêà„Åå„ÅÇ„Çã„Åü„ÇÅ„ÄÅÈÅ©ÂÆúÂ§âÊõ¥„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ"},"_id":"blog/38-dialog-display-partial-region-wpf-prism-cs.mdx","_raw":{"sourceFilePath":"blog/38-dialog-display-partial-region-wpf-prism-cs.mdx","sourceFileName":"38-dialog-display-partial-region-wpf-prism-cs.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/38-dialog-display-partial-region-wpf-prism-cs"},"type":"Post","slug":"/blog/38-dialog-display-partial-region-wpf-prism-cs","slugAsParams":"38-dialog-display-partial-region-wpf-prism-cs"},{"title":"C# | WPF Prism ÂãïÁîªÔºàMediaElementÔºâ„ÇíMVVM„Éë„Çø„Éº„É≥„ÅßÂÆüË£Ö„Åô„ÇãÊñπÊ≥ï","description":"WPF Prism „ÅÆÂãïÁîªÂÜçÁîüÔºàMediaElement.Play()Ôºâ„Çí„ÄÅMVVM „Éë„Çø„Éº„É≥„ÅßÂÆüË£Ö„Åô„ÇãÊñπÊ≥ï","date":"2023-03-19T00:00:00.000Z","emoji":"üê°","tags":["csharp"],"published":true,"body":{"raw":" WPF Prism „ÅÆÂãïÁîªÂÜçÁîüÔºàMediaElement.Play()Ôºâ„Çí„ÄÅMVVM „Éë„Çø„Éº„É≥„ÅßÂÆüË£Ö„Åô„ÇãÊñπÊ≥ï„ÇíË™¨Êòé„Åó„Åæ„Åô„ÄÇ  ### IMediaService „Ç§„É≥„Çø„Éº„Éï„Çß„Éº„Çπ  1. IMediaService „Å®„ÅÑ„ÅÜ„Ç§„É≥„Çø„Éº„Éï„Çß„Ç§„Çπ„ÇíÂ∞éÂÖ•„Åó„Åæ„Åô„ÄÇ  ```cs public Interface IMediaService {     void Play();     void Pause();     void Stop();     void Rewind();     void FastForward();     bool IsPlaying(); } ```  ### View „Ç≥„Éº„Éâ„Éì„Éè„Ç§„É≥„Éâ  2. „Éì„É•„Éº„Å´ IMediaService „ÇíÂÆüË£Ö„Åó„Åæ„Åô„ÄÇ  ```cs public partial class DemoView : UserControl, IMediaService {     public DemoView()     {         InitializeComponent();     }      void IMediaService.FastForward()     {         this.MediaPlayer.Position += TimeSpan.FromSeconds(10);     }      void IMediaService.Pause()     {         this.MediaPlayer.Pause();     }      void IMediaService.Play()     {         this.MediaPlayer.Play();     }      void IMediaService.Rewind()     {         this.MediaPlayer.Position -= TimeSpan.FromSeconds(10);     }      void IMediaService.Stop()     {         this.MediaPlayer.Stop();     }      bool IMediaService.IsPlaying()     {         // „É≠„Éº„Éá„Ç£„É≥„Ç∞ÂÆå‰∫ÜÊôÇ„ÅØtrue         return this.MediaPlayer.Position < this.MediaPlayer.NaturalDuration;     } } ```  ### View Xaml  3. Ê¨°„Å´„ÄÅDemoView.XAML „Å´„ÅÑ„Åè„Å§„Åã„ÅÆ„Ç≥„Éº„Éâ„ÇíÂä†„Åà„Åæ„Åô„ÄÇ  - MediaElement „Å´ÂêçÂâç„Çí‰ªò„Åë„Å¶„ÄÅ„Ç≥„Éº„Éâ „Éì„Éè„Ç§„É≥„Éâ„Åå‰∏äË®ò„ÅÆ„Çà„ÅÜ„Å´„Ç¢„ÇØ„Çª„Çπ„Åß„Åç„Çã„Çà„ÅÜ„Å´„Åó„Åæ„Åô„ÄÇ      `<MediaElement Source=\"{Binding CurrentMedia}\" x:Name=\"MediaPlayer\"/>`  - „Éì„É•„Éº„Å´ÂêçÂâç„Çí‰ªò„Åë„Å¶„ÄÅ„Éë„É©„É°„Éº„Çø„Éº„Å®„Åó„Å¶Ê∏°„Åô„Åì„Å®„Åå„Åß„Åç„Çã„Çà„ÅÜ„Å´„Åó„Åæ„Åô„ÄÇ - „Ç§„É≥„Çø„É©„ÇØ„ÉÜ„Ç£„Éñ„Å™ÂêçÂâçÁ©∫Èñì„Çí„Ç§„É≥„Éù„Éº„Éà„Åó„Å¶„Åä„Åç„Åæ„Åô„ÄÇÔºà‰ªñ„Å´„ÇÇÂøÖË¶Å„Å™ÂêçÂâçÁ©∫Èñì„ÅØÁúÅÁï•Ôºâ  ```xml    <UserControl x:Class=\"Test.DemoView\"      xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"      xmlns:i=\"http://schemas.microsoft.com/expression/2010/interactivity\"      x:Name=\"MediaService\"> ```  - „Éà„É™„Ç¨„Éº„Çí‰ªã„Åó„Å¶ Loaded „Ç§„Éô„É≥„Éà„ÇíÊé•Á∂ö„Åó„ÄÅ„Ç≥„Éû„É≥„Éâ„Çí‰ªã„Åó„Å¶„Éì„É•„ÉºËá™‰ΩìÔºàx:Name=MediaServiceÔºâ„Çí„Éì„É•„Éº „É¢„Éá„É´„Å´Ê∏°„Åó„Åæ„Åô„ÄÇ  ```xml    <i:Interaction.Triggers>          <i:EventTrigger EventName=\"Loaded\">              <i:InvokeCommandAction Command=\"{Binding MediaServiceLoaded}\" CommandParameter=\"{Binding ElementName=MediaService}\"></i:InvokeCommandAction>          </i:EventTrigger>      </i:Interaction.Triggers> ``` - MediaElement „ÇíÊìç‰Ωú„Åô„Çã„Éú„Çø„É≥Ôºà„Ç≥„Éû„É≥„ÉâÔºâ„ÇíÊ∫ñÂÇô„Åó„Å¶„Åä„Åç„Åæ„Åô„ÄÇ ```xml    <Button Command=\"{Binding MoviePlayButton}\" Content=\"Play\"></Button>     <Button Command=\"{Binding MovieStopButton}\" Content=\"Stop\"></Button>  ```  ### ViewModel  4. ViewModel „Åß MediaElement „ÅÆ„É°„ÇΩ„ÉÉ„Éâ„ÇíÂëº„Å≥Âá∫„Åõ„Çã„Çà„ÅÜ„Å´„Åó„Åæ„Åô„ÄÇ  ```cs public class DemoViewModel : BindableBase {     public DemoViewModel()     {         MediaServiceLoaded = new DelegateCommand<IMediaService>(MediaServiceLoadedExecute);         MoviePlayButton = new DelegateCommand(MoviePlayButtonExecute);          // ...     }      public IMediaService MediaService {get; private set;}      public DelegateCommand<IMediaService> MediaServiceLoaded { get; }     private void MediaServiceLoadedExecute(IMediaService mediaService)     {         this.MediaService = mediaService;     }      public DelegateCommand MoviePlayButton { get; }     private void MoviePlayButtonExecute()     {         if (MediaService == null)         {             return;         }          MediaService.Play();     }      // ... } ```  „Åì„Çå„Çâ„ÅÆÊâãÈ†Ü„Å´Âæì„ÅÜ„Åì„Å®„Åß„ÄÅViewModelÂÜÖ„ÅßMediaElement„ÇíÂÜçÁîü„Åä„Çà„Å≥ÂÅúÊ≠¢„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇ   Â∞ë„ÄÖ„Ç≥„Éº„Éâ„Éì„Éè„Ç§„É≥„Éâ„Å´Ë®òËø∞„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„Åå„ÄÅMVVM„Éë„Çø„Éº„É≥„ÅØÂÆà„Çâ„Çå„Åü„Ç≥„Éº„Éâ„Å´„Å™„Å£„Å¶„ÅÑ„Çã„Å®ÊÄù„ÅÑ„Åæ„Åô„ÄÇ"},"_id":"blog/39-mvvm-media-element-wpf-prism-cs.mdx","_raw":{"sourceFilePath":"blog/39-mvvm-media-element-wpf-prism-cs.mdx","sourceFileName":"39-mvvm-media-element-wpf-prism-cs.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/39-mvvm-media-element-wpf-prism-cs"},"type":"Post","slug":"/blog/39-mvvm-media-element-wpf-prism-cs","slugAsParams":"39-mvvm-media-element-wpf-prism-cs"},{"title":"C# | Xamarin Prism AndroidÁ´ØÊú´„Åß„Éê„Éº„Ç≥„Éº„ÉâË™≠„ÅøÂèñ„Çä","description":"Xamarin Prism „Å´„Çà„Çä„ÄÅAndroidÁ´ØÊú´„Åß„Éê„Éº„Ç≥„Éº„ÉâÔºàQR„Ç≥„Éº„ÉâÔºâË™≠„ÅøËæº„Åø„ÇíÂÆüË£Ö„Åô„ÇãÊñπÊ≥ï","date":"2023-03-29T00:00:00.000Z","emoji":"üç∑","tags":["csharp"],"published":true,"body":{"raw":" Xamarin Prism „Å´„Çà„Çä„ÄÅAndroidÁ´ØÊú´„Åß„Éê„Éº„Ç≥„Éº„ÉâÔºàQR„Ç≥„Éº„ÉâÔºâË™≠„ÅøËæº„Åø„ÇíÂÆüË£Ö„Åô„ÇãÊñπÊ≥ï„ÇíË™¨Êòé„Åó„Åæ„Åô„ÄÇ     „Éê„Éº„Ç≥„Éº„ÉâË™≠„ÅøÂèñ„ÇäÁî®„ÅÆÁîªÈù¢„ÅßË™≠„ÅøÂèñ„Çä„ÅåÂÆå‰∫Ü„Åó„ÅüÂæå„ÄÅË™≠„ÅøÂèñ„Çä„Åó„Åü„Éê„Éº„Ç≥„Éº„Éâ„ÅÆÂÄ§„ÇíÂâç„ÅÆÁîªÈù¢„Å´Ëøî„Åô„Çà„ÅÜ„Å´„Åó„Åæ„Åô„ÄÇ  Xamarin Prism„Åß„Éê„Éº„Ç≥„Éº„ÉâË™≠„ÅøËæº„Åø„ÇíÂÆüË£Ö„Åô„Çã„Å´„ÅØ„ÄÅZXing„É©„Ç§„Éñ„É©„É™„Çí‰ΩøÁî®„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇ   ‰ª•‰∏ã„ÅØ„ÄÅZXing„Çí‰ΩøÁî®„Åó„Åü„Éê„Éº„Ç≥„Éº„ÉâË™≠„ÅøËæº„Åø„ÅÆÂÆüË£Ö‰æã„Åß„Åô„ÄÇ    ## ÂÆüË£ÖÊâãÈ†Ü  ### 1. NuGet„Éë„ÉÉ„Ç±„Éº„Ç∏„Çí„Ç§„É≥„Çπ„Éà„Éº„É´  „Åæ„Åö„ÄÅZXing„Çí„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Å´ËøΩÂä†„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ   NuGet„Éë„ÉÉ„Ç±„Éº„Ç∏„Éû„Éç„Éº„Ç∏„É£„Éº„Çí‰ΩøÁî®„Åó„Å¶„ÄÅ‰ª•‰∏ã„ÅÆ„Éë„ÉÉ„Ç±„Éº„Ç∏„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åô„ÄÇ    - ZXing.Net.Mobile - ZXing.Net.Mobile.Forms  ### 2. Android„ÅÆMainActivity.cs„Å´„Ç≥„Éº„ÉâËøΩÂä†  Ê¨°„Å´Android„ÅÆMainActivity.cs„Å´„Ç≥„Éº„Éâ„ÇíËøΩÂä†„Åó„Åæ„Åô„ÄÇ  ‚ñºMainActivity.cs  ```cs [Activity(Theme = \"@style/MainTheme\",             ConfigurationChanges = ConfigChanges.ScreenSize | ConfigChanges.Orientation | ConfigChanges.UiMode | ConfigChanges.ScreenLayout | ConfigChanges.SmallestScreenSize)] public class MainActivity : global::Xamarin.Forms.Platform.Android.FormsAppCompatActivity {     protected override void OnCreate(Bundle savedInstanceState)     {         base.OnCreate(savedInstanceState);          //// QR„Ç≥„Éº„ÉâË™≠„ÅøËæº„ÅøÁî®„Å´ËøΩÂä† „Åì„Åì„Åã„Çâ         ZXing.Net.Mobile.Forms.Android.Platform.Init();         //// QR„Ç≥„Éº„ÉâË™≠„ÅøËæº„ÅøÁî®„Å´ËøΩÂä† „Åì„Åì„Åæ„Åß          global::Xamarin.Forms.Forms.Init(this, savedInstanceState);          LoadApplication(new App(new AndroidInitializer()));     }      public override void OnRequestPermissionsResult(int requestCode, string[] permissions, Android.Content.PM.Permission[] grantResults)     {         //// QR„Ç≥„Éº„ÉâË™≠„ÅøËæº„ÅøÁî®„Å´ËøΩÂä† „Åì„Åì„Åã„Çâ         global::ZXing.Net.Mobile.Android.PermissionsHandler.OnRequestPermissionsResult(requestCode, permissions, grantResults);         //// QR„Ç≥„Éº„ÉâË™≠„ÅøËæº„ÅøÁî®„Å´ËøΩÂä† „Åì„Åì„Åæ„Åß          base.OnRequestPermissionsResult(requestCode, permissions, grantResults);     } }  public class AndroidInitializer : IPlatformInitializer {     public void RegisterTypes(IContainerRegistry containerRegistry)     {         // Register any platform specific implementations     } } ```  ### 3. Android„ÅÆAndroidManifest.xml„Å´„Ç≥„Éº„ÉâËøΩÂä†  Ê¨°„Å´Android„ÅÆAndroidManifest.xml„Å´„Ç≥„Éº„Éâ„ÇíËøΩÂä†„Åó„Åæ„Åô„ÄÇ   AndroidManifest.xml„ÅØ„ÄÅVisual Studio „Åß„ÅÇ„Çå„Å∞„ÄÅProperties„ÅÆÁõ¥‰∏ã„Å´Â≠òÂú®„Åó„Åæ„Åô„ÄÇ    ‚ñºAndroidManifest.xml ```xml <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" android:versionCode=\"1\" android:versionName=\"1.0\" package=\"com.companyname.appname\"> \t<uses-sdk android:minSdkVersion=\"21\" android:targetSdkVersion=\"29\" />  \t<!-- „Éê„Éº„Ç≥„Éº„ÉâË™≠„ÅøËæº„Åø„Å´ÂøÖË¶Å „Åì„Åì„Åã„Çâ --> \t<uses-permission android:name = \"android.permission.CAMERA\" /> \t<uses-permission android:name = \"android.permission.FLASHLIGHT\" /> \t<!-- „Éê„Éº„Ç≥„Éº„ÉâË™≠„ÅøËæº„Åø„Å´ÂøÖË¶Å „Åì„Åì„Åæ„Åß -->  \t<application android:label=\"@string/app_name\" android:icon=\"@mipmap/icon\"> \t</application> </manifest> ```  ### 4. „Éê„Éº„Ç≥„Éº„ÉâË™≠„ÅøÂèñ„ÇäÁîªÈù¢„ÇíÂÆüË£Ö  ‰ªäÂõû„ÅÆ„Çµ„É≥„Éó„É´„Åß„ÅØ„ÄÅ2„Å§„ÅÆ„Éö„Éº„Ç∏„Çí‰ΩúÊàê„Åó„Åæ„Åô„ÄÇ  ‚ñ†MainPage   - „Éú„Çø„É≥„ÇíÊäº„Åô„Å®„Éê„Éº„Ç≥„Éº„ÉâË™≠„ÅøÂèñ„Çä„Åô„Çã„Éö„Éº„Ç∏ÔºàScannerViewÔºâ„Å´ÁßªÂãï - ScannerView„Éö„Éº„Ç∏„ÅßË™≠„ÅøÂèñ„Å£„Åü„Éê„Éº„Ç≥„Éº„Éâ„ÅÆÂÄ§„ÇíÁîªÈù¢„Å´Ë°®Á§∫  ‚ñ†ScannerView   - „Éê„Éº„Ç≥„Éº„ÉâË™≠„ÅøÂèñ„ÇäÂæå„ÄÅË™≠„ÅøÂèñ„Å£„Åü„Éê„Éº„Ç≥„Éº„Éâ„ÅÆÂÄ§„ÇíMainPage„Å´Ëøî„Åô  „Åæ„Åö„ÅØMainPage„ÅÆÂÆüË£Ö„Åß„Åô„ÄÇ  ‚ñºMainPage.xml ```xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <ContentPage     x:Class=\"Template.Views.MainPage\"     xmlns=\"http://xamarin.com/schemas/2014/forms\"     xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"     xmlns:prism=\"http://prismlibrary.com\"     prism:ViewModelLocator.AutowireViewModel=\"True\">      <Grid>         <StackLayout>             <Button Command=\"{Binding ScannerViewButton}\" Text=\"„Éê„Éº„Ç≥„Éº„ÉâË™≠„ÅøËæº„ÅøÈñãÂßã\" />              <StackLayout Orientation=\"Horizontal\">                 <Label Text=\"„Éê„Éº„Ç≥„Éº„ÉâË™≠„ÅøËæº„ÅøÁµêÊûú: \" />                 <Label Text=\"{Binding ScannedResultLabel}\" />             </StackLayout>         </StackLayout>     </Grid> </ContentPage> ```  ‚ñºMainPageViewModel.cs ```cs using Prism.Commands; using Prism.Navigation; using Prism.Services; using Template.Views;  namespace Template.ViewModels {     /// <summary>     /// QR„Ç≥„Éº„Éâ„ÇíË™≠„ÅøËæº„Åø     /// </summary>     public class MainPageViewModel : ViewModelBase \t{         public Page003ViewModel(             INavigationService navigationService)             : base(navigationService)         {             ScannerViewButton = new DelegateCommand(ScannerViewButtonExecute);         }          public override void OnNavigatedTo(INavigationParameters parameters)         {             //// ScannerViewÔºà„Éê„Éº„Ç≥„Éº„ÉâË™≠„ÅøÂèñ„ÇäÁîªÈù¢Ôºâ„ÅßÂèñÂæó„Åó„Åü„Éê„Éº„Ç≥„Éº„Éâ„ÅÆÂÄ§„ÇíÂèñÂæó             var scannedResult = parameters[nameof(ScannerViewModel.ScannedResult)] as string;             if (scannedResult == null)             {                 ScannedResultLabel = string.Empty;             }              //// „Éê„Éº„Ç≥„Éº„Éâ„ÅÆÂÄ§„ÇíÁîªÈù¢„ÅÆ„É©„Éô„É´„Å´ÂèçÊò†             ScannedResultLabel = scannedResult;         }          private string _scannedResultLabel = string.Empty;         public string ScannedResultLabel         {             get { return _scannedResultLabel; }             set { SetProperty(ref _scannedResultLabel, value); }         }          public DelegateCommand ScannerViewButton { get; }          private void ScannerViewButtonExecute()         {             //// ScannerViewÔºà„Éê„Éº„Ç≥„Éº„ÉâË™≠„ÅøÂèñ„ÇäÁîªÈù¢Ôºâ„Å´ÈÅ∑Áßª             base.NavigationService.NavigateAsync(nameof(ScannerView));         }     } } ```  Ê¨°„Å´„ÄÅScannerView„ÅÆÂÆüË£Ö„Åß„Åô„ÄÇ  ‚ñºScannerView.xaml ```xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <zxing:ZXingScannerPage     x:Class=\"Template.Views.ScannerView\"     xmlns=\"http://xamarin.com/schemas/2014/forms\"     xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"     xmlns:behaviors=\"clr-namespace:Prism.Behaviors;assembly=Prism.Forms\"     xmlns:zxing=\"clr-namespace:ZXing.Net.Mobile.Forms;assembly=ZXing.Net.Mobile.Forms\">      <zxing:ZXingScannerPage.Behaviors>         <behaviors:EventToCommandBehavior             Command=\"{Binding ScanResultCommand}\"             EventArgsParameterPath=\"Result\"             EventName=\"ScanFinished\" />     </zxing:ZXingScannerPage.Behaviors> </zxing:ZXingScannerPage> ```  ‚ñºScannerView.xaml.cs ```cs using System; using Template.ExtendedEventArgs; using ZXing.Net.Mobile.Forms;  namespace Template.Views {     public partial class ScannerView : ZXingScannerPage     {         public ScannerView()         {             InitializeComponent();              DefaultOverlayTopText = \"„Éê„Éº„Ç≥„Éº„Éâ„ÇíË™≠„ÅøÂèñ„Çä„Åæ„Åô\";             DefaultOverlayBottomText = \"\";              this.OnScanResult += (result) =>             {                 this.ScanFinished?.Invoke(this, new ScanFinishedEventArgs(result));                 this.IsScanning = false;             };         }          //// ScanFinishedEventArgs „ÅØÂà•„ÇØ„É©„Çπ„ÅßÂÆüË£Ö„ÅåÂøÖË¶Å         public event EventHandler<ScanFinishedEventArgs> ScanFinished;     } } ```  ScanFinishedEventArgs „ÅØ„ÄÅViewÔºàxamlÔºâ„Å´ÂÆüË£Ö„Åó„Å¶„ÅÑ„ÇãEventToCommandBehavior„Åß„ÄÅ   „Éê„Éº„Ç≥„Éº„ÉâË™≠„ÅøÂèñ„ÇäÁµÇ‰∫Ü„Ç§„Éô„É≥„Éà„ÇíViewModel„Å∏„Éê„Ç§„É≥„Éâ„Åô„Çã„Åü„ÇÅ„Å´ÂøÖË¶Å„Å™„ÇØ„É©„Çπ„Åß„Åô„ÄÇ  ScanFinishedEventArgs „ÇíÂÆüË£Ö„Åó„Åæ„Åô„ÄÇ  ‚ñºScanFinishedEventArgs .cs ```cs using System;  namespace Template.ExtendedEventArgs {     public class ScanFinishedEventArgs :EventArgs     {         public ScanFinishedEventArgs(ZXing.Result result)         {             Result = result;         }          public ZXing.Result Result { get; private set; }     } } ```  ÊúÄÂæå„Å´„ÄÅViewModel„ÇíÂÆüË£Ö„Åó„Åæ„Åô„ÄÇ  ‚ñºScannerViewModel.cs ```cs using Prism.Commands; using Prism.Navigation; using Prism.Services;  namespace Template.ViewModels {     public class ScannerViewModel : ViewModelBase     {         public ScannerViewModel(             INavigationService navigationService,             IPageDialogService pageDialogService,             IDeviceService deviceService)             : base(navigationService)         {             PageDialogService = pageDialogService;             DeviceService = deviceService;              ScanResultCommand = new DelegateCommand<ZXing.Result>(ScanResultCommandExecute);         }          public IPageDialogService PageDialogService { get; private set; }         public IDeviceService DeviceService { get; private set; }          /// <summary>         /// „Éê„Éº„Ç≥„Éº„Éâ„Çπ„Ç≠„É£„É≥ÁµêÊûú         /// </summary>         public string ScannedResult { get; private set; }          public DelegateCommand<ZXing.Result> ScanResultCommand { get; }          private void ScanResultCommandExecute(ZXing.Result result)         {             DeviceService.BeginInvokeOnMainThread(() =>             {                 ScannedResult = result.Text;                  var param = new NavigationParameters                 {                     {nameof(ScannedResult), ScannedResult }                 };                  NavigationService.GoBackAsync(param);                 PageDialogService.DisplayAlertAsync(\"„Çπ„Ç≠„É£„É≥ÂÆå‰∫Ü\", ScannedResult, \"OK\");             });         }     } } ```  „Åì„Çå„Çâ„ÅÆÊâãÈ†Ü„Åß„ÄÅ„Éê„Éº„Ç≥„Éº„ÉâË™≠„ÅøÂèñ„Çä„Åó„ÅüÂÄ§„ÇíÂâç„ÅÆ„Éö„Éº„Ç∏„Å´Êàª„Åó„Å¶Ë°®Á§∫„Åô„Çã‰∫ã„Åå„Åß„Åç„Åæ„Åô„ÄÇ   ScannerView„ÅØ„Ç≥„Éº„Éâ„Éì„Éè„Ç§„É≥„Éâ„Å´Ë®òËø∞„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„Åå„ÄÅ‰ªñ„ÅØMVVM„Éë„Çø„Éº„É≥„Å´„Å™„Å£„Å¶„ÅÑ„Çã„Å®ÊÄù„ÅÑ„Åæ„Åô„ÄÇ    ## ÂèÇËÄÉ„É™„É≥„ÇØ  „ÄêXamarin.Forms„ÄëQR„Ç≥„Éº„Éâ„ÅÆË™≠„ÅøÂèñ„Çä„Çí„Åô„ÇãÊñπÊ≥ï   [https://takataka430.hatenablog.com/entry/2019/03/21/184259](https://takataka430.hatenablog.com/entry/2019/03/21/184259)  „ÄêXamarin 002„ÄëQR„Ç≥„Éº„Éâ„É©„Ç§„Éñ„É©„É™ Zxing.Net.Mobile.Forms „Çí Prism „Å£„ÅΩ„Åè‰Ωø„Å£„Å¶„Åø„Åü   [https://johnny06r.hatenablog.com/entry/2018/08/29/012710](https://johnny06r.hatenablog.com/entry/2018/08/29/012710) "},"_id":"blog/40-android-barcode-scanner-xamarin-prism-cs.mdx","_raw":{"sourceFilePath":"blog/40-android-barcode-scanner-xamarin-prism-cs.mdx","sourceFileName":"40-android-barcode-scanner-xamarin-prism-cs.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/40-android-barcode-scanner-xamarin-prism-cs"},"type":"Post","slug":"/blog/40-android-barcode-scanner-xamarin-prism-cs","slugAsParams":"40-android-barcode-scanner-xamarin-prism-cs"},{"title":"C# | Xamarin AndroidÁ´ØÊú´„ÅÆXamarin.EssentialsÂÆüË£ÖÊñπÊ≥ïÔºàconfig.xml„ÅÆ‰ª£ÊõøÔºâ","description":"Xamarin.Essentials„Çí‰ΩøÁî®„Åó„ÅüAndroidÁ´ØÊú´„ÅÆË®≠ÂÆö„Éá„Éº„ÇøË™≠„ÅøÊõ∏„Åç„ÅÆÂÆüË£Ö‰æã","date":"2023-03-29T00:00:00.000Z","emoji":"üçï","tags":["csharp"],"published":true,"body":{"raw":" Xamarin„Åß„ÅØ„ÄÅË®≠ÂÆö„Éá„Éº„Çø„Çí‰øùÂ≠ò„Åô„ÇãConfig„Éï„Ç°„Ç§„É´„ÇíÂèñ„ÇäÊâ±„Åà„Åæ„Åõ„Çì„ÄÇ   ‰ª£„Çè„Çä„Å´Xamarin.Essentials„ÇíÂà©Áî®„Åô„Çå„Å∞„ÄÅÂæìÊù•„ÅÆconfig.xml„Éï„Ç°„Ç§„É´ÂêåÊßò„Å´Ë®≠ÂÆö„Éá„Éº„Çø„ÇíÊÆã„Åô‰∫ã„Åå„Åß„Åç„Åæ„Åô„ÄÇ    ‰ª•‰∏ã„ÅØ„ÄÅXamarin.Essentials„Çí‰ΩøÁî®„Åó„ÅüAndroidÁ´ØÊú´„ÅÆË®≠ÂÆö„Éá„Éº„ÇøË™≠„ÅøÊõ∏„Åç„ÅÆÂÆüË£Ö‰æã„Åß„Åô„ÄÇ  ## ÂÆüË£ÖÊâãÈ†Ü  ### 1. NuGet„Éë„ÉÉ„Ç±„Éº„Ç∏„Çí„Ç§„É≥„Çπ„Éà„Éº„É´  „Åæ„Åö„ÄÅXamarin.Essentials„Çí„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Å´ËøΩÂä†„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ   NuGet„Éë„ÉÉ„Ç±„Éº„Ç∏„Éû„Éç„Éº„Ç∏„É£„Éº„Çí‰ΩøÁî®„Åó„Å¶„ÄÅ„Éë„ÉÉ„Ç±„Éº„Ç∏„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åô„ÄÇ    - Xamarin.Essentials  ### 2. Android„ÅÆMainActivity.cs„Å´„Ç≥„Éº„ÉâËøΩÂä†  Ê¨°„Å´Android„ÅÆMainActivity.cs„Å´„Ç≥„Éº„Éâ„ÇíËøΩÂä†„Åó„Åæ„Åô„ÄÇ  ‚ñºMainActivity.cs  ```cs [Activity(Theme = \"@style/MainTheme\",             ConfigurationChanges = ConfigChanges.ScreenSize | ConfigChanges.Orientation | ConfigChanges.UiMode | ConfigChanges.ScreenLayout | ConfigChanges.SmallestScreenSize)] public class MainActivity : global::Xamarin.Forms.Platform.Android.FormsAppCompatActivity {     protected override void OnCreate(Bundle savedInstanceState)     {         base.OnCreate(savedInstanceState);          //// Xamarin.EssentialsÁî®„Å´ËøΩÂä† „Åì„Åì„Åã„Çâ         Xamarin.Essentials.Platform.Init(this, savedInstanceState);         //// Xamarin.EssentialsÁî®„Å´ËøΩÂä† „Åì„Åì„Åæ„Åß          global::Xamarin.Forms.Forms.Init(this, savedInstanceState);          LoadApplication(new App(new AndroidInitializer()));     }      public override void OnRequestPermissionsResult(int requestCode, string[] permissions, Android.Content.PM.Permission[] grantResults)     {         //// Xamarin.EssentialsÁî®„Å´ËøΩÂä† „Åì„Åì„Åã„Çâ         Xamarin.Essentials.Platform.OnRequestPermissionsResult(requestCode, permissions, grantResults);         //// Xamarin.EssentialsÁî®„Å´ËøΩÂä† „Åì„Åì„Åæ„Åß          base.OnRequestPermissionsResult(requestCode, permissions, grantResults);     } }  public class AndroidInitializer : IPlatformInitializer {     public void RegisterTypes(IContainerRegistry containerRegistry)     {         // Register any platform specific implementations     } } ```  ### 3. Ë®≠ÂÆö„Éá„Éº„Çø‰øùÂ≠òÁî®„ÅÆ„ÇØ„É©„Çπ„ÇíÂÆüË£Ö  Ë®≠ÂÆö„Éá„Éº„Çø„ÅØ1„Å§„ÅÆ„ÇØ„É©„Çπ„Å´„Åæ„Å®„ÇÅ„ÅüÊñπ„ÅåÂèñ„ÇäÊâ±„ÅÑÊòì„ÅÑ„Åü„ÇÅ„ÄÅÂ∞ÇÁî®„ÅÆ„ÇØ„É©„Çπ„Çí‰ΩúÊàê„Åó„Åæ„Åô„ÄÇ  ‰æã„Åà„Å∞„ÄÅOracle„Éá„Éº„Çø„Éô„Éº„Çπ„Å´Êé•Á∂ö„Åô„Çã„Åü„ÇÅ„ÅÆÊÉÖÂ†±„ÇíË™≠„ÅøÊõ∏„Åç„Åó„Åü„ÅÑÂ†¥Âêà„ÅÆ‰æã„Åß„Åô„ÄÇ   „Ç∑„É≥„Ç∞„É´„Éà„É≥„Å´„Åó„Åü„ÅÑ„Åü„ÇÅ„ÄÅstatic „Åß„ÇØ„É©„Çπ„Å®„Éó„É≠„Éë„ÉÜ„Ç£„ÇíÂÆöÁæ©„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ    ‚ñºShared.cs ```cs using Xamarin.Essentials;  namespace Template.Domain {     public static class Shared     {         public static string OracleUser         {             get => Preferences.Get(nameof(OracleUser), \"atman\");             set => Preferences.Set(nameof(OracleUser), value);         }          public static string OraclePassword         {             get => Preferences.Get(nameof(OraclePassword), \"atman\");             set => Preferences.Set(nameof(OraclePassword), value);         }          public static string OracleHost         {             get => Preferences.Get(nameof(OracleHost), \"192.168.3.16\");             set => Preferences.Set(nameof(OracleHost), value);         }          public static string OracleServiceName         {             get => Preferences.Get(nameof(OracleServiceName), \"XEPDB1\");             set => Preferences.Set(nameof(OracleServiceName), value);         }          public static string OracleDataSource         {             get => $\"(DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = {OracleHost})(PORT = 1521))(CONNECT_DATA = (SERVER = DEDICATED)(SERVICE_NAME = {OracleServiceName})))\";         }     } }  ```  „Éá„Éï„Ç©„É´„ÉàÂÄ§„ÅØ„ÄÅPreferences.Get „Å´Ë®≠ÂÆö„Åï„Çå„ÅüÂÄ§„Å´„Å™„Çä„Åæ„Åô„ÄÇ   ‰æã„ÅÆOracleUser„Éó„É≠„Éë„ÉÜ„Ç£„Åß„ÅÇ„Çå„Å∞„ÄÅatman „Åß„Åô„ÄÇ   `get => Preferences.Get(nameof(OracleUser), \"atman\");`  ÊúÄÂæå„Å´„ÄÅ„Çµ„É≥„Éó„É´„ÅÆShared.cs„ÅÆ„Éó„É≠„Éë„ÉÜ„Ç£„ÇíË™≠„ÅøÊõ∏„Åç„Åô„ÇãÂ†¥Âêà„ÅØ„ÄÅ‰ª•‰∏ã„ÅÆ„Çà„ÅÜ„Å´Ë®òËºâ„Åó„Åæ„Åô„ÄÇ    ```cs //// Ë®≠ÂÆö„Éá„Éº„Çø„ÇíÊõ∏„ÅçËæº„Åø Shared.OracleUser = Êñ∞Ë¶è„ÅÆÂÄ§; Shared.OraclePassword = Êñ∞Ë¶è„ÅÆÂÄ§;  //// Ë®≠ÂÆö„Éá„Éº„Çø„ÇíË™≠„ÅøËæº„Åø var host = Shared.OracleHost; var serviceName = Shared.OracleServiceName; ```  „Åì„Çå„Çâ„ÅÆÊâãÈ†Ü„Åß„ÄÅAndroidÁ´ØÊú´„ÅÆË®≠ÂÆö„Éá„Éº„Çø„ÇíË™≠„ÅøÊõ∏„Åç„Åô„Çã‰∫ã„Åå„Åß„Åç„Åæ„Åô„ÄÇ"},"_id":"blog/41-xamarin-essentials-shared-cs.mdx","_raw":{"sourceFilePath":"blog/41-xamarin-essentials-shared-cs.mdx","sourceFileName":"41-xamarin-essentials-shared-cs.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/41-xamarin-essentials-shared-cs"},"type":"Post","slug":"/blog/41-xamarin-essentials-shared-cs","slugAsParams":"41-xamarin-essentials-shared-cs"},{"title":"C# | Xamarin AndroidÁ´ØÊú´„Åã„ÇâÁõ¥Êé•OracleDB„Å´Êé•Á∂ö„Åô„ÇãÊñπÊ≥ï","description":"Xamarin„ÅßAndroidÁ´ØÊú´„Åã„ÇâOracle„Éá„Éº„Çø„Éô„Éº„Çπ„Å´Êé•Á∂ö„Åô„ÇãÂÆüË£Ö‰æã","date":"2023-03-29T00:00:00.000Z","emoji":"üçú","tags":["csharp"],"published":true,"body":{"raw":" C# Xamarin„Åß„ÅØ„ÄÅOracle.ManagedDataAccess.Core„ÇíÂà©Áî®„Åô„Çå„Å∞„ÄÅAndroidÁ´ØÊú´„Åã„ÇâOracle„Éá„Éº„Çø„Éô„Éº„Çπ„ÅÆ„Éá„Éº„Çø„ÇíÂèñÂæó„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇ  Êú¨Êù•„ÄÅOracleÁ≠â„ÅÆ„Éá„Éº„Çø„Éô„Éº„Çπ„Å´AndroidÁ´ØÊú´„Åã„ÇâÊé•Á∂ö„Åô„ÇãÂ†¥Âêà„ÅØ„ÄÅWebAPIÁµåÁî±„ÅåÊé®Â•®„Åï„Çå„Çã„Åì„Å®„ÅåÂ§ö„ÅÑ„Åß„Åô„ÄÇ   „Åó„Åã„Åó„ÄÅÁ§æÂÜÖÁ≠â„ÅÆ„É≠„Éº„Ç´„É´„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØÂÜÖ„ÅßÂ∞èË¶èÊ®°„Åß„ÅÇ„Çå„Å∞„ÄÅÁõ¥Êé•DB„Å´Êé•Á∂ö„Åô„ÇãÊñπÊ≥ï„ÇÇ‰∏Ä„Å§„ÅÆÊâãÊÆµ„Å®„Å™„Çä„Åæ„Åô„ÄÇ    ‰ª•‰∏ã„ÅØ„ÄÅXamarin„ÅßAndroidÁ´ØÊú´„Åã„ÇâOracle„Éá„Éº„Çø„Éô„Éº„Çπ„Å´Êé•Á∂ö„Åô„ÇãÂÆüË£Ö‰æã„Åß„Åô„ÄÇ   ÔºàiOS„ÇÇÂêåÊßò„Åã„ÇÇ„Åó„Çå„Åæ„Åõ„Çì„Åå„ÄÅÊú™Á¢∫Ë™ç„Åß„Åô„ÄÇÔºâ   ## ÂÆüË£ÖÊâãÈ†Ü  ### 1. NuGet„Éë„ÉÉ„Ç±„Éº„Ç∏„Çí„Ç§„É≥„Çπ„Éà„Éº„É´  „Åæ„Åö„ÄÅNuGet„Éë„ÉÉ„Ç±„Éº„Ç∏„Éû„Éç„Éº„Ç∏„É£„Éº„ÅßOracle.ManagedDataAccess.Core„Éë„ÉÉ„Ç±„Éº„Ç∏„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åô„ÄÇ   „Åì„ÅÆ„Éë„ÉÉ„Ç±„Éº„Ç∏„ÅØ„ÄÅOracle Database„Å´È´òÈÄü„Å´„Ç¢„ÇØ„Çª„Çπ„Åß„Åç„ÇãADO.NET„Éâ„É©„Ç§„Éê„Éº„Åß„Åô„ÄÇ   Oracle Client„ÅÆ„Ç§„É≥„Çπ„Éà„Éº„É´„ÅØ‰∏çË¶Å„Åß„Åô„ÄÇ    - Oracle.ManagedDataAccess.Core  ### 2. Oracle„Éá„Éº„Çø„Éô„Éº„Çπ„Å∏„ÅÆÊé•Á∂ö‰æã  ‰ª•‰∏ã„ÅÆ„Ç≥„Éº„Éâ„ÅØ„ÄÅOracle Database„Å´Êé•Á∂ö„Åó„Å¶„ÄÅEMP„ÉÜ„Éº„Éñ„É´„Åã„ÇâÂæìÊ•≠Âì°„ÅÆÂêçÂâç„Å®Áµ¶‰∏é„ÇíÂèñÂæó„Åô„Çã„ÇÇ„ÅÆ„Åß„Åô„ÄÇ   Á∞°Âçò„Å´Ë©¶„ÅôÂ†¥Âêà„ÅØ„ÄÅXamarin„Åß„ÅØView„ÅÆ„Ç≥„Éº„Éâ„Éì„Éè„Ç§„É≥„ÉâÔºàPrism„ÇíÂà©Áî®„Åô„ÇãÂ†¥Âêà„ÅØ„ÄÅViewModelÔºâ„Å´Ë®òËºâ„Åô„Çå„Å∞„Çà„ÅÑ„Åß„Åô„ÄÇ    ```cs using System; using System.Diagnostics; using Oracle.ManagedDataAccess.Client;  namespace Template.Views {     public partial class MainPage     {         public MainPage()         {             InitializeComponent();              // Êé•Á∂öÊñáÂ≠óÂàó„ÇíË®≠ÂÆö„Åó„Åæ„Åô„ÄÇ             string user = \"atman\";             string password = \"atman\";             string dataSource = \"(DESCRIPTION =(ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.3.16)(PORT = 1521))(CONNECT_DATA =(SERVER = DEDICATED)(SERVICE_NAME = XEPDB1)))\";             string connectionString = \"User Id=\" + user + \";Password=\" + password + \";Data Source=\" + dataSource;              // OracleConnection„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„Çí‰ΩúÊàê„Åó„Åæ„Åô„ÄÇ             using (OracleConnection connection = new OracleConnection(connectionString))             {                 // „Éá„Éº„Çø„Éô„Éº„Çπ„Å´Êé•Á∂ö„Åó„Åæ„Åô„ÄÇ                 connection.Open();                  // SQLÊñá„ÇíË®≠ÂÆö„Åó„Åæ„Åô„ÄÇ                 string sql = \"SELECT ename, sal FROM emp\";                  // OracleCommand„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„Çí‰ΩúÊàê„Åó„Åæ„Åô„ÄÇ                 using (OracleCommand command = new OracleCommand(sql, connection))                 {                     // OracleDataReader„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„ÇíÂèñÂæó„Åó„Åæ„Åô„ÄÇ                     using (OracleDataReader reader = command.ExecuteReader())                     {                         // „Éá„Éº„Çø„ÇíË™≠„ÅøËæº„Åø„Åæ„Åô„ÄÇ                         while (reader.Read())                         {                             // ÂêçÂâç„Å®Áµ¶‰∏é„ÇíÂèñÂæó„Åó„Åæ„Åô„ÄÇ                             string name = reader.GetString(0);                             decimal salary = reader.GetDecimal(1);                              // ÁµêÊûú„ÇíË°®Á§∫„Åó„Åæ„Åô„ÄÇ                             Debug.WriteLine($\"{name} : {salary}\");                         }                     }                 }                  // „Éá„Éº„Çø„Éô„Éº„Çπ„Å®„ÅÆÊé•Á∂ö„ÇíÂàáÊñ≠„Åó„Åæ„Åô„ÄÇ                 connection.Close();             }         }     } } ```  Oracle„ÅÆÊé•Á∂öÊñáÂ≠óÂàó„ÅØ„ÄÅÊé•Á∂öÂØæË±°„ÅÆOracle„Çµ„Éº„Éê„ÉºÔºàAndroidÁ´ØÊú´„ÅåWifiÊé•Á∂ö„Åó„Å¶„ÅÑ„Çã„É≠„Éº„Ç´„É´„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØÂÜÖ„Å´Â≠òÂú®„Åô„ÇãDB„Çµ„Éº„Éê„ÉºÔºâ„Å´Âêà„Çè„Åõ„Å¶Â§âÊõ¥„Åó„Å¶‰∏ã„Åï„ÅÑ„ÄÇ  > OracleÊé•Á∂ö„ÅÆË®≠ÂÆö„ÅåÊ≠£„Åó„ÅÑ„ÅÆ„Å´„ÇÇÈñ¢„Çè„Çâ„ÅöÊé•Á∂ö‰∏çÂèØ„ÅÆÂ†¥Âêà„ÄÅOracle„Çµ„Éº„Éê„ÉºÔºàPCÔºâ„ÅÆ„Éï„Ç°„Ç§„Ç¢„Ç¶„Ç©„Éº„É´Ë®≠ÂÆö„Åß„ÄÅ**Âèó‰ø°„ÅÆË¶èÂâá„Åã„Çâ„Éù„Éº„Éà1521„ÇíËß£Êîæ**„Åó„Å¶„ÅÑ„Å™„ÅÑÂèØËÉΩÊÄß„ÇÇËÄÉ„Åà„Çâ„Çå„Åæ„Åô„ÄÇÁ¢∫Ë™ç„Åó„Å¶„Åø„Å¶‰∏ã„Åï„ÅÑ„ÄÇ  „Åì„Çå„Çâ„ÅÆÊâãÈ†Ü„Åß„ÄÅAndroidÁ´ØÊú´„Åã„ÇâOracle„Éá„Éº„Çø„Éô„Éº„Çπ„Å´Áõ¥Êé•Êé•Á∂ö„Åô„Çã‰∫ã„Åå„Åß„Åç„Åæ„Åô„ÄÇ"},"_id":"blog/42-connect-oracle-xamarin-cs.mdx","_raw":{"sourceFilePath":"blog/42-connect-oracle-xamarin-cs.mdx","sourceFileName":"42-connect-oracle-xamarin-cs.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/42-connect-oracle-xamarin-cs"},"type":"Post","slug":"/blog/42-connect-oracle-xamarin-cs","slugAsParams":"42-connect-oracle-xamarin-cs"},{"title":"Nx NestJS„ÇíVSCode„Åã„Çâ„Éá„Éê„ÉÉ„Ç∞„Åô„ÇãË®≠ÂÆö","description":"Nx NestJS „ÇíVSCode„Åã„Çâ„Éá„Éê„ÉÉ„Ç∞„Åô„ÇãË®≠ÂÆö„Åô„ÇãÊñπÊ≥ï„Åß„Åô„ÄÇËµ∑Âãï‰∏≠„ÅÆNestJS„Å´ÂØæ„Åó„Å¶„ÄÅ„Ç¢„Çø„ÉÉ„ÉÅ„É¢„Éº„Éâ„Åß„Éá„Éê„ÉÉ„Ç∞„Åó„Åæ„Åô„ÄÇ","date":"2023-05-28T00:00:00.000Z","emoji":"üêû","tags":["nx","next-js","vscode"],"published":true,"body":{"raw":" Nx NestJS„ÇíVSCode„Åã„Çâ„Éá„Éê„ÉÉ„Ç∞„Åô„ÇãË®≠ÂÆö„Åô„ÇãÊñπÊ≥ï„Åß„Åô„ÄÇ   Ëµ∑Âãï‰∏≠„ÅÆNestJS„Å´ÂØæ„Åó„Å¶„ÄÅ„Ç¢„Çø„ÉÉ„ÉÅ„É¢„Éº„Éâ„Åß„Éá„Éê„ÉÉ„Ç∞„Åó„Åæ„Åô„ÄÇ  ### 1. launch.json „Çí‰ΩúÊàê  VSCode„ÅÆÂÆüË°å„Å®„Éá„Éê„ÉÉ„Ç∞„ÄÄÔºû„ÄÄÊ≠ØËªä„Éú„Çø„É≥ „Åã„Çâ `launch.json`„Éï„Ç°„Ç§„É´„Çí‰ΩúÊàê  ```json {   \"version\": \"0.2.0\",   \"configurations\": [     {       \"type\": \"node\",       \"request\": \"attach\",       \"name\": \"Attach NestJS WS\",       \"restart\": true,       \"sourceMaps\": true,       \"cwd\": \"${workspaceFolder}/server\"     }   ] } ```  > `\"cwd\": \"${workspaceFolder}/server\"`„ÅÆ`server`„ÅØ„ÄÅ   > Nx„Åß‰ΩúÊàê„Åó„ÅüNestJS„ÅÆ„Éó„É≠„Ç∏„Çß„ÇØ„ÉàÂêçÔºà„Éï„Ç©„É´„ÉÄÂêçÔºâ„ÅÆ„Åü„ÇÅÈÅ©ÂÆúÂ§âÊõ¥„Åó„Å¶‰∏ã„Åï„ÅÑ„ÄÇ  ### 2. NestJS„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÇíËµ∑Âãï  VSCode„ÅÆ„Çø„Éº„Éü„Éä„É´„Åß„ÄÅ‰∏ãË®ò„Ç≥„Éû„É≥„Éâ„ÇíÂÆüË°å  ```shell nx serve server ```  ### 3. „Éá„Éê„ÉÉ„Ç∞„ÇíËµ∑Âãï  VSCode„ÅÆÂÆüË°å„Å®„Éá„Éê„ÉÉ„Ç∞„ÄÄÔºû„ÄÄ„Éá„Éê„ÉÉ„Ç∞„ÅÆÈñãÂßã  ![img](/blog/43/1.png)"},"_id":"blog/43-nx-nestjs-debug.mdx","_raw":{"sourceFilePath":"blog/43-nx-nestjs-debug.mdx","sourceFileName":"43-nx-nestjs-debug.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/43-nx-nestjs-debug"},"type":"Post","slug":"/blog/43-nx-nestjs-debug","slugAsParams":"43-nx-nestjs-debug"},{"title":"Angular„Åß„Éâ„É≠„ÉÉ„Éó„ÉÄ„Ç¶„É≥„ÇíÂà©Áî®„Åô„ÇãÊñπÊ≥ï","description":"Angular „Åß„Éâ„É≠„ÉÉ„Éó„ÉÄ„Ç¶„É≥„ÇíÂà©Áî®„Åô„ÇãÂ†¥Âêà„ÅØ„ÄÅngbDropdown„ÇíÂà©Áî®„Åó„Åæ„Åô„ÄÇngbDropdown„ÅØAngular Bootstrap„ÅÆ„Éâ„É≠„ÉÉ„Éó„ÉÄ„Ç¶„É≥„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„Åß„Åô„ÄÇngbDropdown„Çí‰Ωø„ÅÜÊñπÊ≥ï„ÅÆÂü∫Êú¨ÁöÑ„Å™ÊâãÈ†Ü„ÇíË™¨Êòé„Åó„Åæ„Åô„ÄÇ","date":"2023-06-03T00:00:00.000Z","emoji":"üêÜ","tags":["angular"],"published":true,"body":{"raw":" Angular „Åß„Éâ„É≠„ÉÉ„Éó„ÉÄ„Ç¶„É≥„ÇíÂà©Áî®„Åô„ÇãÂ†¥Âêà„ÅØ„ÄÅngbDropdown„ÇíÂà©Áî®„Åó„Åæ„Åô„ÄÇ   ngbDropdown„ÅØAngular Bootstrap„ÅÆ„Éâ„É≠„ÉÉ„Éó„ÉÄ„Ç¶„É≥„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„Åß„Åô„ÄÇ   ‰ª•‰∏ã„Å´ngbDropdown„Çí‰Ωø„ÅÜÊñπÊ≥ï„ÅÆÂü∫Êú¨ÁöÑ„Å™ÊâãÈ†Ü„ÇíË™¨Êòé„Åó„Åæ„Åô„ÄÇ    ![img](/blog/44/1.png)  ## 1. Angular Bootstrap„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åô„ÄÇ Angular Bootstrap„ÅØ„ÄÅBootstrap„ÅÆJavaScript„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÇíAngular„Åß‰ΩøÁî®„Åô„Çã„Åü„ÇÅ„ÅÆ„É©„Ç§„Éñ„É©„É™„Åß„Åô„ÄÇ   Ê¨°„ÅÆ„Ç≥„Éû„É≥„Éâ„Çí‰ΩøÁî®„Åó„Å¶„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åô„ÄÇ    ```bash npm install @ng-bootstrap/ng-bootstrap ```  ## 2. AppModule„ÅßÂøÖË¶Å„Å™„É¢„Ç∏„É•„Éº„É´„Çí„Ç§„É≥„Éù„Éº„Éà„Åó„Åæ„Åô„ÄÇ src/app/app.module.ts„Éï„Ç°„Ç§„É´„ÇíÈñã„Åç„ÄÅÊ¨°„ÅÆ„Ç≥„Éº„Éâ„ÇíËøΩÂä†„Åó„Åæ„Åô„ÄÇ    ```typescript import { NgbModule } from '@ng-bootstrap/ng-bootstrap';  @NgModule({   imports: [NgbModule],   // ... }) export class AppModule { } ```  ## 3. „Éâ„É≠„ÉÉ„Éó„ÉÄ„Ç¶„É≥„Çí‰ΩøÁî®„Åô„Çã„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„Çí‰ΩúÊàê„Åó„Åæ„Åô„ÄÇ ‰æã„Åà„Å∞„ÄÅapp.component.html„Éï„Ç°„Ç§„É´„ÇíÈñã„Åç„ÄÅÊ¨°„ÅÆ„Ç≥„Éº„Éâ„ÇíËøΩÂä†„Åó„Åæ„Åô„ÄÇ    ```html <div ngbDropdown>   <button class=\"btn btn-primary\" ngbDropdownToggle>Toggle Dropdown</button>   <div ngbDropdownMenu>     <button class=\"dropdown-item\">Action 1</button>     <button class=\"dropdown-item\">Action 2</button>     <button class=\"dropdown-item\">Action 3</button>   </div> </div> ```  ## 4. ÂøÖË¶Å„Å´Âøú„Åò„Å¶„ÄÅ„Éâ„É≠„ÉÉ„Éó„ÉÄ„Ç¶„É≥„ÅÆÂãï‰Ωú„Çí„Ç´„Çπ„Çø„Éû„Ç§„Ç∫„Åó„Åæ„Åô„ÄÇ ‰æã„Åà„Å∞„ÄÅ„Éâ„É≠„ÉÉ„Éó„ÉÄ„Ç¶„É≥„ÅåÈñã„ÅÑ„Åü„Å®„Åç„Å´ÁâπÂÆö„ÅÆ„Ç¢„ÇØ„Ç∑„Éß„É≥„ÇíÂÆüË°å„Åô„ÇãÂ†¥Âêà„ÅØ„ÄÅÊ¨°„ÅÆ„Çà„ÅÜ„Å´„Åó„Åæ„Åô„ÄÇ    ```html <div ngbDropdown (open)=\"onDropdownOpen()\" (close)=\"onDropdownClose()\">   <!-- ... --> </div> ```  ```typescript export class AppComponent {   onDropdownOpen() {     console.log('Dropdown opened');     // Èñã„ÅÑ„Åü„Å®„Åç„ÅÆ„Ç¢„ÇØ„Ç∑„Éß„É≥„ÇíËøΩÂä†   }    onDropdownClose() {     console.log('Dropdown closed');     // Èñâ„Åò„Åü„Å®„Åç„ÅÆ„Ç¢„ÇØ„Ç∑„Éß„É≥„ÇíËøΩÂä†   } } ```  ‰ª•‰∏ä„ÅångbDropdown„ÅÆÂü∫Êú¨ÁöÑ„Å™‰Ωø„ÅÑÊñπ„Åß„Åô„ÄÇ   „Åì„ÅÆ‰æã„Åß„ÅØ„ÄÅ„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„Éâ„É≠„ÉÉ„Éó„ÉÄ„Ç¶„É≥„ÅåË°®Á§∫„Åï„Çå„ÄÅÈÅ∏Êäû„Åó„Åü„Ç¢„Ç§„ÉÜ„É†„Å´Âøú„Åò„Åü„Ç¢„ÇØ„Ç∑„Éß„É≥„ÇíÂÆüË°å„Åß„Åç„Åæ„Åô„ÄÇ   „Åï„Çâ„Å´Ë©≥Á¥∞„Å™„Ç´„Çπ„Çø„Éû„Ç§„Ç∫„ÅØ„ÄÅAngular Bootstrap„ÅÆ„Éâ„Ç≠„É•„É°„É≥„Éà„ÇíÂèÇÁÖß„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ  "},"_id":"blog/44-angular-doropdown.mdx","_raw":{"sourceFilePath":"blog/44-angular-doropdown.mdx","sourceFileName":"44-angular-doropdown.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/44-angular-doropdown"},"type":"Post","slug":"/blog/44-angular-doropdown","slugAsParams":"44-angular-doropdown"},{"title":"Render.com„ÅÆ„Çπ„É™„Éº„ÉóÂØæÁ≠ñÔºàcron-job.orgÔºâ","description":"Render.com„ÅÆFree„Éó„É©„É≥„ÅØÈùû„Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Å™Áä∂ÊÖã„Åå15ÂàÜÈñìÁ∂ö„Åè„Å®„Çπ„É™„Éº„ÉóÁä∂ÊÖã„Å´„Å™„Çä„Åæ„Åô„ÄÇÂØæÁ≠ñ„Å®„Åó„Å¶„ÄÅÂÆöÊúüÁöÑ„Å™„É¨„Çπ„Éù„É≥„Çπ„ÇíÈÄÅ„Çã cron-job.org „ÅÆË®≠ÂÆöÊñπÊ≥ï„ÇíË™¨Êòé„Åó„Åæ„Åô„ÄÇ","date":"2023-06-11T00:00:00.000Z","emoji":"‚åö","tags":["render"],"published":true,"body":{"raw":" Render.com„ÅÆFree„Éó„É©„É≥„ÅØÈùû„Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Å™Áä∂ÊÖã„Åå15ÂàÜÈñìÁ∂ö„Åè„Å®„Çπ„É™„Éº„ÉóÁä∂ÊÖã„Å´„Å™„Çä„Åæ„Åô„ÄÇ    ÂØæÁ≠ñ„Å®„Åó„Å¶„ÄÅÂÆöÊúüÁöÑ„Å™„É¨„Çπ„Éù„É≥„Çπ„ÇíÈÄÅ„Çã[cron-job.org](https://console.cron-job.org/)„ÇíÂà©Áî®„Åó„Åæ„Åô„ÄÇ   „Åù„ÅÆÊâãÈ†Ü„ÇíÊÆã„Åó„Å¶„Åä„Åç„Åæ„Åô„ÄÇ  ## 1. cron-job.org„Å´„Ç¢„ÇØ„Çª„Çπ„Åó„Å¶„Ç¢„Ç´„Ç¶„É≥„Éà„Çí‰ΩúÊàê  [cron-job.org](https://console.cron-job.org/)    > ÂèÇËÄÉ„Çµ„Ç§„Éà   > [cron-job.org „ÇíÂà©Áî®„Åó„Å¶ÁâπÂÆö„ÅÆURL„Å´ÂÆöÊúüÁöÑ„Å´„Ç¢„ÇØ„Çª„Çπ„Åï„Åõ„Çã](https://laboradian.com/access-url-using-cron-job-org/)  ## 2. JOB„Çí‰ΩúÊàê Dashboard > CREATE CRONJOB „Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„Åæ„Åô„ÄÇ    ![image](/blog/45/1.png)    ## 3. COMMON„ÇíË®≠ÂÆö URL„ÇÑ„Ç¢„ÇØ„Çª„ÇπÈ†ªÂ∫¶„ÇíË®≠ÂÆö„Åó„Åæ„Åô„ÄÇ„Åì„Åì„Åß„ÅØ10ÂàÜ„Å´„Åó„Å¶„Åä„Åç„Åæ„Åô„ÄÇ ![image](/blog/45/2.png)    ÂÆüË°å„ÅåÂ§±Êïó„Åó„ÅüÊôÇ„ÅÆÈÄöÁü•Ë®≠ÂÆö„Åß„Åô„ÄÇÔºà‰ªªÊÑè„ÅßOKÔºâ   ![image](/blog/45/3.png)    ## 4. ADVANCED„ÇíË®≠ÂÆö Ê¨°„Å´„Çø„Éñ„Åã„ÇâADVANCE„Å´Âàá„ÇäÊõø„Åà„Å¶Ë®≠ÂÆö„Åó„Åæ„Åô„ÄÇ   ![image](/blog/45/4.png)    ÊúÄÂæå„Å´CREATE„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„Å¶ÁµÇ‰∫Ü„Åß„Åô„ÄÇ"},"_id":"blog/45-cron-job.mdx","_raw":{"sourceFilePath":"blog/45-cron-job.mdx","sourceFileName":"45-cron-job.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/45-cron-job"},"type":"Post","slug":"/blog/45-cron-job","slugAsParams":"45-cron-job"},{"title":"Custom Angular Material toggule button","description":"Here's how you can customize the appearance of an Angular Material toggle button. Although the method is unique, I'll explain it in this article.","date":"2023-07-16T00:00:00.000Z","emoji":"üéÜ","tags":["angular"],"published":true,"body":{"raw":" Here's how you can customize the appearance of an Angular Material toggle button. Although the method is unique, I'll explain it in this article.    ![image](/blog/46/1.png)    ## 1. How to use Angular Material button-toggle ### Install Angular Material ```bash ng add @angular/material ```  ### Import Angular Material button-toggle to Module file   ```ts import {MatButtonToggleModule} from '@angular/material/button-toggle' ```  ### Html   ```html <mat-button-toggle [aria-label]=\"alertsEnabled ? 'Disable alerts' : 'Enable alerts'\">   <mat-icon>notifications</mat-icon> </mat-button-toggle> ```  For more details, refer to the official documentation:     [Angular Material Official Documentation](https://material.angular.io/components/button-toggle)    ## 2. Modifying the Appearance of the Toggle Button The default toggle button has a square appearance. In this case, we'll make it a circular button and ensure that the outline is not displayed when clicked and focused.    ### Html ```html <mat-button-toggle mat-fab class=\"toggle-button\" aria-label=\"blog button\" #blogButton>     <span class=\"toggle-icon fas fa-blog\"></span> </mat-button-toggle> ```  ### SCSS ```css .toggle-button {     width: 60px;     height: 60px;     border-radius: 50% !important;     box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12) !important; }  .toggle-icon {     font-size: 30px; }  :host ::ng-deep .mat-button-toggle-button:focus {     outline: none; } ```  ![image](/blog/46/2.png)    Feel free to modify the SCSS according to your needs."},"_id":"blog/46-custom-angular-material-toggle-button.mdx","_raw":{"sourceFilePath":"blog/46-custom-angular-material-toggle-button.mdx","sourceFileName":"46-custom-angular-material-toggle-button.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/46-custom-angular-material-toggle-button"},"type":"Post","slug":"/blog/46-custom-angular-material-toggle-button","slugAsParams":"46-custom-angular-material-toggle-button"},{"title":"Angular prismjs example","description":"Here is how to apply prismjs to your code in Angular.By following this method, you will be able to apply prismjs to HTML stored in a database and display it on an Angular page.","date":"2023-07-17T00:00:00.000Z","emoji":"üå∫","tags":["angular"],"published":true,"body":{"raw":" Here is how to apply prismjs to your code in Angular.   By following this method, you will be able to apply prismjs to HTML stored in a database and display it on an Angular page.    # angular-prismjs-example  [Edit on StackBlitz ‚ö°Ô∏è](https://stackblitz.com/edit/stackblitz-starters-rnpfug)  ![image](/blog/47/1.png)    The steps are as follows:    ## 1. Install module  ```bash npm install prismjs ```  ## 2. Add services  src/services/  - prism.service.ts - html-utils.ts - safe-html.pipe.ts - shared.module.ts  ### prism.service.ts  ```ts import { isPlatformBrowser } from '@angular/common'; import { Inject, Injectable, PLATFORM_ID } from '@angular/core';  // importing prismjs order is important! import 'prismjs';  import 'prismjs/plugins/toolbar/prism-toolbar';  import 'prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard'; import 'prismjs/plugins/line-numbers/prism-line-numbers'; import 'prismjs/plugins/show-language/prism-show-language';  import 'prismjs/components/prism-csharp'; import 'prismjs/components/prism-css'; import 'prismjs/components/prism-java'; import 'prismjs/components/prism-javascript'; import 'prismjs/components/prism-json'; import 'prismjs/components/prism-markup'; import 'prismjs/components/prism-python'; import 'prismjs/components/prism-sass'; import 'prismjs/components/prism-scss'; import 'prismjs/components/prism-sql'; import 'prismjs/components/prism-typescript'; import 'prismjs/components/prism-visual-basic'; import 'prismjs/components/prism-xml-doc';  // eslint-disable-next-line @typescript-eslint/no-explicit-any declare const Prism: any;  @Injectable({   providedIn: 'root', // can inject anywahere }) export class PrismService {   constructor(@Inject(PLATFORM_ID) private platformId: object) {}    highlightAll() {     if (isPlatformBrowser(this.platformId)) {       Prism.highlightAll();     }   }    highlightHtml(html: string): string {     const div = document.createElement('div');     div.innerHTML = html;     const codeElements = div.querySelectorAll('code');     codeElements.forEach((el) => {       const lang =         el.getAttribute('class')?.replace('language-', '') || 'javascript';       el.innerHTML = Prism.highlight(         el.textContent || '',         Prism.languages[lang],         lang       );     });     return div.innerHTML;   } } ```  ### html-utils.ts  ```ts export function addClassToHtml(   html: string,   className: string,   tagName: string ): string {   const parser = new DOMParser();   const doc = parser.parseFromString(html, 'text/html');   const elements = doc.querySelectorAll(tagName);   elements.forEach((el) => {     el.classList.add(className);   });   return doc.documentElement.innerHTML; } ```  ### safe-html.pipe.ts  ```ts import { Pipe, PipeTransform } from '@angular/core'; import { DomSanitizer, SafeHtml } from '@angular/platform-browser';  /** usage  * [innerHTML]=\"value | safeHtml\"  */ @Pipe({ name: 'safeHtml' }) export class SafeHtmlPipe implements PipeTransform {   constructor(private sanitizer: DomSanitizer) {}    // eslint-disable-next-line @typescript-eslint/no-explicit-any   transform(html: any): SafeHtml {     const result = this.sanitizer.bypassSecurityTrustHtml(html);     return result;   } } ```  ### shared.module.ts  ```ts import { NgModule } from '@angular/core'; import { SafeHtmlPipe } from './safe-html.pipe';  @NgModule({   declarations: [SafeHtmlPipe],   exports: [SafeHtmlPipe], }) export class SharedModule {} ```  ## 3. Add prismjs style to global style sheet  ### global_styles.css  ```css /* Add application styles & imports to this file! */  /* Prismjs theme */ @import \"prismjs/themes/prism-okaidia.css\"; @import \"prismjs/plugins/toolbar/prism-toolbar.css\"; @import \"prismjs/plugins/line-numbers/prism-line-numbers.css\"; /* Available themes */ /* @import \"prismjs/themes/prism.css\"; @import \"prismjs/themes/prism-coy.css\"; @import \"prismjs/themes/prism-dark.css\"; @import \"prismjs/themes/prism-funky.css\"; @import \"prismjs/themes/prism-solarizedlight.css\"; @import \"prismjs/themes/prism-tomorrow.css\"; @import \"prismjs/themes/prism-twilight.css\"; */ ```  ## 4. Apply prismjs to html  ### main.ts  ```ts @Component({   selector: 'my-app',   standalone: true,   imports: [CommonModule, SharedModule],   templateUrl: './main.html',   styleUrls: ['./main.scss'] }) export class App implements OnInit,AfterViewChecked {   name = 'Angular';    highlighted = false;    code = `   <p>Here's how you can customize the appearance of an Angular Material toggle button. Although the method is unique, I'll explain it in this article.</p>\\n<h2>1. How to use Angular Material button-toggle</h2>\\n<h3>Install Angular Material</h3>\\n<pre><code class=\\\"language-bash\\\">ng add @angular/material\\n</code></pre>\\n<h3>Import Angular Material button-toggle to Module file</h3>\\n<pre><code class=\\\"language-ts\\\">import {MatButtonToggleModule} from '@angular/material/button-toggle'\\n</code></pre>\\n<h3>Html</h3>\\n<pre><code class=\\\"language-html\\\">&lt;mat-button-toggle [aria-label]=&quot;alertsEnabled ? 'Disable alerts' : 'Enable alerts'&quot;&gt;\\n  &lt;mat-icon&gt;notifications&lt;/mat-icon&gt;\\n&lt;/mat-button-toggle&gt;\\n</code></pre>\\n<p>For more details, refer to the official documentation:<br>\\n<a href=\\\"https://material.angular.io/components/button-toggle\\\">Angular Material Official Documentation</a></p> `;    constructor(private readonly prismService: PrismService) {}    ngOnInit(){       this.code = HtmlUtils.addClassToHtml(this.code, 'line-numbers', 'pre');   }    ngAfterViewChecked() {     if (!this.highlighted && this.code) {       this.prismService.highlightAll();       this.highlighted = true;     }   } } ```  ### main.html  ```html <h1>Hello from {{name}}!</h1> <a target=\"_blank\" href=\"https://angular.io/start\">   Learn more about Angular sample </a>  <div [innerHtml]=\"code | safeHtml\"></div> ``` "},"_id":"blog/47-angular-prismjs-example.mdx","_raw":{"sourceFilePath":"blog/47-angular-prismjs-example.mdx","sourceFileName":"47-angular-prismjs-example.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/47-angular-prismjs-example"},"type":"Post","slug":"/blog/47-angular-prismjs-example","slugAsParams":"47-angular-prismjs-example"},{"title":"How to Serve Next.js SSG (Static Site Generation) from Nx NestJS","description":"This article explains how to use the monorepo tool Nx to serve a statically generated site created with Next.js SSG (Static Site Generation) from a Next.js application. With this approach, you can have both the frontend and backend in a single project.","date":"2023-09-24T00:00:00.000Z","lastmod":"2023-09-24T00:00:00.000Z","emoji":"üñº","tags":["nx","nestjs","nextjs"],"published":true,"body":{"raw":" ## Introduction  In this article, we will explain how to use the monorepo tool Nx to serve a statically generated site created with Next.js SSG (Static Site Generation) from a Next.js application. This approach allows you to have both the frontend and backend in a single project.  ## 1. Create Frontend and Backend Projects  ### Create Nx Workspace and Nestjs Project  Navigate to the desired directory and run the following command:  ```bash npx create-nx-workspace@latest  ‚úî Where would you like to create your workspace? ¬∑ sample-workspace ‚úî Which stack do you want to use? ¬∑ node ‚úî What framework should be used? ¬∑ nest ‚úî Integrated monorepo, or standalone project? ¬∑ integrated ‚úî Application name ¬∑ api ‚úî Would you like to generate a Dockerfile? [https://docs.docker.com/] ¬∑ No ‚úî Enable distributed caching to make your CI faster ¬∑ No ```  This will create the Nestjs `api` project.  ### Create a Nextjs Project  ```bash nx g @nx/next:app web  ‚úî Which stylesheet format would you like to use? ¬∑ css ‚úî Which E2E test runner would you like to use? ¬∑ cypress ‚úî Would you like to use the App Router (recommended)? (Y/n) ¬∑ true ```  The directory structure created by the above commands will look like this:  ```text sample-workspace/   |- apps/   |    |- api/   |    |- web/ ```  ## 2. Enable Nextjs (Frontend) for SSG (Static Site Generation)  To enable support for static files, make the following changes:  * Add `unoptimized: true` in `images` (SSG doesn't support `next/image`). * Add `output: 'export'`. * Add `trailingSlash: true`.  ```js:apps/web/next.config.js const nextConfig = {   nx: {     // Set this to true if you would like to use SVGR     // See: https://github.com/gregberge/svgr     svgr: false   },    images: {     unoptimized: true,   },    output: 'export',    trailingSlash: true };  ```  > If you don't set `trailingSlash: true`, when accessing Nextjs via Nestjs, reloading the browser on pages other than the homepage will redirect you to the homepage. > > [NEXT.JS trailingSlash](https://nextjs.org/docs/app/api-reference/next-config-js/trailingSlash)  ## 3. Add ServeStaticModule to Nestjs (Backend)  ### Import the `serve-static` Package  ```bash npm i @nestjs/serve-static ```  ### Implement the ServeStaticModule  ```ts:apps/api/src/app/app.module.ts import { ServeStaticModule } from '@nestjs/serve-static';  import path, { join } from 'path';  // Other standard imports are omitted  @Module({   imports: [     ServeStaticModule.forRoot({       rootPath: join(__dirname, '..', 'web/.next'),       exclude: ['/api/*']     }),   ],    controllers: [AppController],    providers: [AppService] }) export class AppModule {} ```  With the above code, if the endpoint does not start with `/api`, it will redirect to the `.next` directory, which is the static site of Nextjs.  > At this point, the `.next` folder has not been generated yet. It will be generated later when you run Nextjs Build, as explained below.  ## 4. Add Build and Start Commands to `package.json`  Add the build and start commands to your `package.json` file.  ```json:package.json \"scripts\": {     \"cd:build-api\": \"npx nx build api --prod\",     \"cd:build-web\": \"npx nx build web --prod\",     \"cd:build\": \"npm run cd:build-api && npm run cd:build-web\",     \"cd:web-start:server\": \"cd dist/apps/web && npm run start\",     \"cd:web-start:static\": \"npx serve dist/apps/web/.next\",     \"cd:api-start\": \"node dist/apps/api/main.js\" } ```  Next, execute the build command:  ```bash npm run cd:build ```  This will generate build files for both the frontend (web) and backend (api).  Finally, execute the start command:  ```bash npm run cd:api-start ```  This will start the backend server on localhost, and you can access the Next.js pages in your browser.  By deploying these, you can serve both the frontend and backend integrated on a single server.  For reference, here is the directory structure after the build:  ```text sample-workspace/   |- apps/   |    |- api/   |    |- web/   |   |-dist/  <= generated after the build   |   |- apps/   |        |- api/      |        |- web/   |             |- .next/   |   |- package.json ``` "},"_id":"blog/48-nx-nestjs-nextjs-ssg.mdx","_raw":{"sourceFilePath":"blog/48-nx-nestjs-nextjs-ssg.mdx","sourceFileName":"48-nx-nestjs-nextjs-ssg.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/48-nx-nestjs-nextjs-ssg"},"type":"Post","slug":"/blog/48-nx-nestjs-nextjs-ssg","slugAsParams":"48-nx-nestjs-nextjs-ssg"},{"title":"C# Prism Template Pack Code Snippets (Visual Studio Code)","description":"Visual Studio Code snippets for C# Prism Template Pack.","date":"2023-09-30T00:00:00.000Z","lastmod":"2023-09-30T00:00:00.000Z","emoji":"üå≥","tags":["vscode","csharp"],"published":true,"body":{"raw":" ## Registering Custom Code Snippets in Visual Studio Code  You can create code snippet files using the following steps:  1. Select **File > Preferences > User Snippets** from the code editor's top menu.  2. Snippets are written in JSON format.  ## Code Snippets  ### propp  Defines a property that requires update notifications.  ```json   \"Create Bindable Property\": {     \"scope\": \"csharp\",     \"prefix\": \"propp\",     \"body\": [       \"private ${1:Type} _${3:${2/(.*)/${1:/camelcase}/}};\",       \"public ${1:Type} ${2:Name}\",       \"{\",       \"   get { return _$3; }\",       \"   set { SetProperty(ref _$3, value); }\",       ,       \"}\"     ],     \"description\": \"Create a property, with a backing field, that depends on BindableBase.\"   } ```  #### About `${3:...}`  * `${2/(.*)/${1:/camelcase}/}`: This part is a combination of regular expression and replacement pattern. It generates the name of the backing field based on the value of `${2:Name}`. * `(.*)`: This is a regular expression capture group. It captures the property name (Name) entered by the user. * `${1:/camelcase}`: This is a replacement pattern for converting the captured string to camel case. `${1:...}` references the captured value, and `:camelcase` instructs camel case conversion.  ### cmd  Delegate command.  ```json   \"Create DelegateCommand Property\": {     \"scope\": \"csharp\",     \"prefix\": \"cmd\",     \"body\": [       \"public DelegateCommand ${1:Command} => new DelegateCommand(() =>\",        \"{\",        \"\",        \"});\"     ],     \"description\": \"Create a DelegateCommand property with a private setter.\"   } ```  ### cmdg  Parameterized delegate command.  ```json   \"Create Generic DelegateCommand Property\": {     \"scope\": \"csharp\",     \"prefix\": \"cmdg\",     \"body\": [       \"public DelegateCommand<${2:Param}> ${1:Command} => new DelegateCommand<${2:Param}>((p) =>\",       \"{\",       \"\",       \"});\"     ],     \"description\": \"Create a generic DelegateCommand property.\"   } ```"},"_id":"blog/49-cs-prism-snippet.mdx","_raw":{"sourceFilePath":"blog/49-cs-prism-snippet.mdx","sourceFileName":"49-cs-prism-snippet.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/49-cs-prism-snippet"},"type":"Post","slug":"/blog/49-cs-prism-snippet","slugAsParams":"49-cs-prism-snippet"},{"title":"How to Use shadcn with Nx Next.js","description":"Explaining how to use shadcn in Nx monorepo with Next.js.","date":"2023-10-11T00:00:00.000Z","lastmod":"2023-10-11T00:00:00.000Z","emoji":"üåô","tags":["nx","nextjs","shadcnui"],"published":true,"body":{"raw":" ## Introduction  In this guide, we will explain how to use shadcn in Nx monorepo with Next.js.  ## 1. Initialize Nx and Create a Next.js Project  ```bash npx create-nx-workspace@latest ```  ```bash npm i -D @nx/next ```  ```bash nx g @nx/next:app web --tags \"scope:web\"  ‚úî Which stylesheet format would you like to use? ¬∑ css ‚úî Which E2E test runner would you like to use? ¬∑ cypress ‚úî Would you like to use the App Router (recommended)? (Y/n) ¬∑ true ```  ## 2. Add Tailwind  ```bash nx g @nx/react:setup-tailwind --project=web ```  ## 3. Add Library for shadcn  ```bash npx nx generate @nx/next:library ui-shadcn --directory=web --importPath=@libs/web/ui-shadcn --tags=scope:web --bundler=swc  ‚úî Which stylesheet format would you like to use? ¬∑ css ```  After creating the library, perform the following steps:  - Delete `server.ts`. - Create a `components` folder at the root of the `src` folder.  At this point, your directory structure should look like this:  ```txt (your workspace)   |- apps/   |    |- web/   |   |- libs/   |    |- web/   |        |- ui-shadcn/   |             |- src/   |                 |- components/   |                 |- index.ts   |- package.json ```  ## 4. Add shadcn/ui  ```bash npm install tailwindcss-animate class-variance-authority clsx tailwind-merge ```  ```bash npm install @radix-ui/react-icons ```  Edit `tailwind.config.js`:  ```js:apps/web/tailwind.config.js /** @type {import('tailwindcss').Config} */ const { fontFamily } = require('tailwindcss/defaultTheme'); const { createGlobPatternsForDependencies } = require('@nx/react/tailwind'); const { join } = require('path');  module.exports = {   darkMode: ['class'],   content: [     join(       __dirname,       '{src,pages,components,app}/**/*!(*.stories|*.spec).{ts,tsx,html}'     ),     ...createGlobPatternsForDependencies(__dirname),   ],   theme: {     container: {       center: true,       padding: '2rem',       screens: {         '2xl': '1400px',       },     },     extend: {       colors: {         border: 'hsl(var(--border))',         input: 'hsl(var(--input))',         ring: 'hsl(var(--ring))',         background: 'hsl(var(--background))',         foreground: 'hsl(var(--foreground))',         primary: {           DEFAULT: 'hsl(var(--primary))',           foreground: 'hsl(var(--primary-foreground))',         },         secondary: {           DEFAULT: 'hsl(var(--secondary))',           foreground: 'hsl(var(--secondary-foreground))',         },         destructive: {           DEFAULT: 'hsl(var(--destructive))',           foreground: 'hsl(var(--destructive-foreground))',         },         muted: {           DEFAULT: 'hsl(var(--muted))',           foreground: 'hsl(var(--muted-foreground))',         },         accent: {           DEFAULT: 'hsl(var(--accent))',           foreground: 'hsl(var(--accent-foreground))',         },         popover: {           DEFAULT: 'hsl(var(--popover))',           foreground: 'hsl(var(--popover-foreground))',         },         card: {           DEFAULT: 'hsl(var(--card))',           foreground: 'hsl(var(--card-foreground))',         },       },       borderRadius: {         lg: `var(--radius)`,         md: `calc(var(--radius) - 2px)`,         sm: 'calc(var(--radius) - 4px)',       },       fontFamily: {         sans: ['var(--font-sans)', ...fontFamily.sans],       },       keyframes: {         'accordion-down': {           from: { height: 0 },           to: { height: 'var(--radix-accordion-content-height)' },         },         'accordion-up': {           from: { height: 'var(--radix-accordion-content-height)' },           to: { height: 0 },         },       },       animation: {         'accordion-down': 'accordion-down 0.2s ease-out',         'accordion-up': 'accordion-up 0.2s ease-out',       },     },   },   plugins: [require('tailwindcss-animate')], }; ```  Add `global.css`:  ```css:apps/web/styles/global.css @tailwind base; @tailwind components; @tailwind utilities;  @layer base {   :root {     --background: 0 0% 100%;     --foreground: 222.2 47.4% 11.2%;      --muted: 210 40% 96.1%;     --muted-foreground: 215.4 16.3% 46.9%;      --popover: 0 0% 100%;     --popover-foreground: 222.2 47.4% 11.2%;      --border: 214.3 31.8% 91.4%;     --input: 214.3 31.8% 91.4%;      --card: 0 0% 100%;     --card-foreground: 222.2 47.4% 11.2%;      --primary: 222.2 47.4% 11.2%;     --primary-foreground: 210 40% 98%;      --secondary: 210 40% 96.1%;     --secondary-foreground: 222.2 47.4% 11.2%;      --accent: 210 40% 96.1%;     --accent-foreground: 222.2 47.4% 11.2%;      --destructive: 0 100% 50%;     --destructive-foreground: 210 40% 98%;      --ring: 215 20.2% 65.1%;      --radius: 0.5rem;   }    .dark {     --background: 224 71% 4%;     --foreground: 213 31% 91%;      --muted: 223 47% 11%;     --muted-foreground: 215.4 16.3% 56.9%;      --accent: 216 34% 17%;     --accent-foreground: 210 40% 98%;      --popover: 224 71% 4%;     --popover-foreground: 215 20.2% 65.1%;      --border: 216 34% 17%;     --input: 216 34% 17%;      --card: 224 71% 4%;     --card-foreground: 213 31% 91%;      --primary: 210 40% 98%;     --primary-foreground: 222.2 47.4% 1.2%;      --secondary: 222.2 47.4% 11.2%;     --secondary-foreground: 210 40% 98%;      --destructive: 0 63% 31%;     --destructive-foreground: 210 40% 98%;      --ring: 216 34% 17%;      --radius: 0.5rem;   } }  @layer base {   * {     @apply border-border;   }   body {     @apply bg-background text-foreground;     font-feature-settings: \"rlig\" 1, \"calt\" 1;   } } ```  ## 5. Add util.ts for shadcn  **utils.ts**  ```ts:libs/web/ui-shadcn/src/lib/utils.ts import { clsx, type ClassValue } from 'clsx'; import { twMerge } from 'tailwind-merge';  export function cn(...inputs: ClassValue[]) {   return twMerge(clsx(inputs)); } ```  ## 6. Add component.json in the root directory  **components.json**  ```json:components.json {   \"$schema\": \"https://ui.shadcn.com/schema.json\",   \"style\": \"new-york\",   \"rsc\": false,   \"tailwind\": {     \"config\": \"apps/web/tailwind.config.js\",     \"css\": \"apps/web/app/styles/global.css\",     \"baseColor\": \"stone\",     \"cssVariables\": true   },   \"aliases\": {     \"components\": \"@libs/web/ui-shadcn/components\",     \"utils\": \"@libs/web/ui-shadcn/lib/utils\"   } } ```  ## 7. Add tsconfig.json in the root directory  The `tsconfig.json` is necessary for shacn/ui CLI commands.  **tsconfig.json**  ```json:tsconfig.json {   \"compilerOptions\": {     \"baseUrl\": \".\",     \"paths\": {       \"@libs/web/ui-shadcn\": [\"libs/web/ui-shadcn/src/index.ts\"],       \"@libs/web/ui-shadcn/*\": [\"libs/web/ui-shadcn/src/*\"]     }   } }  ```  With these steps, your setup is complete.  ## 8. Implement shadcn/ui Components  Use the shadcn/ui CLI to install components:  ```bash npx shadcn-ui@latest add button ```  Edit the component's tsx file:  - Add `'use client'`. - Resolve the `@nx/enforce-module-boundaries` warning.  ```tsx:libs/web/ui-shadcn/src/components/ui/button.tsx 'use client'; ... // eslint-disable-next-line @nx/enforce-module-boundaries import { cn } from '@libs/web/ui-shadcn/lib/utils'; ... ```  Add exports for the components in `index.ts`:  ```ts:libs/web/ui-shadcn/src/index.ts export * from './components/ui/button'; ```  Implement the component in `page.tsx`:  ```tsx:page.tsx import { Button } from '@libs/web/ui-shadcn';  const Page = () => {   return <Button>Button</Button> }  export default Page; ```  ## References  - [shadcn/ui Documentation](https://ui.shadcn.com/docs/installation/manual) - [GitHub Issue: component.json needs to load tsconfig.json](https://github.com/shadcn-ui/ui/issues/718)  "},"_id":"blog/50-nx-nextjs-shadcn.mdx","_raw":{"sourceFilePath":"blog/50-nx-nextjs-shadcn.mdx","sourceFileName":"50-nx-nextjs-shadcn.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/50-nx-nextjs-shadcn"},"type":"Post","slug":"/blog/50-nx-nextjs-shadcn","slugAsParams":"50-nx-nextjs-shadcn"},{"title":"electron-react-boilerplate Áí∞Â¢ÉÊßãÁØâÔºàProxy, Áí∞Â¢ÉÂ§âÊï∞Ôºâ","description":"Electron + React„Éá„Çπ„ÇØ„Éà„ÉÉ„Éó„Ç¢„Éó„É™„ÅÆÁí∞Â¢É„Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó„Ç¨„Ç§„Éâ„ÄÇNode.js„Å®ProxyË®≠ÂÆö„ÄÅboilerplate„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆ„ÇØ„É≠„Éº„É≥„ÄÅ‰æùÂ≠òÈñ¢‰øÇ„ÅÆ„Ç§„É≥„Çπ„Éà„Éº„É´ÊñπÊ≥ï„ÇíÊèê‰æõ„ÄÇ","date":"2023-10-29T00:00:00.000Z","lastmod":"2023-11-07T00:00:00.000Z","emoji":"‚ö°","tags":["electron"],"published":true,"body":{"raw":" ## Electron„Å®React„ÇíÁµÑ„ÅøÂêà„Çè„Åõ„Åü„Éá„Çπ„ÇØ„Éà„ÉÉ„Éó„Ç¢„Éó„É™„ÅÆÁí∞Â¢É„Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó  Electron„ÅØ„ÄÅHTML„ÄÅCSS„ÄÅJavaScript„ÇíÁî®„ÅÑ„Å¶„Éá„Çπ„ÇØ„Éà„ÉÉ„Éó„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÇíÈñãÁô∫„Åô„Çã„Åü„ÇÅ„ÅÆÂº∑Âäõ„Å™„Éï„É¨„Éº„É†„ÉØ„Éº„ÇØ„Åß„Åô„ÄÇ„Åì„ÅÆË®ò‰∫ã„Åß„ÅØ„ÄÅWindowsÁí∞Â¢É„ÅßElectron„Å®React„ÇíÁµÑ„ÅøÂêà„Çè„Åõ„Åü„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆÁí∞Â¢É„Çª„ÉÉ„Éà„Ç¢„ÉÉ„ÉóÊñπÊ≥ï„Å´„Å§„ÅÑ„Å¶Ë©≥„Åó„ÅèË™¨Êòé„Åó„Åæ„Åô„ÄÇ‰ª•‰∏ã„ÅÆÊâãÈ†Ü„Å´Âæì„Å£„Å¶„ÄÅ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÇíÂßã„ÇÅ„Åæ„Åó„Çá„ÅÜ„ÄÇ  ### 1. ÂâçÊèêÊù°‰ª∂  ÊúÄÂàù„Å´„ÄÅNode.js„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇNode.js„ÅØ„ÄÅElectron„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÇíÊßãÁØâ„Åô„Çã„Åü„ÇÅ„Å´ÂøÖË¶Å„Å™„É©„É≥„Çø„Ç§„É†Áí∞Â¢É„Åß„Åô„ÄÇNode.js„Çí„Åæ„Å†„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Å¶„ÅÑ„Å™„ÅÑÂ†¥Âêà„ÅØ„ÄÅ[Node.js„ÅÆÂÖ¨Âºè„Ç¶„Çß„Éñ„Çµ„Ç§„Éà](https://nodejs.org/)„Åã„ÇâÊúÄÊñ∞„Éê„Éº„Ç∏„Éß„É≥„Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åó„Å¶„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ  ### 2. npm„Å´„Ç¢„ÇØ„Çª„Çπ„Åô„Çã„Åü„ÇÅ„ÅÆProxyË®≠ÂÆö  Proxy„Çµ„Éº„Éê„Éº„ÇíÂà©Áî®„Åó„Å¶„ÅÑ„ÇãÂ†¥Âêà„ÄÅnpm„ÇíÊ≠£„Åó„ÅèË®≠ÂÆö„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ‰ª•‰∏ã„ÅÆ„Ç≥„Éû„É≥„Éâ„Çí‰ΩøÁî®„Åó„Å¶„ÄÅnpm„ÅÆProxyË®≠ÂÆö„ÇíË°å„ÅÑ„Åæ„Åô„ÄÇ  ```powershell npm config set strict-ssl false npm config registry \"http://registry.npmjs.org\" npm config set proxy \"Âà©Áî®„Åó„Å¶„ÅÑ„ÇãProxy„ÅÆURL\" npm config set https-proxy \"Âà©Áî®„Åó„Å¶„ÅÑ„ÇãProxy„ÅÆURL\" ```  „Åì„Çå„Å´„Çà„Çä„ÄÅnpm„ÅåProxy„ÇíÁµåÁî±„Åó„Å¶ÂøÖË¶Å„Å™„Éë„ÉÉ„Ç±„Éº„Ç∏„Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åß„Åç„Çã„Çà„ÅÜ„Å´„Å™„Çä„Åæ„Åô„ÄÇ  ### 3. electron-react-boilerplate„ÅÆ„ÇØ„É≠„Éº„É≥  Ê¨°„Å´„ÄÅGitHub„Åã„Çâ`electron-react-boilerplate`„Çí„ÇØ„É≠„Éº„É≥„Åó„Å¶„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÇíÂßã„ÇÅ„Åæ„Åô„ÄÇ‰ª•‰∏ã„ÅÆ„Ç≥„Éû„É≥„Éâ„Çí‰ΩøÁî®„Åó„Åæ„Åô„ÄÇ  ```powershell git clone --depth 1 --branch main https://github.com/electron-react-boilerplate/electron-react-boilerplate your-project-name ```  „Åì„Åì„Åß`your-project-name`„ÅØ„ÄÅ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆÂêçÂâç„ÇíÊåáÂÆö„Åô„ÇãÁÆáÊâÄ„Åß„Åô„ÄÇÈÅ©Âàá„Å™„Éó„É≠„Ç∏„Çß„ÇØ„ÉàÂêç„Å´Â§âÊõ¥„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ  ### 4. ÂøÖË¶Å„Å™„Éë„ÉÉ„Ç±„Éº„Ç∏„ÅÆ„Ç§„É≥„Çπ„Éà„Éº„É´  „Éó„É≠„Ç∏„Çß„ÇØ„Éà„Éï„Ç©„É´„ÉÄ„Å´ÁßªÂãï„Åó„ÄÅÂøÖË¶Å„Å™„Éë„ÉÉ„Ç±„Éº„Ç∏„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åô„ÄÇ‰ª•‰∏ã„ÅÆÊâãÈ†Ü„ÇíÂÆüË°å„Åó„Åæ„Åô„ÄÇ  1. Powershell„ÇíÈñã„Åç„ÄÅ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Éï„Ç©„É´„ÉÄ„Å´ÁßªÂãï„Åó„Åæ„Åô„ÄÇ  ```powershell cd your-project-name ```  2. Áí∞Â¢ÉÂ§âÊï∞„ÅÆË®≠ÂÆö  Electron„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åô„Çã„Åü„ÇÅ„Å´Áí∞Â¢ÉÂ§âÊï∞„ÇíË®≠ÂÆö„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ‰ª•‰∏ã„ÅÆ„Ç≥„Éû„É≥„Éâ„Çí‰ΩøÁî®„Åó„Å¶Ë®≠ÂÆö„Åó„Åæ„Åô„ÄÇ  ```powershell $env:ELECTRON_GET_USE_PROXY = 1 $env:GLOBAL_AGENT_HTTPS_PROXY = \"Âà©Áî®„Åó„Å¶„ÅÑ„ÇãProxy„ÅÆURL\" ```  3. „Éë„ÉÉ„Ç±„Éº„Ç∏„ÅÆ„Ç§„É≥„Çπ„Éà„Éº„É´  ÊúÄÂæå„Å´„ÄÅ‰ª•‰∏ã„ÅÆ„Ç≥„Éû„É≥„Éâ„ÇíÂÆüË°å„Åó„Å¶ÂøÖË¶Å„Å™„Éë„ÉÉ„Ç±„Éº„Ç∏„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åô„ÄÇ  ```powershell npm install ```  „Åì„Çå„Åß„ÄÅElectron„Å®React„ÇíÁµÑ„ÅøÂêà„Çè„Åõ„Åü„Éá„Çπ„ÇØ„Éà„ÉÉ„Éó„Ç¢„Éó„É™„ÅÆ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Åå„Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó„Åï„Çå„Åæ„Åó„Åü„ÄÇÂøÖË¶Å„Å™„É©„Ç§„Éñ„É©„É™„ÇÑ‰æùÂ≠òÈñ¢‰øÇ„ÅåËß£Ê±∫„Åï„Çå„ÄÅÈñãÁô∫„ÇíÈñãÂßã„Åß„Åç„Åæ„Åô„ÄÇ  ### ÂèÇËÄÉURL  - [Electron + React„Åß„Éá„Çπ„ÇØ„Éà„ÉÉ„Éó„Ç¢„Éó„É™„Çí‰Ωú„Çç„ÅÜÔºÅ](https://qiita.com/udayaan/items/2a7c8fd0771d4d995b69) - [ProxyÁí∞Â¢É„ÅßElectron„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Çà„ÅÜ„Å®„Åó„Åü„ÇâÈö†„Çå„ÅüÁΩ†„Åå„ÅÇ„Å£„Åü„Çì„Åß„Åô](https://qiita.com/LuckyRetriever/items/2f377b1ce34f7d12903c)  „Åì„ÅÆ„Ç¨„Ç§„Éâ„ÇíÈÄö„Åò„Å¶„ÄÅElectron„Å®React„ÇíÁµÑ„ÅøÂêà„Çè„Åõ„Åü„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÇíÂäπÊûúÁöÑ„Å´ÈñãÂßã„Åß„Åç„Åæ„Åô„ÄÇ   ÈñãÁô∫„ÇíÈÄ≤„ÇÅ„Å¶„ÄÅ„Éá„Çπ„ÇØ„Éà„ÉÉ„Éó„Ç¢„Éó„É™„Çí‰ΩúÊàê„Åó„Å¶„Åø„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ"},"_id":"blog/51-electron-react-boilerplate.mdx","_raw":{"sourceFilePath":"blog/51-electron-react-boilerplate.mdx","sourceFileName":"51-electron-react-boilerplate.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/51-electron-react-boilerplate"},"type":"Post","slug":"/blog/51-electron-react-boilerplate","slugAsParams":"51-electron-react-boilerplate"},{"title":"Excel VBA „ÉÜ„É≥„Éó„É¨„Éº„Éà„Éï„Ç°„Ç§„É´ÔºàÊîπËâØÁâà mk2Ôºâ","description":"Excel VBA „ÉÜ„É≥„Éó„É¨„Éº„Éà„Éï„Ç°„Ç§„É´„Çí‰ΩúÊàê„Åó„Åæ„Åó„Åü„ÄÇ„ÇØ„É©„Çπ„É¢„Ç∏„É•„Éº„É´„Çí‰∏≠ÂøÉ„Å´„ÄÅExcel„ÉÜ„Éº„Éñ„É´„Å®ÈÄ£Êê∫„Åó„ÅüDBÔºàOracleÔºâ„ÅÆCRUDÊìç‰ΩúÁ≠â„ÅÆÊ©üËÉΩ„ÇíÂÆüË£Ö„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ","date":"2023-10-29T00:00:00.000Z","lastmod":"2023-10-29T00:00:00.000Z","emoji":"ü¶Ä","tags":["vba"],"published":true,"body":{"raw":" ![sample](/blog/52/1-sample.png)  ## Ê¶ÇË¶Å  Excel VBA „ÉÜ„É≥„Éó„É¨„Éº„Éà„Éï„Ç°„Ç§„É´„Çí‰ΩúÊàê„Åó„Åæ„Åó„Åü„ÄÇ„ÇØ„É©„Çπ„É¢„Ç∏„É•„Éº„É´„Çí‰∏≠ÂøÉ„Å´„ÄÅExcel„ÉÜ„Éº„Éñ„É´„Å®ÈÄ£Êê∫„Åó„ÅüDBÔºàOracleÔºâ„ÅÆCRUDÊìç‰ΩúÁ≠â„ÅÆÊ©üËÉΩ„ÇíÂÆüË£Ö„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  Excel„Éï„Ç°„Ç§„É´Âèä„Å≥„Éâ„Ç≠„É•„É°„É≥„Éà„ÅØ‰∏ãË®ò„É™„Éù„Ç∏„Éà„É™„Å´‰øùÂ≠ò„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  [https://github.com/atman-33/template-excel-vba-mk2](https://github.com/atman-33/template-excel-vba-mk2)  ## 1. ‰∏ª„Å™ÂÆüË£ÖÊ©üËÉΩ - Config„Ç∑„Éº„Éà„ÅÆ„Éá„Éº„Çø„ÇíVBA„ÅßÂà©Áî® - Oracle„Éá„Éº„Çø„Éô„Éº„Çπ„Å´Êé•Á∂ö„Åó„ÄÅExcel„ÉÜ„Éº„Éñ„É´„Å´„Éá„Éº„ÇøÊ†ºÁ¥ç/ÂâäÈô§„Åô„ÇãÊ©üËÉΩ - Excel„ÉÜ„Éº„Éñ„É´Êìç‰ΩúÊ©üËÉΩÔºà„ÇΩ„Éº„Éà„ÄÅ„Éï„Ç£„É´„Çø„ÉºÔºâ  ## 2. „É¢„Ç∏„É•„Éº„É´ÊßãÊàê  ```text |- Ê®ôÊ∫ñ„É¢„Ç∏„É•„Éº„É´/ |   |- Constants        : ÂÖ±ÈÄö„ÅÆÂÆöÊï∞„ÇíË®òËºâ |   |- ModuleCommon     : Static„Å™ÂÖ±ÈÄöÂá¶ÁêÜ„ÇíË®òËºâ |   |- Tests            : „É¶„Éã„ÉÉ„Éà„ÉÜ„Çπ„ÉàÁî®„Ç≥„Éº„ÉâÁΩÆ„ÅçÂ†¥ |   |- Utils            : Ê±éÁî®„É°„ÇΩ„ÉÉ„ÉâÁΩÆ„ÅçÂ†¥ | |- „ÇØ„É©„Çπ„É¢„Ç∏„É•„Éº„É´/ |   |- Config           : Excel„Ç∑„Éº„Éà„Å´ÊåáÂÆö„Åó„ÅüConfig„ÇíÊâ±„ÅÜ„ÇØ„É©„Çπ |   |- DaoAccess        : Access „Å´Êé•Á∂ö„Åó„ÄÅCRUDÂá¶ÁêÜ„ÇíË°å„ÅÜDAO„ÇØ„É©„Çπ |   |- DaoOracleOra     : Oracle „Å´Êé•Á∂ö„Åó„ÄÅCRUDÂá¶ÁêÜ„ÇíË°å„ÅÜDAO„ÇØ„É©„Çπ |   |- ExListObject     : „ÉÜ„Éº„Éñ„É´ÔºàListObjectÔºâ„ÅÆÊ©üËÉΩÊã°Âºµ„ÇØ„É©„Çπ |   |- IDao             : DAO„ÇØ„É©„Çπ„ÅÆ„Ç§„É≥„Çø„Éº„Éï„Çß„Éº„Çπ |   |- Repository       : DAO„ÇØ„É©„Çπ„ÇíÂà©Áî®„Åô„Çã„É™„Éù„Ç∏„Éà„É™„ÇØ„É©„Çπ |   |- TableXxx         : Excel„ÉÜ„Éº„Éñ„É´„ÇíÊìç‰Ωú„Åô„Çã„ÇØ„É©„Çπ |   |- SheetXxx         : Excel„Ç∑„Éº„Éà„ÇíÊìç‰Ωú„Åô„Çã„ÇØ„É©„Çπ |  ```  ## 3. „Ç∑„Éº„ÉàË™¨Êòé  ### Sample1 „Ç∑„Éº„Éà  Sample1„Ç∑„Éº„Éà„Åß„ÅØ„ÄÅOracleDB„ÅÆ„Éá„Éº„Çø„ÇíÂèñÂæó„ÉªÂ§âÊõ¥„Åß„Åç„Åæ„Åô„ÄÇ   „Åæ„Åü„ÄÅDB„Åã„ÇâÂèñÂæó„Åó„ÅüExcel„ÉÜ„Éº„Éñ„É´„Å´Ë≤º„Çä‰ªò„Åë„Åó„ÄÅ„ÇΩ„Éº„Éà„ÇÑ„Éï„Ç£„É´„Çø„Éº„Åô„ÇãÊ©üËÉΩ„ÇíÂÆüË£Ö„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ![sample](/blog/52/1-sample.png)  Excel„ÉÜ„Éº„Éñ„É´„ÅÆ„Äå‰øùÂ≠ò„Äç„Éª„ÄåÂâäÈô§„Äç„Ç¢„Ç§„Ç≥„É≥„Çí„ÉÄ„Éñ„É´„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅ„ÇØ„É™„ÉÉ„ÇØ„Åó„Åü„É¨„Ç≥„Éº„Éâ„ÇíDB„Å´‰øùÂ≠ò„ÇÇ„Åó„Åè„ÅØÂâäÈô§„Åß„Åç„Åæ„Åô„ÄÇ  DBÊé•Á∂öË®≠ÂÆö„ÇÑ„Éá„Éº„ÇøÂèñÂæó„Åô„ÇãSQL„ÅØ„ÄÅÂæåËø∞„ÅÆConfig„Ç∑„Éº„Éà„ÉªSQL„Ç∑„Éº„Éà„ÅßÊåáÂÆö„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ### Config „Ç∑„Éº„Éà  DBÊé•Á∂öÊÉÖÂ†±Á≠â„ÄÅVBA„ÅßÂà©Áî®„Åô„Çã„Åü„ÇÅ„ÅÆË®≠ÂÆö„ÇíË°å„ÅÜ„Ç∑„Éº„Éà„Åß„Åô„ÄÇ „Åì„ÅÆ„Ç∑„Éº„Éà„Å´Ê†ºÁ¥ç„Åó„ÅüKey„Å®Item„ÅØ„ÄÅVBAÂÅ¥„ÅßÂëº„Å≥Âá∫„Åô‰∫ã„Åå„Åß„Åç„Åæ„Åô„ÄÇ  ![config](/blog/52/2-config.png)  ```vb:Config.cls ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' „ÇØ„É©„ÇπÔºöConfig ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----  ' ---- ÂÆöÊï∞Ë®≠ÂÆö ---- ' Const CONFIG_SHEET = \"Config\" Const CONFIG_TABLE = \"Config_tbl\" Const CONFIG_COL_KEY = \"Key\" Const CONFIG_COL_ITEM = \"Item\" ' ------------------ '  Private dictionary_ As Object  ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' Summary : „Ç≥„É≥„Çπ„Éà„É©„ÇØ„Çø ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Private Sub Class_Initialize()          Set dictionary_ = CreateObject(\"Scripting.Dictionary\")          ' Config„ÉÜ„Éº„Éñ„É´„ÇíÊ†ºÁ¥ç     Dim table As ListObject     Set table = ThisWorkbook.Worksheets(CONFIG_SHEET).ListObjects(CONFIG_TABLE)          ' Config„ÉÜ„Éº„Éñ„É´„ÅÆKey„Å®Item„ÇíËæûÊõ∏„Å´Ê†ºÁ¥ç     Dim key As String, Item As String          Dim i As Long     For i = 1 To table.ListRows.Count         key = table.ListColumns(CONFIG_COL_KEY).DataBodyRange(i).Value         Item = table.ListColumns(CONFIG_COL_ITEM).DataBodyRange(i).Value              Call dictionary_.Add(key, Item)     Next i          ' ---- Debug ---- '     Dim varItem As Variant     Dim str As String     For Each varItem In dictionary_         str = str & varItem & \":\" & dictionary_.Item(varItem) & vbCrLf     Next          Debug.Print str '    Debug.Print dictionary_.Item(\"ORA_DATA_SOURCE\")          ' --------------- '      End Sub   ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ' Summary : ÊåáÂÆö„Åó„ÅüKey„ÅÆ„Ç¢„Ç§„ÉÜ„É†„ÇíÂèñÂæó ' ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- Public Property Get Item(key As String) As Variant     Item = dictionary_.Item(key) End Property ```  Config„ÅÆ„Éá„Éº„Çø„ÇíÂèñÂæó„Åô„ÇãÈöõ„ÅØ„ÄÅ‰∏ãË®ò„ÅÆ„Çà„ÅÜ„Å´‰ΩøÁî®„Åó„Åæ„Åô„ÄÇ  ex:   ```vb Dim conf As New Config Dim source As string  source = conf.Item(\"ORA_DATA_SOURCE\") ```  ### SQL „Ç∑„Éº„Éà  DB„Åã„ÇâÂèñÂæó„Åô„ÇãSQL„Å®„ÄÅ„Éá„Éº„ÇøË≤º„Çä‰ªò„ÅëÂÖàÔºà„Ç∑„Éº„Éà„ÄÅ„ÉÜ„Éº„Éñ„É´Ôºâ„ÇíÊåáÂÆö„Åó„Åæ„Åô„ÄÇ  ![sql](/blog/52/3-sql.png)  SQL„ÉÜ„Éº„Éñ„É´„Å´„Å§„ÅÑ„Å¶Ë£úË∂≥Ôºö  | ÂàóÂêç  | ÂÜÖÂÆπ                                                                  | | :---- | :-------------------------------------------------------------------- | | Name  | SQL„ÅÆÂêçÁß∞ÔºàSQL„ÇíÂàÜ„Åã„ÇäÊòì„Åè„Åô„Çã„Åü„ÇÅ„Å´Ê∫ñÂÇô„Åó„Å¶„ÅÑ„Çã„ÄÇVBA„ÅßÂà©Áî®„Åó„Å™„ÅÑ„ÄÇÔºâ | | Sheet | SQL„ÅÆÁµêÊûú„ÇíÂá∫Âäõ„Åô„Çã„ÉÜ„Éº„Éñ„É´„ÅåÂ≠òÂú®„Åô„Çã„Ç∑„Éº„ÉàÂêçÁß∞                       | | Table | SQL„ÅÆÁµêÊûú„ÇíÂá∫Âäõ„Åô„Çã„ÉÜ„Éº„Éñ„É´ÂêçÁß∞                                       | | SQL   | ÂÆüË°å„Åô„ÇãSQLÊñá                                                         | | Ë™¨Êòé  | SQL„ÅÆÂÜÖÂÆπ„Å™„Å©Ë£úË∂≥„Åô„ÇãÂ†¥Âêà„ÅÆ„Ç≥„É°„É≥„Éà                                   |  "},"_id":"blog/52-excel-vba-template-mk2.mdx","_raw":{"sourceFilePath":"blog/52-excel-vba-template-mk2.mdx","sourceFileName":"52-excel-vba-template-mk2.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/52-excel-vba-template-mk2"},"type":"Post","slug":"/blog/52-excel-vba-template-mk2","slugAsParams":"52-excel-vba-template-mk2"},{"title":"ReactÁî®Ë™û‰∏ÄË¶ß„Å®Âà©Áî®„Ç¨„Ç§„Éâ","description":"React„ÅÆÁî®Ë™û„Å®React„Éï„ÉÉ„ÇØ„ÇíËß£Ë™¨„ÄÇuseState„ÄÅuseEffect„ÄÅRecoil„ÄÅRedux„Å™„Å©„ÅÆ‰∏ªË¶Å„Å™Ê©üËÉΩ„Å®„Çµ„É≥„Éó„É´„Ç≥„Éº„Éâ„ÇíÊèê‰æõ„ÄÇ","date":"2023-11-07T00:00:00.000Z","lastmod":"2023-12-03T00:00:00.000Z","emoji":"üåü","tags":["react"],"published":true,"body":{"raw":" ## React Áî®Ë™û‰∏ÄË¶ß„Å®Âà©Áî®„Ç¨„Ç§„Éâ  React „Çí„Éû„Çπ„Çø„Éº„Åó„ÄÅ„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„Éô„Éº„Çπ„ÅÆ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥ÈñãÁô∫„ÇíÂäπÁéáÁöÑ„Å´Ë°å„ÅÜ„Åü„ÇÅ„ÅÆÁî®Ë™ûËß£Ë™¨„Å®„Ç¨„Ç§„Éâ„ÇíÊèê‰æõ„Åó„Åæ„Åô„ÄÇ   React „ÅÆÂü∫Êú¨„Åã„ÇâÈ´òÂ∫¶„Å™Ê¶ÇÂøµ„Åæ„ÅßÁêÜËß£„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ  ## React „Éï„ÉÉ„ÇØ  React „Éï„ÉÉ„ÇØ„ÅØ„ÄÅÈñ¢Êï∞„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÅßÁä∂ÊÖã„ÇÑÂâØ‰ΩúÁî®„ÇíÊâ±„ÅÜ„Åü„ÇÅ„ÅÆÁâπÂà•„Å™Èñ¢Êï∞„Åß„Åô„ÄÇ‰ª•‰∏ã„Å´‰∏ªË¶Å„Å™ React „Éï„ÉÉ„ÇØ„ÇíË™¨Êòé„Åó„ÄÅ„Çµ„É≥„Éó„É´„Ç≥„Éº„Éâ„ÇÇÊèê‰æõ„Åó„Åæ„Åô„ÄÇ  ### useState  `useState`„ÅØ„ÄÅÈñ¢Êï∞„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÅßÁä∂ÊÖã„ÇíÁÆ°ÁêÜ„Åô„Çã„Åü„ÇÅ„ÅÆ React „Éï„ÉÉ„ÇØ„Åß„Åô„ÄÇÁä∂ÊÖã„ÅÆ‰øùÊåÅ„Å®Êõ¥Êñ∞„ÅåÂèØËÉΩ„Åß„Åô„ÄÇ  ```jsx import React, { useState } from 'react';  function Counter() {   const [count, setCount] = useState(0);    return (     <div>       <p>Count: {count}</p>       <button onClick={() => setCount(count + 1)}>Increment</button>     </div>   ); } ```  ### useEffect  `useEffect`„ÅØ„ÄÅÈñ¢Êï∞„Ç≥„É≥„Éù„Éº„Éç„É≥„ÉàÂÜÖ„ÅßÂâØ‰ΩúÁî®„ÇíÂà∂Âæ°„Åô„Çã React „Éï„ÉÉ„ÇØ„Åß„Åô„ÄÇÂâØ‰ΩúÁî®„ÅØ„ÄÅDOM „ÅÆÂ§âÊõ¥„ÇÑÈùûÂêåÊúüÂá¶ÁêÜ„Å™„Å©„ÄÅÈñ¢Êï∞Â§ñ„ÅÆÂΩ±Èüø„Çí‰∏é„Åà„ÇãÂá¶ÁêÜ„ÇíÊåá„Åó„Åæ„Åô„ÄÇ  ```jsx import React, { useState, useEffect } from 'react';  function DataFetching() {   const [data, setData] = useState([]);    useEffect(() => {     fetch('https://api.example.com/data')       .then((response) => response.json())       .then((data) => setData(data));   }, []);    return (     <ul>       {data.map((item) => (         <li key={item.id}>{item.name}</li>       ))}     </ul>   ); } ```  ### useRef  `useRef`„ÅØ„ÄÅÈñ¢Êï∞„Ç≥„É≥„Éù„Éº„Éç„É≥„ÉàÂÜÖ„Åß DOM Ë¶ÅÁ¥†„ÇÑ‰ªñ„ÅÆ Ref „Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„Å´„Ç¢„ÇØ„Çª„Çπ„Åô„Çã„Åü„ÇÅ„Å´‰ΩøÁî®„Åï„Çå„Åæ„Åô„ÄÇ  ```jsx import React, { useRef, useEffect } from 'react';  function FocusInput() {   const inputRef = useRef(null);    useEffect(() => {     // „Éö„Éº„Ç∏„Åå„É≠„Éº„Éâ„Åï„Çå„Åü„Å®„Åç„Å´ input Ë¶ÅÁ¥†„Å´„Éï„Ç©„Éº„Ç´„Çπ„ÇíÂΩì„Å¶„Çã     inputRef.current.focus();   }, []);    return <input ref={inputRef} type=\"text\" />; } ```  ### useContext „Å® createContext  `useContext`„Å®`createContext`„ÇíÁµÑ„ÅøÂêà„Çè„Åõ„Å¶„ÄÅ„Ç≥„É≥„ÉÜ„Ç≠„Çπ„Éà„Çí‰ΩøÁî®„Åß„Åç„Åæ„Åô„ÄÇ„Åì„Çå„Å´„Çà„Çä„ÄÅË¶™„Åã„Çâ Props ÁµåÁî±„Åß„Éá„Éº„Çø„ÇíÊ∏°„ÅôÂøÖË¶Å„Åå„Å™„Åè„Å™„Çä„Åæ„Åô„ÄÇ  ```jsx import React, { useContext, createContext } from 'react';  const MyContext = createContext();  function App() {   return (     <MyContext.Provider value=\"Hello from Context!\">       <ChildComponent />     </MyContext.Provider>   ); }  function ChildComponent() {   const value = useContext(MyContext);   return <p>{value}</p>; } ```  ### useMemo „Å® useCallback  `useMemo`„ÅØÂÄ§„ÅÆ„É°„É¢Âåñ„Å´‰ΩøÁî®„Åï„Çå„ÄÅ`useCallback`„ÅØÂÜç„É¨„É≥„ÉÄ„É™„É≥„Ç∞„ÇíÈÅø„Åë„Åü„ÅÑ„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„Å´Èñ¢Êï∞„ÇíÊ∏°„ÅôÈöõ„Å´Âà©Áî®„Åó„Åæ„Åô„ÄÇ  ```jsx import React, { useState, useMemo, useCallback } from 'react';  function List({ items }) {   const itemCount = useMemo(() => items.length, [items]);   const handleClick = useCallback((item) => {     // „Éè„É≥„Éâ„É©„Éº„É≠„Ç∏„ÉÉ„ÇØ   }, []);    return (     <div>       <p>Item Count: {itemCount}</p>       {items.map((item) => (         <button key={item.id} onClick={() => handleClick(item)}>           {item.name}         </button>       ))}     </div>   ); } ```  ## Recoil  Recoil „ÅØ React „Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥ÂÜÖ„Åß„ÅÆÁä∂ÊÖãÁÆ°ÁêÜ„ÇíÁ∞°Áï•Âåñ„Åó„Åæ„Åô„ÄÇ‰ª•‰∏ã„Å´ Recoil „ÅÆ‰∏ªË¶Å„Å™„Éï„ÉÉ„ÇØ„ÇíË™¨Êòé„Åó„ÄÅ„Çµ„É≥„Éó„É´„Ç≥„Éº„Éâ„ÇíÊèê‰æõ„Åó„Åæ„Åô„ÄÇ  ### useRecoilState  `useRecoilState`„ÅØ„ÄÅuseState „ÅÆ„Çà„ÅÜ„Å´„Çπ„ÉÜ„Éº„Éà„ÇíÊâ±„ÅÑ„Åæ„Åô„ÄÇ„Çπ„ÉÜ„Éº„Éà„ÅåÊõ¥Êñ∞„Åï„Çå„Çã„Å®„ÄÅ„Åù„Çå„Çí‰ΩøÁî®„Åô„Çã„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÅØÂÜç„É¨„É≥„ÉÄ„É™„É≥„Ç∞„Åï„Çå„Åæ„Åô„ÄÇ  ```jsx import { useRecoilState } from 'recoil'; import { myState } from './recoilAtoms';  function MyComponent() {   const [state, setState] = useRecoilState(myState);    return (     <div>       <p>State: {state}</p>       <button onClick={() => setState(state + 1)}>Increment</button>     </div>   ); } ```  ### useRecoilValue  `useRecoilValue`„ÅØ RecoilValue Âûã„ÅÆ„Éá„Éº„Çø„ÇíÂèó„ÅëÂèñ„Çä„ÄÅ„Çπ„ÉÜ„Éº„Éà„ÇíÂà©Áî®„Åó„Åæ„Åô„ÄÇ„Çπ„ÉÜ„Éº„Éà„ÅåÊõ¥Êñ∞„Åï„Çå„Çã„Å®„ÄÅ„Åù„Çå„Çí‰ΩøÁî®„Åô„Çã„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÅØÂÜç„É¨„É≥„ÉÄ„É™„É≥„Ç∞„Åï„Çå„Åæ„Åô„ÄÇ  ```jsx import { useRecoilValue } from 'recoil'; import { myState } from './recoilAtoms';  function MyComponent() {   const state = useRecoilValue(myState);    return <p>State: {state}</p>; } ```  ### useSetRecoilState  `useSetRecoilState`„ÅØ RecoilState Âûã„ÅÆ„Éá„Éº„Çø„ÇíÂèó„ÅëÂèñ„Çä„ÄÅ„Çπ„ÉÜ„Éº„Éà„ÅÆ„Çª„ÉÉ„Çø„ÉºÈñ¢Êï∞„ÇíÊèê‰æõ„Åó„Åæ„Åô„ÄÇ„Çπ„ÉÜ„Éº„Éà„ÅåÊõ¥Êñ∞„Åó„Å¶„ÇÇ„ÄÅ‰ΩøÁî®„Åô„Çã„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÅØÂÜç„É¨„É≥„ÉÄ„É™„É≥„Ç∞„Åï„Çå„Åæ„Åõ„Çì„ÄÇ  ```jsx import { useSetRecoilState } from 'recoil'; import { myState } from './recoilAtoms';  function MyComponent() {   const setState = useSetRecoilState(myState);    return (     <div>       <button onClick={() => setState((prev) => prev + 1)}>Increment</button>     </div>   ); } ```  ## Redux  Redux „ÅØÂº∑Âäõ„Å™„Ç∞„É≠„Éº„Éê„É´„Çπ„ÉÜ„Éº„ÉàÁÆ°ÁêÜ„ÉÑ„Éº„É´„Åß„Åô„Åå„ÄÅRecoil „ÅÆÂà©Áî®„ÇíÊ§úË®é„Åô„Çã„Åì„Å®„Çí„ÅäÂãß„ÇÅ„Åó„Åæ„Åô„ÄÇ‰ª•‰∏ã„ÅØ Redux „ÅÆ‰∏ªË¶Å„Å™Èñ¢Êï∞„Å®„Çµ„É≥„Éó„É´„Ç≥„Éº„Éâ„Åß„Åô„ÄÇ  ### createSlice  `createSlice`„Çí‰ΩøÁî®„Åô„Çã„Å®„ÄÅReducer „ÇíÁîüÊàê„Åó„ÄÅAction Type „Å® Action Creator „ÅåËá™ÂãïÁîüÊàê„Åï„Çå„Åæ„Åô„ÄÇ  ```jsx import { createSlice } from '@reduxjs/toolkit';  const counterSlice = createSlice({   name: 'counter',   initialState: 0,   reducers: {     increment: (state) => state + 1,     decrement: (state) => state - 1   } });  export const { increment, decrement } = counterSlice.actions; export default counterSlice.reducer; ```  ### configureStore  `configureStore`„Çí‰ΩøÁî®„Åó„Å¶„ÄÅ‰ΩúÊàê„Åó„Åü Slice „Çí 1 „Å§„ÅÆ„Çπ„Éà„Ç¢„Å´ÁµêÂêà„Åß„Åç„Åæ„Åô„ÄÇ  ```jsx import { configureStore } from '@reduxjs/toolkit'; import counterReducer from './counterSlice';  const store = configureStore({   reducer: {     counter: counterReducer   } }); ```  ### useSelector  `useSelector`„Çí‰ΩøÁî®„Åó„Å¶„ÄÅ„Çπ„Éà„Ç¢„Å´‰øùÂ≠ò„Åï„Çå„Åü„Çπ„ÉÜ„Éº„Éà„Éá„Éº„Çø„Åã„ÇâÂøÖË¶Å„Å™„Éá„Éº„Çø„ÇíÂèñÂæó„Åó„Åæ„Åô„ÄÇ  ```jsx import { useSelector } from 'react-redux';  function CounterDisplay() {   const count = useSelector((state) => state.counter);   return <p>Count: {count}</p>; } ```  ### useDispatch  `useDispatch`„Çí‰ΩøÁî®„Åó„Å¶„ÄÅ„Çπ„Éà„Ç¢„ÅÆ„Éá„Éº„Çø„ÇíÂ§âÊõ¥„Åô„ÇãÈñ¢Êï∞„ÇíÂèñÂæó„Åß„Åç„Åæ„Åô„ÄÇ  ```jsx import { useDispatch } from 'react-redux'; import { increment, decrement } from './counterSlice';  function CounterButtons() {   const dispatch = useDispatch();    return (     <div>       <button onClick={() => dispatch(increment())}>Increment</button>       <button onClick={() => dispatch(decrement())}>Decrement</button>     </div>   ); } ```  React „Å®„Åù„ÅÆ„Ç®„Ç≥„Ç∑„Çπ„ÉÜ„É†„ÅÆÁî®Ë™û„ÇíÁêÜËß£„Åó„ÄÅ„Åì„Çå„Çâ„ÅÆ„Éï„ÉÉ„ÇØ„Å®„ÉÑ„Éº„É´„ÇíÊ¥ªÁî®„Åó„Å¶ÂäπÊûúÁöÑ„Å™„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÇíÈñãÁô∫„Åó„Å¶„Åø„Å¶‰∏ã„Åï„ÅÑ„ÄÇ "},"_id":"blog/53-react-list-and-usage-guide.mdx","_raw":{"sourceFilePath":"blog/53-react-list-and-usage-guide.mdx","sourceFileName":"53-react-list-and-usage-guide.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/53-react-list-and-usage-guide"},"type":"Post","slug":"/blog/53-react-list-and-usage-guide","slugAsParams":"53-react-list-and-usage-guide"},{"title":"Setting Up Nx Nestjs Mongodb Mongoose Integration - Part 1","description":"Guide to integrating Nx, Nest.js, MongoDB, and Mongoose for enhanced scalability and efficiency. Follow steps for seamless development.","date":"2023-11-17T00:00:00.000Z","lastmod":"2023-11-17T00:00:00.000Z","emoji":"ü•≠","tags":["nx","nestjs","mongodb"],"published":true,"body":{"raw":" ## Introduction In this article, we'll walk through the setup process for integrating Nx, Nest.js, MongoDB, and Mongoose. This integration is crucial for building scalable and efficient applications. We'll cover the installation of necessary packages, updating the main application file (`main.ts`), modifying the `app.module.ts` file, generating projects, creating configuration files, and setting up the MongoDB connection.  ## Install Packages Let's start by installing the required packages for our project. Open your terminal and run the following commands:  ### GraphQL Packages ```bash npm i @nestjs/graphql @nestjs/apollo graphql apollo-server-express ```  ### Class Validator Packages ```bash npm i class-validator class-transformer ```  ### Bcrypt ```bash npm i bcrypt ```  ### Passport and JWT Packages ```bash npm install --save @nestjs/passport passport passport-local npm install --save-dev @types/passport-local npm install --save @nestjs/jwt passport-jwt npm install --save-dev @types/passport-jwt ```  ### Cookie Parser ```bash npm install cookie-parser npm install --save-dev @types/cookie-parser ```  ## Update main.ts Next, update the `main.ts` file located at `apps/api/src/main.ts`. Add the necessary configurations for cookies and validation pipes.  > In this case, `apps/api` folder is a nextjs project.  ```typescript import { Logger, ValidationPipe } from '@nestjs/common'; import { NestFactory } from '@nestjs/core'; import cookieParser from 'cookie-parser';  import { AppModule } from './app/app.module';  async function bootstrap() {   const app = await NestFactory.create(AppModule);   const globalPrefix = 'api';   app.setGlobalPrefix(globalPrefix);    app.use(cookieParser());   app.useGlobalPipes(new ValidationPipe());    const port = process.env.PORT || 3000;   await app.listen(port);   Logger.log(`üöÄ Application playground is running on: http://localhost:${port}/api/graphql`); }  bootstrap(); ```  ## Update app.module.ts Now, let's update the `app.module.ts` file located at `apps/api/src/app/app.module.ts`. This modification includes the integration of Apollo and GraphQL.  ```typescript import { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo'; import { Module } from '@nestjs/common'; import { GraphQLModule } from '@nestjs/graphql'; import { AppController } from './app.controller'; import { AppService } from './app.service';  @Module({   imports: [     GraphQLModule.forRoot<ApolloDriverConfig>({       driver: ApolloDriver,       path: '/api/graphql',       autoSchemaFile: true     }),   ],   controllers: [AppController],   providers: [AppService] }) export class AppModule {} ```  > If any module that has a resolver does not exist, an error will occur!  ## Install @nestjs/config Package To handle configuration settings, install the `@nestjs/config` package:  ```bash npm i @nestjs/config ```  ## Generate Project Now, generate the shared configuration project:  ```bash npx nx generate @nx/js:library shared-config --directory=libs/shared/config --importPath=@libs/shared/config --tags=scope:shared --bundler=swc  ‚úî Which unit test runner would you like to use? ¬∑ jest ```  ## Create env.ts Create the `env.ts` file inside `libs/shared/config/src/lib/` with the following content:  ```typescript import * as dotenv from 'dotenv';  dotenv.config({ path: '.env.local' });  export const env = {   PORT: process.env['PORT'],   API_PORT: process.env['API_PORT'],   NEXT_PUBLIC_API_GQL_URL: process.env['NEXT_PUBLIC_API_GQL_URL'],   DB_URL: process.env['DB_URL'], }; ```  Update the `index.ts` file.  ```ts:index.ts export * from './lib/env'; ```  ## Install @nestjs/mongoose Package To interact with MongoDB using Nest.js, install the `@nestjs/mongoose` and `mongoose` packages:  ```bash npm i @nestjs/mongoose mongoose ```  ## Generate Mongoose Project Generate the project for Mongoose shared configuration:  ```bash npx nx generate @nx/js:library api-mongoose-shared --directory=libs/api/mongoose/shared --importPath=@libs/api/mongoose/shared --tags=scope:api --bundler=swc  ‚úî Which unit test runner would you like to use? ¬∑ none ```  ## Create Mongoose Files Create the following files within `libs/api/mongoose/shared/src/lib/`:  ### model/abstract.model.ts ```typescript import { Field, ObjectType } from '@nestjs/graphql';  @ObjectType() export class AbstractModel {   @Field()   readonly _id!: string; } ```  ### database/abstract.schema.ts ```typescript import { Prop, Schema } from '@nestjs/mongoose'; import { SchemaTypes, Types } from 'mongoose';  @Schema() export class AbstractDocument {   @Prop({ type: SchemaTypes.ObjectId })   _id!: Types.ObjectId; } ```  ### database/abstract.repository.ts ```typescript import { Logger, NotFoundException } from '@nestjs/common'; import { FilterQuery, Model, Types, UpdateQuery } from 'mongoose'; import { AbstractDocument } from './abstract.schema';  export abstract class AbstractRepository<TDocument extends AbstractDocument> {   protected abstract readonly logger: Logger;    constructor(protected readonly model: Model<TDocument>) {}    async create(document: Omit<TDocument, '_id'>): Promise<TDocument> {     const createdDocument = new this.model({       ...document,       _id: new Types.ObjectId()     });      return (await createdDocument.save()).toJSON() as unknown as TDocument;   }    async findOne(filterQuery: FilterQuery<TDocument>): Promise<TDocument> {     const document = await this.model.findOne(filterQuery, {}, { lean: true });      if (!document) {       this.logger.warn('Document not found with filterQuery', filterQuery);       throw new NotFoundException('Document not found.');     }      return document as TDocument;   }    async findOneAndUpdate(filterQuery: FilterQuery<TDocument>, update: UpdateQuery<TDocument>) {     const document = await this.model.findOneAndUpdate(filterQuery, update, {       lean: true,       new: true     });      if (!document) {       this.logger.warn(`Document not found with filterQuery:`, filterQuery);       throw new NotFoundException('Document not found.');     }      return document;   }    async find(filterQuery: FilterQuery<TDocument>) {     return this.model.find(filterQuery, {}, { lean: true });   }    async deleteOne(filterQuery: FilterQuery<TDocument>): Promise<void> {     const result = await this.model.deleteOne(filterQuery);      if (result.deletedCount === 0) {       this.logger.warn('No document found for deletion with filterQuery', filterQuery);       // throw new NotFoundException('No document found for deletion.');     }   }    async deleteMany(filterQuery: FilterQuery<TDocument>): Promise<void> {     const result = await this.model.deleteMany(filterQuery);      if (result.deletedCount === 0) {       this.logger.warn('No documents found for deletion with filterQuery', filterQuery);       // throw new NotFoundException('No documents found for deletion.');     }   }   // eslint-disable-next-line @typescript-eslint/no-explicit-any  async aggregate(pipeline: any[]): Promise<any[]> {     return this.model.aggregate(pipeline);   } } ```  ### database/database.module.ts ```typescript import { env } from '@libs/shared/config'; import { Module } from '@nestjs/common'; import { MongooseModule } from '@nestjs/mongoose';  @Module({   imports: [     MongooseModule.forRootAsync({       useFactory: () => ({         uri: env.DB_URL       })     })   ] }) export class DatabaseModule {} ```  Update the `index.ts` file.  ```ts:index.ts export { AbstractRepository } from './lib/database/abstract.repository'; export { AbstractDocument } from './lib/database/abstract.schema'; export { DatabaseModule } from './lib/database/database.module'; export { AbstractModel } from './lib/model/abstract.model'; ```  This completes the setup for the first part of Nx, Nest.js, MongoDB, and Mongoose integration. Stay tuned for the next part where we will continue with the configuration and integration process.  [Setting Up Nx Nestjs Mongodb Mongoose Integration - Part 2](/blog/55-nx-nestjs-mongodb-mongoose-part2/)"},"_id":"blog/54-nx-nestjs-mongodb-mongoose-part1.mdx","_raw":{"sourceFilePath":"blog/54-nx-nestjs-mongodb-mongoose-part1.mdx","sourceFileName":"54-nx-nestjs-mongodb-mongoose-part1.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/54-nx-nestjs-mongodb-mongoose-part1"},"type":"Post","slug":"/blog/54-nx-nestjs-mongodb-mongoose-part1","slugAsParams":"54-nx-nestjs-mongodb-mongoose-part1"},{"title":"Setting Up Nx Nestjs Mongodb Mongoose Integration - Part 2","description":"Part 2 of Nx Nest.js MongoDB Mongoose Integration - Generate todos, create modules, implement GraphQL models, repositories, DTOs, and MongoDB schemas for enhanced application efficiency. Stay tuned for a comprehensive configuration guide.","date":"2023-11-18T00:00:00.000Z","lastmod":"2023-11-18T00:00:00.000Z","emoji":"ü•≠","tags":["nx","nestjs","mongodb"],"published":true,"body":{"raw":" ## Introduction  Welcome to the second part of our tutorial series on setting up Nx, Nest.js, MongoDB, and Mongoose integration. In this installment, we will guide you through the process of generating the feature-sample-todos library using Nx, creating modules, resolvers, and services, and establishing MongoDB document schemas. Additionally, we'll cover the implementation of GraphQL models, repositories, DTOs, and updates to the service and resolver for the sample-todos feature. Follow the step-by-step instructions to seamlessly integrate these technologies, enhancing the scalability and efficiency of your application. Stay tuned for a comprehensive configuration and integration journey.  ## Generating Feature-Sample-Todos  To begin, generate the feature-sample-todos library using Nx:  ```bash npx nx generate @nx/js:library api-feature-sample-todos --directory=libs/api/mongoose/feature-sample-mongoose --importPath=@libs/api/mongoose/feature-sample-mongoose --tags=scope:api --bundler=swc  ‚úî Which unit test runner would you like to use? ¬∑ jest ```  ## Creating Module, Resolver, and Service  Now, create the module, resolver, and service for the sample-todos feature:  ```bash nx generate @nx/nest:module sample-todos --project=api-feature-sample-todos nx generate @nx/nest:resolver sample-todos --project=api-feature-sample-todos nx generate @nx/nest:service sample-todos --project=api-feature-sample-todos ```  Once the files are created, move them to the lib folder.  ## Creating MongoDB Document (Schema)  Create the document (schema) for MongoDB:  `libs/api/feature-sample-todos/src/lib/sample-todos/models/sample-todos.schema.ts`  ```typescript import { AbstractDocument } from '@libs/api/mongoose/shared'; import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';  @Schema({ versionKey: false }) export class SampleTodoDocument extends AbstractDocument {   @Prop()   content!: string;    @Prop()   editing!: boolean;    @Prop()   completed!: boolean; }  export const SampleTodoSchema = SchemaFactory.createForClass(SampleTodoDocument); ```  ## Creating GraphQL Model  Create the model for GraphQL:  `libs/api/feature-sample-todos/src/lib/sample-todos/models/sample-todos.model.ts`  ```typescript import { AbstractModel } from '@libs/api/mongoose/shared'; import { Field, ObjectType } from '@nestjs/graphql';  @ObjectType() export class SampleTodo extends AbstractModel {   @Field()   readonly content!: string;    @Field()   readonly editing!: boolean;    @Field()   readonly completed!: boolean; } ```  ## Creating Repository  Create the repository for sample-todos:  `libs/api/feature-sample-todos/src/lib/sample-todos/sample-todos.repository.ts`  ```typescript import { AbstractRepository } from '@libs/api/mongoose/shared'; import { Injectable, Logger } from '@nestjs/common'; import { InjectModel } from '@nestjs/mongoose'; import { Model } from 'mongoose'; import { SampleTodo } from './models/sample-todo.model'; import { SampleTodoDocument } from './models/sample-todo.schema';  @Injectable() export class SampleTodosRepository extends AbstractRepository<SampleTodoDocument> {   protected readonly logger = new Logger(SampleTodosRepository.name);    constructor(     @InjectModel(SampleTodo.name)     SampleTodoModel: Model<SampleTodoDocument>   ) {     super(SampleTodoModel);   } } ```  ## Creating DTOs  Create the DTOs for sample-todos:  ### Args  `libs/api/feature-sample-todos/src/lib/sample-todos/dto/args/get-sample-todos-args.dto.ts`  ```typescript import { ArgsType, Field } from '@nestjs/graphql'; import { IsNotEmpty, IsString } from 'class-validator';  @ArgsType() export class GetSampleTodoArgs {   @Field()   @IsNotEmpty()   @IsString()   _id!: string; } ```  ### Inputs  `libs/api/feature-sample-todos/src/lib/sample-todos/dto/input/create-sample-todos-input.dto.ts`  ```typescript import { Field, InputType } from '@nestjs/graphql'; import { IsBoolean, IsString } from 'class-validator';  @InputType() export class CreateSampleTodoInput {   @Field()   @IsString()   content!: string;    @Field()   @IsBoolean()   editing!: boolean;    @Field()   @IsBoolean()   completed!: boolean; } ```  `libs/api/feature-sample-todos/src/lib/sample-todos/dto/input/delete-sample-todos-input.dto.ts`  ```typescript import { Field, InputType } from '@nestjs/graphql'; import { IsNotEmpty, IsString } from 'class-validator';  @InputType() export class DeleteSampleTodoInput {   @Field()   @IsNotEmpty()   @IsString()   _id!: string; } ```  `libs/api/feature-sample-todos/src/lib/sample-todos/dto/input/update-sample-todos-input.dto.ts`  ```typescript import { Field, InputType } from '@nestjs/graphql'; import { IsBoolean, IsNotEmpty, IsString } from 'class-validator';  @InputType() export class UpdateSampleTodoInput {   @Field()   @IsNotEmpty()   @IsString()   _id!: string;    @Field()   @IsString()   content!: string;    @Field()   @IsBoolean()   editing!: boolean;    @Field()   @IsBoolean()   completed!: boolean; } ```  ## Updating Service  Update the service for sample-todos:  `libs/api/feature-sample-todos/src/lib/sample-todos/sample-todos.service.ts`  ```typescript import { Injectable } from '@nestjs/common'; import { GetSampleTodoArgs } from './dto/args/get-sample-todo-args.dto'; import { CreateSampleTodoInput } from './dto/input/create-sample-todo-input.dto'; import { DeleteSampleTodoInput } from './dto/input/delete-sample-todo-input.dto'; import { UpdateSampleTodoInput } from './dto/input/update-sample-todo-input.dto'; import { SampleTodoDocument } from './models/sample-todo.schema'; import { SampleTodosRepository } from './sample-todos.repository';  @Injectable() export class SampleTodosService {   constructor(private readonly SampleTodoRepository: SampleTodosRepository) {}    async createSampleTodo(createSampleTodoData: CreateSampleTodoInput) {     const SampleTodoDocument = await this.SampleTodoRepository.create({       ...createSampleTodoData     });      return this.toModel(SampleTodoDocument);   }    async updateSampleTodo(updateSampleTodoData: UpdateSampleTodoInput) {     const SampleTodoDocument = await this.SampleTodoRepository.findOneAndUpdate(       { _id: updateSampleTodoData._id },       updateSampleTodoData     );     return this.toModel(SampleTodoDocument);   }    async deleteSampleTodo(deleteSampleTodoData: DeleteSampleTodoInput) {     return await this.SampleTodoRepository.deleteOne({       _id: deleteSampleTodoData._id     });   }    async getSampleTodos() {     const SampleTodoDocument = await this.SampleTodoRepository.find({});     return SampleTodoDocument.map((todo) => this.toModel(todo));   }    async getSampleTodo(getSampleTodoArgs: GetSampleTodoArgs) {     const SampleTodoDocument = await this.SampleTodoRepository.findOne({       ...getSampleTodoArgs     });     return this.toModel(SampleTodoDocument);   }    private toModel(SampleTodoDocument: SampleTodoDocument) {     return {       // eslint-disable-next-line @typescript-eslint/ban-ts-comment       //@ts-ignore       _id: SampleTodoDocument._id.toHexString(),       ...SampleTodoDocument     };   } } ```  ## Updating Resolver  Update the resolver for sample-todos:  `libs/api/feature-sample-todos/src/lib/sample-todos/sample-todos.resolver.ts`  ```typescript import { Args, Mutation, Query, Resolver } from '@nestjs/graphql'; import { GetSampleTodoArgs } from './dto/args/get-sample-todo-args.dto'; import { CreateSampleTodoInput } from './dto/input/create-sample-todo-input.dto'; import { DeleteSampleTodoInput } from './dto/input/delete-sample-todo-input.dto'; import { UpdateSampleTodoInput } from './dto/input/update-sample-todo-input.dto'; import { SampleTodo } from './models/sample-todo.model'; import { SampleTodosService } from './sample-todos.service';  @Resolver() export class SampleTodosResolver {   constructor(private readonly SampleTodoService: SampleTodosService) {}    @Mutation(() => SampleTodo, { name: 'createSampleTodo' })   async createSampleTodo(     @Args('createSampleTodoData')     createSampleTodoData: CreateSampleTodoInput   ) {     return await this.SampleTodoService.createSampleTodo(createSampleTodoData);   }    @Mutation(() => SampleTodo, { name: 'updateSampleTodo' })   async updateSampleTodo(     @Args('updateSampleTodoData')     updateSampleTodoData: UpdateSampleTodoInput   ) {     return this.SampleTodoService.updateSampleTodo(updateSampleTodoData);   }    @Mutation(() => SampleTodo, { name: 'deleteSampleTodo', nullable: true })   async deleteSampleTodo(     @Args('deleteSampleTodoData')     deleteSampleTodoData: DeleteSampleTodoInput   ) {     return this.SampleTodoService.deleteSampleTodo(deleteSampleTodoData);   }    @Query(() => [SampleTodo], { name: 'sampleTodos' })   async getSampleTodos() {     return this.SampleTodoService.getSampleTodos();   }    @Query(() => SampleTodo, { name: 'sampleTodo' })   async getSampleTodo(@Args() getSampleTodoArgs: GetSampleTodoArgs) {     return this.SampleTodoService.getSampleTodo(getSampleTodoArgs);   } } ```  ## Updating Module  Update the module for sample-todos:  `libs/api/feature-sample-todos/src/lib/sample-todos/sample-todos.module.ts`  * Add MongooseModule. * Add SampleMongooseTableRepository to providers.  ```typescript import { Module } from '@nestjs/common'; import { MongooseModule } from '@nestjs/mongoose'; import { SampleTodo } from './models/sample-todo.model'; import { SampleTodoSchema } from './models/sample-todo.schema'; import { SampleTodosRepository } from './sample-todos.repository'; import { SampleTodosResolver } from './sample-todos.resolver'; import { SampleTodosService } from './sample-todos.service';  @Module({   imports: [     MongooseModule.forFeature([       {         name: SampleTodo.name,         schema: SampleTodoSchema       }     ])   ],   providers: [SampleTodosResolver, SampleTodosService, SampleTodosRepository] }) export class SampleTodosModule {} ```  ## Updating app.module.ts  Update the app.module.ts file in the apps/api/src/app/ directory:  * Add DatabaseModule. * Add SampleTodosModule.  ```typescript @Module({   imports: [     ServeStaticModule.forRoot({       rootPath: join(__dirname, '..', 'web/.next'),       exclude: ['/api/*', '/api/graphql']     }),     GraphQLModule.forRoot<ApolloDriverConfig>({       driver: ApolloDriver,       path: '/api/graphql',       autoSchemaFile: true     }),     // ---- Graphql ---- //     // When using Mongoose, the DatabaseModule is required.     DatabaseModule,     SampleTodosModule   ],   controllers: [AppController],   providers: [AppService] }) export class AppModule {} ```  Stay tuned for the next part as we continue configuring and integrating Nx, Nest.js, MongoDB, and Mongoose for a robust development experience.  [Setting Up Nx Nestjs Mongodb Mongoose Integration - Part 3](/blog/56-nx-nestjs-mongodb-mongoose-part3/)"},"_id":"blog/55-nx-nestjs-mongodb-mongoose-part2.mdx","_raw":{"sourceFilePath":"blog/55-nx-nestjs-mongodb-mongoose-part2.mdx","sourceFileName":"55-nx-nestjs-mongodb-mongoose-part2.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/55-nx-nestjs-mongodb-mongoose-part2"},"type":"Post","slug":"/blog/55-nx-nestjs-mongodb-mongoose-part2","slugAsParams":"55-nx-nestjs-mongodb-mongoose-part2"},{"title":"Setting Up Nx Nestjs Mongodb Mongoose Integration - Part 3","description":"Part 3 of Nx Nest.js GraphQL Integration - Install packages, update configs, generate GraphQL client for seamless integration. Enhance data management and scalability. Congrats on completing this guide to harmonious Nx, Nest.js, GraphQL integration! Stay tuned for more tutorials.","date":"2023-11-19T00:00:00.000Z","lastmod":"2023-12-02T00:00:00.000Z","emoji":"ü•≠","tags":["nx","nestjs","mongodb"],"published":true,"body":{"raw":" ## Introduction  Welcome to the third part of our Nx Nest.js GraphQL Integration series, where we enhance our project by incorporating GraphQL. Follow these steps to seamlessly install essential packages, update the `app.module.ts` file, generate the `data-access-graphql` project, and utilize GraphQL code generation. We'll guide you through creating a GraphQL client and demonstrate its usage in a Next.js web application.  ## Reference URL  [Engilaboo Next.js GraphQL Tutorial](https://www.engilaboo.com/nextjs-graphql/)  ## Install Packages  ```bash npm i @graphql-codegen/typed-document-node @graphql-codegen/cli @graphql-codegen/typescript-operations @apollo/client @graphql-codegen/client-preset ```  ## Update app.module.ts in Nest.js Project  Add the following code:  ```typescript @Module({   imports: [     ServeStaticModule.forRoot({       rootPath: join(__dirname, '..', 'web/.next'),       exclude: ['/api/*', '/api/graphql']     }),     GraphQLModule.forRoot<ApolloDriverConfig>({       driver: ApolloDriver,       path: '/api/graphql',       autoSchemaFile: path.join(__dirname, './autogenerated-schema.gql')     }), ```  By doing so, the `autogenerated-schema.gql` is created in the `dist/apps/api` folder after building the API.  ## Generate data-access-graphql Project  ```bash npx nx generate @nx/js:library data-access-graphql --directory=libs/web/data-access-graphql --importPath=@libs/web/data-access-graphql --tags=scope:web --bundler=swc  ‚úî Which unit test runner would you like to use? ¬∑ none ```  ## Create codegen.yml  `tools/graphql-codegen/codegen.ts`  ```ts import type { CodegenConfig } from '@graphql-codegen/cli';  const codegenConfig: CodegenConfig = {   overwrite: true,   schema: 'dist/apps/api/autogenerated-schema.gql',   documents: ['apps/web/**/*.graphql', 'libs/**/*.graphql'],   generates: {     'libs/web/data-access-graphql/src/lib/__generated__/': {       preset: 'client',       plugins: [         {           // branded type for custom Scalar           add: {             content: `export type DateString = string & { readonly __brand: unique symbol }`           }         }       ],       config: {         strictScalars: true,         useTypeImports: true,         skipTypename: true,         arrayInputCoercion: true,         avoidOptionals: {           field: true,           inputValue: false,           object: true,           defaultValue: false         },         scalars: {           Date: 'DateString'         },         enumsAsTypes: true       }     }   } };  export default codegenConfig; ```  ## Run Codegen  Add script to package.json  ```json    \"scripts\": {     \"start:gql:watch\": \"graphql-codegen --config tools/graphql-codegen/codegen.ts --watch\", ```  ## Create Client for Web  1. Create apollo-client.ts  `apps/web/lib/apollo-client.ts`  > In this case, `apps/web` is a Next.js project.  ```typescript import { NEXT_PUBLIC_API_GQL_URL } from '@/config/index'; import { ApolloClient, InMemoryCache } from '@apollo/client';  // If env.NEXT_PUBLIC_API_GQL_URL is undefined, throw exeption. if (!NEXT_PUBLIC_API_GQL_URL) {   throw new Error('NEXT_PUBLIC_API_GQL_URL is undefined'); }  export const apolloClient = new ApolloClient({   uri: NEXT_PUBLIC_API_GQL_URL,   cache: new InMemoryCache(),   credentials: 'include' }); ```  2. Create ApolloProvider  `apps/web/lib/apollo-client.ts`  ```typescript 'use client';  import { apolloClient } from '@/lib/apollo-client'; import { ApolloProvider as Apollo } from '@apollo/client';  const ApolloProvider = ({ children }: React.PropsWithChildren) => {   return <Apollo client={apolloClient}>{children}</Apollo>; };  export default ApolloProvider; ```  3. Update `tsconfig.base.json`  ```json     \"paths\": {       \"@/lib/*\": [         \"apps/web/lib/*\"       ], ```  4. Set ApolloProvider  `apps/web/app/layout.tsx`  ```tsx import ApolloProvider from '@/components/providers/ApolloProvider'; ...  export default async function RootLayout({ children }: { children: ReactNode }) {   return (     <html suppressHydrationWarning>       <head>         ...       </head>        <body className=\"overflow-x-hidden bg-white text-black antialiased dark:bg-gray-900 dark:text-white\">         <ApolloProvider>           ...         </ApolloProvider>       </body>     </html>   ); } ```  ## Use graphql  Example:  1. Create graphql file  `todo.graphql`  ```graphql query getSampleTodos {   sampleTodos {     _id     content     editing     completed   } } ```  2. Use useQuery  ```tsx import { useQuery } from '@apollo/client'; import { GetSampleTodosDocument } from '@libs/web/data-access-graphql';  export default async function page() {   const { data, loading, error } = useQuery(GetSampleTodosDocument);    return <div>{data.GetSampleTodosDocument.map((x) => x._id)}</div>; } ```  Congratulations! You've successfully configured Nx, Nest.js, and GraphQL in a harmonious integration. This series has empowered you to efficiently manage and query data, making your application more robust and scalable. Stay tuned for more insightful tutorials and happy coding!  The first part is here.  [Setting Up Nx Nestjs Mongodb Mongoose Integration - Part 1](/blog/54-nx-nestjs-mongodb-mongoose-part1/) "},"_id":"blog/56-nx-nestjs-mongodb-mongoose-part3.mdx","_raw":{"sourceFilePath":"blog/56-nx-nestjs-mongodb-mongoose-part3.mdx","sourceFileName":"56-nx-nestjs-mongodb-mongoose-part3.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/56-nx-nestjs-mongodb-mongoose-part3"},"type":"Post","slug":"/blog/56-nx-nestjs-mongodb-mongoose-part3","slugAsParams":"56-nx-nestjs-mongodb-mongoose-part3"},{"title":"React„Å®dnd-kit/core„Çí‰ΩøÁî®„Åó„Å¶„Éâ„É©„ÉÉ„Ç∞&„Éâ„É≠„ÉÉ„Éó„É™„Çπ„Éà„Çí‰ΩúÊàê","description":"React„Å®dnd-kit/core„Çí‰ΩøÁî®„Åó„Å¶„Ç∑„Éº„É†„É¨„Çπ„Å™„Éâ„É©„ÉÉ„Ç∞&„Éâ„É≠„ÉÉ„Éó„É™„Çπ„Éà„ÇíÂÆüË£Ö„ÄÇÂü∫Êú¨ÁöÑ„Å™„Ç≥„Éº„Éâ„Å®„Çπ„Çø„Ç§„É™„É≥„Ç∞„ÅÆËß£Ë™¨„ÇíÊèê‰æõ","date":"2024-01-30T00:00:00.000Z","lastmod":"2024-01-30T00:00:00.000Z","emoji":"‚õÑ","tags":["react"],"published":true,"body":{"raw":" ![image](/blog/57/1-sample.gif)  „Éâ„É©„ÉÉ„Ç∞&„Éâ„É≠„ÉÉ„ÉóÊ©üËÉΩ„ÅØ„ÄÅÁèæ‰ª£„ÅÆWeb„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Åß„Çà„ÅèË¶ã„Çâ„Çå„ÇãÊ©üËÉΩ„Åß„ÄÅ„É¶„Éº„Ç∂„Éº„Åå„Ç¢„Ç§„ÉÜ„É†„Çí„Ç∑„Éº„É†„É¨„Çπ„Å´‰∏¶„ÅπÊõø„Åà„Çã„Åì„Å®„Åå„Åß„Åç„Çã„Çà„ÅÜ„Å´„Åó„Åæ„Åô„ÄÇ„Åì„ÅÆ„ÉÅ„É•„Éº„Éà„É™„Ç¢„É´„Åß„ÅØ„ÄÅ`dnd-kit/core`„É©„Ç§„Éñ„É©„É™„Çí‰ΩøÁî®„Åó„Å¶React„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Åß„Éâ„É©„ÉÉ„Ç∞&„Éâ„É≠„ÉÉ„ÉóÊ©üËÉΩ„ÇíÂÆüË£Ö„Åô„ÇãÊñπÊ≥ï„Å´„Å§„ÅÑ„Å¶Êé¢„Çä„Åæ„Åô„ÄÇ„Åì„ÅÆ„É©„Ç§„Éñ„É©„É™„ÅÆ‰∏ªË¶Å„Å™„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„Çí‰ΩøÁî®„Åó„Å¶„ÄÅ„Éâ„É©„ÉÉ„Ç∞ÂèØËÉΩ„Å™„Ç¢„Ç§„ÉÜ„É†„ÅÆÁ∞°Âçò„Å™„É™„Çπ„Éà„Çí‰ΩúÊàê„Åó„Åæ„Åô„ÄÇ  ## „Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆ„Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó  ÂÆüË£Ö„Å´ÂÖ•„ÇãÂâç„Å´„ÄÅÂøÖË¶Å„Å™‰æùÂ≠òÈñ¢‰øÇ„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åô„ÄÇReact„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Åß`@dnd-kit/core`„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ  ```bash npm i @dnd-kit/core @dnd-kit/sortable ```  „Åì„Åì„Åã„Çâ„ÅØ„ÄÅ„Éâ„É©„ÉÉ„Ç∞ÂèØËÉΩ„Å™„É™„Çπ„Éà„ÅÆ„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„Çí‰ΩúÊàê„Åó„Å¶„ÅÑ„Åç„Åæ„Åô„ÄÇ  ## DraggableList„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÅÆ‰ΩúÊàê  `DraggableList`„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÅØ„ÄÅ„Éâ„É©„ÉÉ„Ç∞ÂèØËÉΩ„Å™„Ç¢„Ç§„ÉÜ„É†„ÅÆ„Ç≥„É≥„ÉÜ„Éä„Å®„Åó„Å¶Ê©üËÉΩ„Åó„Åæ„Åô„ÄÇ`DraggableList.tsx`„Éï„Ç°„Ç§„É´„ÅÆ„Ç≥„Éº„Éâ„ÅØ‰ª•‰∏ã„ÅÆÈÄö„Çä„Åß„ÅôÔºö  ```tsx:DraggableList.tsx(DraggableList) import {   DndContext,   KeyboardSensor,   PointerSensor,   UniqueIdentifier,   closestCenter,   useSensor,   useSensors } from '@dnd-kit/core'; import {   SortableContext,   horizontalListSortingStrategy,   rectSortingStrategy,   sortableKeyboardCoordinates,   useSortable,   verticalListSortingStrategy } from '@dnd-kit/sortable'; import { CSS } from '@dnd-kit/utilities'; import { ComponentProps, FC, ReactNode, useMemo } from 'react';  export interface HasId {   id: UniqueIdentifier; }  type Props<T extends HasId> = {   items: T[];   onDragStart?: ComponentProps<typeof DndContext>['onDragStart'];   onDragEnd?: ComponentProps<typeof DndContext>['onDragEnd'];   onDragOver?: ComponentProps<typeof DndContext>['onDragOver'];   layout: 'horizontal' | 'vertical' | 'grid';   children: ReactNode; }; // „Éâ„É©„ÉÉ„Ç∞&„Éâ„É≠„ÉÉ„ÉóÂèØËÉΩ„Å™„É™„Çπ„Éà„Ç¢„Ç§„ÉÜ„É† export const DraggableList: FC<Props<HasId>> = ({   items,   onDragStart,   onDragEnd,   onDragOver,   layout,   children }) => {   // „Éâ„É©„ÉÉ„Ç∞&„Éâ„É≠„ÉÉ„Éó„Åô„ÇãÊôÇ„Å´Ë®±ÂèØ„Åô„ÇãÂÖ•Âäõ   const sensors = useSensors(     useSensor(PointerSensor),     useSensor(KeyboardSensor, {       coordinateGetter: sortableKeyboardCoordinates     })   );    // „É™„Çπ„Éà„ÅÆÁ®ÆÈ°û   const strategy = useMemo(() => {     switch (layout) {       case 'horizontal':         return horizontalListSortingStrategy;       case 'vertical':         return verticalListSortingStrategy;       case 'grid':       default:         return rectSortingStrategy;     }   }, [layout]);    return (     <DndContext       sensors={sensors}       collisionDetection={closestCenter}       onDragStart={onDragStart}       onDragEnd={onDragEnd}       onDragOver={onDragOver}     >       <SortableContext items={items} strategy={strategy}>         <ul>{children}</ul>       </SortableContext>     </DndContext>   ); }; ```  „Åì„ÅÆ„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÅØ„ÄÅ`@dnd-kit/core`„Å´„Çà„Å£„Å¶Êèê‰æõ„Åï„Çå„Çã`DndContext`„Å®`SortableContext`„Çí„Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó„Åó„Åæ„Åô„ÄÇ„Åæ„Åü„ÄÅ„É™„Çπ„ÉàÂÜÖ„ÅÆÂêÑ„Ç¢„Ç§„ÉÜ„É†„Çí„É©„ÉÉ„Éó„Åô„Çã`DraggableItem`„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÇíÂÆöÁæ©„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ## „Éâ„É©„ÉÉ„Ç∞ÂèØËÉΩ„Å™„Ç¢„Ç§„ÉÜ„É†„ÅÆÊßãÁØâ  „É™„Çπ„ÉàÂÜÖ„ÅÆÂêÑ„Éâ„É©„ÉÉ„Ç∞ÂèØËÉΩ„Å™„Ç¢„Ç§„ÉÜ„É†„ÅØ„ÄÅ`DraggableItem`„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÅßË°®„Åï„Çå„Åæ„Åô„ÄÇ„É¶„Éº„Ç∂„Éº„Ç§„É≥„Çø„É©„ÇØ„Ç∑„Éß„É≥„ÇíÂêë‰∏ä„Åï„Åõ„Çã„Åü„ÇÅ„Å´`DraggableHandle`„ÇÇÂê´„Åæ„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ„Ç≥„Éº„Éâ„ÅØ‰ª•‰∏ã„ÅÆÈÄö„Çä„Åß„ÅôÔºö  ```tsx:DraggableList.tsx(DraggableItem) // „Éâ„É©„ÉÉ„Ç∞&„Éâ„É≠„ÉÉ„ÉóÂèØËÉΩ„Å™„É™„Çπ„Éà„Ç¢„Ç§„ÉÜ„É† export const DraggableItem: FC<{   id: HasId['id'];   children: ReactNode; }> = ({ id, children }) => {   const { setNodeRef, transform, transition } = useSortable({ id });    const style = {     transform: CSS.Transform.toString(transform),     transition   };    return (     <li ref={setNodeRef} style={style}>       {children}     </li>   ); };  // MyDraggableItem„Çí„Éâ„É©„ÉÉ„Ç∞&„Éâ„É≠„ÉÉ„Éó„Åô„Çã„Åü„ÇÅ„ÅÆ„Éè„É≥„Éâ„É´ export const DraggableHandle: FC<{   id: HasId['id'];   children: ReactNode; }> = ({ id, children }) => {   const { attributes, listeners } = useSortable({ id });    return (     <div {...attributes} {...listeners}>       {children}     </div>   ); }; ```  „Åì„ÅÆ„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÅØ`@dnd-kit/core`„Åã„Çâ„ÅÆ`useSortable`„Éï„ÉÉ„ÇØ„Çí‰ΩøÁî®„Åó„Å¶„Éâ„É©„ÉÉ„Ç∞ÔºÜ„Éâ„É≠„ÉÉ„Éó„ÅÆÂãï‰Ωú„ÇíÂá¶ÁêÜ„Åó„Åæ„Åô„ÄÇ  ## Page„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„Åß„Éâ„É©„ÉÉ„Ç∞ÔºÜ„Éâ„É≠„ÉÉ„Éó„ÇíÂÆüË£Ö  „É°„Ç§„É≥„ÅÆ„Éö„Éº„Ç∏„Ç≥„É≥„Éù„Éº„Éç„É≥„ÉàÔºà`page.tsx`Ôºâ„Åß„ÅØ„ÄÅ`DraggableList`„Çí„Ç§„É≥„Éù„Éº„Éà„Åó„Å¶‰ΩøÁî®„Åó„ÄÅË£ΩÂìÅ„ÅÆ„Éâ„É©„ÉÉ„Ç∞ÂèØËÉΩ„Å™„É™„Çπ„Éà„Çí‰ΩúÊàê„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ„Ç≥„Éº„Éâ„ÅØ‰ª•‰∏ã„ÅÆÈÄö„Çä„Åß„ÅôÔºö  > Nextjs „ÇíÂà©Áî®„Åó„Åü„Åü„ÇÅ„ÄÅ`page.tsx`„Éï„Ç°„Ç§„É´„Å®„Åó„Å¶„ÅÑ„Åæ„Åô„Åå„ÄÅÈÄöÂ∏∏„ÅÆReact„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„Åß„ÇÇÂà©Áî®ÂèØËÉΩ„Åß„Åô„ÄÇ  ```jsx 'use client';  import { DragEndEvent, DragStartEvent } from '@dnd-kit/core'; import { faBars } from '@fortawesome/free-solid-svg-icons'; import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; import { FC, useCallback, useState } from 'react'; import { DraggableHandle, DraggableItem, DraggableList } from './_components/DraggableList';  // „É™„ÇΩ„Éº„Çπ:ÂïÜÂìÅ„ÅÆÂûã type Product = {   id: string;   name: string;   price: number; };  const Products = [   {     id: '1',     name: 'ÂïÜÂìÅ1',     price: 100   },   {     id: '2',     name: 'ÂïÜÂìÅ2',     price: 200   },   {     id: '3',     name: 'ÂïÜÂìÅ3',     price: 300   } ];  // ÂïÜÂìÅ„ÇíË°®Á§∫„Åô„Çã„É™„Çπ„Éà„Ç¢„Ç§„ÉÜ„É† const ProductItem: FC<{   product: Product; }> = ({ product }) => (   <DraggableItem id={product.id}>     <div className=\"m-4 h-[100px] w-[200px] items-center rounded-md border-2 p-2 shadow-sm\">       <div className=\"flex space-x-4\">         <DraggableHandle id={product.id}>           <FontAwesomeIcon icon={faBars} className=\"m-4\" size=\"lg\" />         </DraggableHandle>         <p>{product.name}</p>         <p>¬• {product.price}</p>       </div>     </div>   </DraggableItem> );  // „Éâ„É©„ÉÉ„Ç∞&„Éâ„É≠„ÉÉ„ÉóÂèØËÉΩ„Å™ÂïÜÂìÅ„É™„Çπ„Éà const Page = () => {   // ‰∏ÄË¶ßË°®Á§∫„Åô„ÇãÂïÜÂìÅÁæ§   const [products, setProducts] = useState<Product[]>(Products);    const onDragStart = useCallback((e: DragStartEvent) => {     console.log('onDragStart', e);   }, []);    const onDragEnd = useCallback((e: DragEndEvent) => {     console.log('onDragEnd', e);   }, []);    return (     <DraggableList       items={products}       onDragStart={onDragStart}       onDragEnd={onDragEnd}       layout={'vertical'}     >       {products.map((product) => (         <ProductItem key={product.id} product={product} />       ))}     </DraggableList>   ); };  export default Page; ```  „Åì„ÅÆ„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÅØË£ΩÂìÅ„ÅÆ„É™„Çπ„Éà„ÇíË°®Á§∫„Åó„ÄÅ`onDragStart`„Åä„Çà„Å≥`onDragEnd`„Ç≥„Éº„É´„Éê„ÉÉ„ÇØ„ÅØÈñ¢ÈÄ£„Åô„Çã„Ç§„Éô„É≥„Éà„Çí„Ç≥„É≥„ÇΩ„Éº„É´„Å´Ë®òÈå≤„Åó„Åæ„Åô„ÄÇ  ## „Çπ„Çø„Ç§„É™„É≥„Ç∞„Å®„Ç´„Çπ„Çø„Éû„Ç§„Ç∫  „Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆ„Éá„Ç∂„Ç§„É≥„Å´Âü∫„Å•„ÅÑ„Å¶„Éâ„É©„ÉÉ„Ç∞ÂèØËÉΩ„Å™„Ç¢„Ç§„ÉÜ„É†„ÅÆ„Çπ„Çø„Ç§„É™„É≥„Ç∞„ÇíËá™Áî±„Å´„Ç´„Çπ„Çø„Éû„Ç§„Ç∫„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇÊèê‰æõ„Åï„Çå„Åü„Ç≥„Éº„Éâ„Å´„ÅØ„ÄÅTailwind CSS„Çí‰ΩøÁî®„Åó„ÅüÂü∫Êú¨ÁöÑ„Å™„Çπ„Çø„Ç§„É™„É≥„Ç∞„ÅåÂê´„Åæ„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ## „Åæ„Å®„ÇÅ  „Åì„ÅÆ„ÉÅ„É•„Éº„Éà„É™„Ç¢„É´„Åß„ÅØ„ÄÅ`react`„Å®`@dnd-kit/core`„Çí‰ΩøÁî®„Åó„Å¶Á∞°Âçò„Å™„Éâ„É©„ÉÉ„Ç∞ÂèØËÉΩ„Å™„É™„Çπ„Éà„ÇíÂÆüË£Ö„Åó„Åæ„Åó„Åü„ÄÇ„Åì„ÅÆ„É©„Ç§„Éñ„É©„É™„ÅØ„ÄÅ„Éâ„É©„ÉÉ„Ç∞ÔºÜ„Éâ„É≠„ÉÉ„Éó„ÅÆÁõ∏‰∫í‰ΩúÁî®„ÇíÂá¶ÁêÜ„Åô„Çã„Åü„ÇÅ„ÅÆÂ†ÖÁâ¢„Å™„ÉÑ„Éº„É´„Çª„ÉÉ„Éà„ÇíÊèê‰æõ„Åó„Å¶„Åä„Çä„ÄÅ„Ç∑„Éº„É†„É¨„Çπ„Å™„É¶„Éº„Ç∂„Éº„Ç®„ÇØ„Çπ„Éö„É™„Ç®„É≥„Çπ„ÇíÁ∞°Âçò„Å´‰ΩúÊàê„Åß„Åç„Åæ„Åô„ÄÇ  „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„ÄÅ„Ç´„Çπ„Çø„É†„Éâ„É©„ÉÉ„Ç∞„Éè„É≥„Éâ„É´„Å™„Å©„ÄÅ„Åì„ÅÆÂÆüË£Ö„Çí„Åï„Çâ„Å´Âêë‰∏ä„Åï„Åõ„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇËøΩÂä†„ÅÆ„Ç™„Éó„Ç∑„Éß„É≥„ÇÑÂèØËÉΩÊÄß„Å´„Å§„ÅÑ„Å¶„ÅØ„ÄÅ`@dnd-kit/core`„ÅÆ„Éâ„Ç≠„É•„É°„É≥„Éà„ÇíÊé¢Á¥¢„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ"},"_id":"blog/57-react-draggable-list.mdx","_raw":{"sourceFilePath":"blog/57-react-draggable-list.mdx","sourceFileName":"57-react-draggable-list.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/57-react-draggable-list"},"type":"Post","slug":"/blog/57-react-draggable-list","slugAsParams":"57-react-draggable-list"},{"title":"C# WPF„ÅßObservableCollection„ÇíÈùûÂêåÊúü„ÅßÊõ¥Êñ∞„Åô„ÇãÊñπÊ≥ï","description":"WPF„ÅßÈùûÂêåÊúüÊõ¥Êñ∞ÂèØËÉΩ„Å™ObservableCollection„ÇíÂÆüË£Ö„ÄÇAsyncObservableCollection„Å®PageMstCollection„ÅÆ‰æã„ÇíÁ¥π‰ªã","date":"2024-01-30T00:00:00.000Z","lastmod":"2024-01-30T00:00:00.000Z","emoji":"üê±","tags":["csharp"],"published":true,"body":{"raw":" ‰∫ÜËß£„Åó„Åæ„Åó„Åü„ÄÇ‰ª•‰∏ã„ÅØ„ÄÅ`AsyncObservableCollection`„ÅÆÂá¶ÁêÜ„Çí`PageMstCollection`„Å´Áµ±Âêà„Åó„ÅüÂ†¥Âêà„ÅÆË®ò‰∫ã„Å´„Å™„Çä„Åæ„Åô„ÄÇ  ---  WPF„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Åß„ÅØ„ÄÅUI„Çπ„É¨„ÉÉ„Éâ„Å®„Éê„ÉÉ„ÇØ„Ç∞„É©„Ç¶„É≥„Éâ„Çπ„É¨„ÉÉ„Éâ„ÅÆÈñì„Åß„Éá„Éº„Çø„ÇíÂêåÊúü„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ„Åù„ÅÆ„Åü„ÇÅ„ÄÅÈùûÂêåÊúü„Åß„Éá„Éº„Çø„ÇíÂèñÂæó„Åó„ÄÅUI„Å´ÂèçÊò†„Åô„Çã„Åü„ÇÅ„ÅÆObservableCollection„ÇíÂÆüË£Ö„Åô„ÇãÊñπÊ≥ï„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ„Åì„ÅÆË®ò‰∫ã„Åß„ÅØ„ÄÅ„Åù„ÅÆÊñπÊ≥ï„Å´„Å§„ÅÑ„Å¶Ë™¨Êòé„Åó„Åæ„Åô„ÄÇ  ## ObservableCollection„ÅÆÈùûÂêåÊúüÊõ¥Êñ∞  WPF„Åß„ÅØ„ÄÅUI„Å∏„ÅÆÂ§âÊõ¥„ÅØUI„Çπ„É¨„ÉÉ„Éâ„ÅßË°å„Çè„Å™„Åë„Çå„Å∞„Å™„Çä„Åæ„Åõ„Çì„ÄÇ„Åó„Åã„Åó„ÄÅÈùûÂêåÊúüÂá¶ÁêÜ„ÇíË°å„ÅÑ„Å§„Å§UI„ÇíÊõ¥Êñ∞„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„ÇãÂ†¥Âêà„ÄÅ`BindingOperations.EnableCollectionSynchronization`„Å®`lockÊñá`„Çí‰Ωø„ÅÜ„Åì„Å®„ÅßÁ∞°Âçò„Å´ÂÆüÁèæ„Åß„Åç„Åæ„Åô„ÄÇ  ```csharp public class PageMstCollection : ObservableCollection<PageMstViewModelEntity> {     private readonly object _lock = new object();     private readonly IPageMstRepository _pageMstRepository;      public PageMstCollection(IPageMstRepository pageMstRepository)     {         _pageMstRepository = pageMstRepository;         BindingOperations.EnableCollectionSynchronization(this, _lock);     }      public async Task LoadDataAsync()     {         var newData = await Task.Run(() =>         {             return _pageMstRepository.GetData().Select(entity => new PageMstViewModelEntity(entity));         });          lock (_lock)         {             Clear();             foreach (var item in newData)             {                 Add(item);             }         }     } } ```  „Åì„ÅÆ„ÇØ„É©„Çπ„Åß„ÅØ„ÄÅ`LoadDataAsync`„É°„ÇΩ„ÉÉ„ÉâÂÜÖ„Åß`_pageMstRepository`„Åã„ÇâÈùûÂêåÊúü„Å´„Éá„Éº„Çø„ÇíÂèñÂæó„Åó„ÄÅ`lock`Êñá„Çí‰ΩøÁî®„Åó„Å¶UI„Çπ„É¨„ÉÉ„Éâ„ÅßÂÆâÂÖ®„Å´`ObservableCollection`„ÇíÊõ¥Êñ∞„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ  ## ViewModel„ÅÆ‰ΩøÁî®‰æã  ÊúÄÂæå„Å´„ÄÅ„Åì„Çå„Çâ„ÅÆ„ÇØ„É©„Çπ„ÇíViewModel„Åß‰ΩøÁî®„Åô„Çã‰æã„ÇíÁ§∫„Åó„Åæ„Åô„ÄÇ  ```csharp public class MainViewModel : ViewModelBase {     private readonly PageMstCollection _pageMstCollection;      public MainViewModel(IPageMstRepository pageMstRepository)     {         _pageMstCollection = new PageMstCollection(pageMstRepository);         LoadData();     }      private async void LoadData()     {         await _pageMstCollection.LoadDataAsync();         OnPropertyChanged(nameof(PageMstCollection));     }      public ObservableCollection<PageMstViewModelEntity> PageMstCollection => _pageMstCollection; } ```  ViewModel„Åß`LoadDataAsync`„É°„ÇΩ„ÉÉ„Éâ„ÇíÂëº„Å≥Âá∫„Åô„Åì„Å®„Åß„ÄÅ„Éê„ÉÉ„ÇØ„Ç∞„É©„Ç¶„É≥„Éâ„Åß„Éá„Éº„Çø„ÇíÈùûÂêåÊúü„Å´Ë™≠„ÅøËæº„Åø„ÄÅUI„Å´ÂèçÊò†„Åß„Åç„Åæ„Åô„ÄÇ`OnPropertyChanged`„É°„ÇΩ„ÉÉ„Éâ„Çí‰ΩøÁî®„Åó„Å¶„ÄÅ`PageMstCollection`„Éó„É≠„Éë„ÉÜ„Ç£„ÅÆÂ§âÊõ¥„ÇíÈÄöÁü•„Åó„Åæ„Åô„ÄÇ  „Åì„Çå„Åß„ÄÅÈùûÂêåÊúü„Åß„Éá„Éº„Çø„ÇíÊõ¥Êñ∞„Åô„ÇãObservableCollection„Çí‰ΩúÊàê„Åó„ÄÅWPF„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Åß‰ΩøÁî®„Åô„ÇãÊñπÊ≥ï„Åå„Çè„Åã„Çä„Åæ„Åó„Åü„ÄÇ"},"_id":"blog/58-wpf-async-observablecollection.mdx","_raw":{"sourceFilePath":"blog/58-wpf-async-observablecollection.mdx","sourceFileName":"58-wpf-async-observablecollection.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/58-wpf-async-observablecollection"},"type":"Post","slug":"/blog/58-wpf-async-observablecollection","slugAsParams":"58-wpf-async-observablecollection"}]